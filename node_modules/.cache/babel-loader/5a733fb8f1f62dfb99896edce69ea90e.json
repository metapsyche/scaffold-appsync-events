{"ast":null,"code":"var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nimport { forEach, isCollection } from 'iterall';\nimport isInvalid from '../jsutils/isInvalid';\nimport isNullish from '../jsutils/isNullish';\nimport orList from '../jsutils/orList';\nimport suggestionList from '../jsutils/suggestionList';\nimport { GraphQLError } from '../error';\nimport { isScalarType, isEnumType, isInputObjectType, isListType, isNonNullType } from '../type/definition';\n/**\n * Coerces a JavaScript value given a GraphQL Type.\n *\n * Returns either a value which is valid for the provided type or a list of\n * encountered coercion errors.\n *\n */\n\nexport function coerceValue(value, type, blameNode, path) {\n  // A value must be provided if the type is non-null.\n  if (isNonNullType(type)) {\n    if (isNullish(value)) {\n      return ofErrors([coercionError('Expected non-nullable type ' + String(type) + ' not to be null', blameNode, path)]);\n    }\n\n    return coerceValue(value, type.ofType, blameNode, path);\n  }\n\n  if (isNullish(value)) {\n    // Explicitly return the value null.\n    return ofValue(null);\n  }\n\n  if (isScalarType(type)) {\n    // Scalars determine if a value is valid via parseValue(), which can\n    // throw to indicate failure. If it throws, maintain a reference to\n    // the original error.\n    try {\n      var parseResult = type.parseValue(value);\n\n      if (isInvalid(parseResult)) {\n        return ofErrors([coercionError('Expected type ' + type.name, blameNode, path)]);\n      }\n\n      return ofValue(parseResult);\n    } catch (error) {\n      return ofErrors([coercionError('Expected type ' + type.name, blameNode, path, error.message, error)]);\n    }\n  }\n\n  if (isEnumType(type)) {\n    if (typeof value === 'string') {\n      var enumValue = type.getValue(value);\n\n      if (enumValue) {\n        return ofValue(enumValue.value);\n      }\n    }\n\n    var suggestions = suggestionList(String(value), type.getValues().map(function (enumValue) {\n      return enumValue.name;\n    }));\n    var didYouMean = suggestions.length !== 0 ? 'did you mean ' + orList(suggestions) + '?' : undefined;\n    return ofErrors([coercionError('Expected type ' + type.name, blameNode, path, didYouMean)]);\n  }\n\n  if (isListType(type)) {\n    var itemType = type.ofType;\n\n    if (isCollection(value)) {\n      var _errors = void 0;\n\n      var coercedValue = [];\n      forEach(value, function (itemValue, index) {\n        var coercedItem = coerceValue(itemValue, itemType, blameNode, atPath(path, index));\n\n        if (coercedItem.errors) {\n          _errors = add(_errors, coercedItem.errors);\n        } else if (!_errors) {\n          coercedValue.push(coercedItem.value);\n        }\n      });\n      return _errors ? ofErrors(_errors) : ofValue(coercedValue);\n    } // Lists accept a non-list value as a list of one.\n\n\n    var coercedItem = coerceValue(value, itemType, blameNode);\n    return coercedItem.errors ? coercedItem : ofValue([coercedItem.value]);\n  }\n\n  if (isInputObjectType(type)) {\n    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {\n      return ofErrors([coercionError('Expected type ' + type.name + ' to be an object', blameNode, path)]);\n    }\n\n    var _errors2 = void 0;\n\n    var _coercedValue = {};\n    var fields = type.getFields(); // Ensure every defined field is valid.\n\n    for (var fieldName in fields) {\n      if (hasOwnProperty.call(fields, fieldName)) {\n        var field = fields[fieldName];\n        var fieldValue = value[fieldName];\n\n        if (isInvalid(fieldValue)) {\n          if (!isInvalid(field.defaultValue)) {\n            _coercedValue[fieldName] = field.defaultValue;\n          } else if (isNonNullType(field.type)) {\n            _errors2 = add(_errors2, coercionError('Field ' + printPath(atPath(path, fieldName)) + ' of required ' + ('type ' + String(field.type) + ' was not provided'), blameNode));\n          }\n        } else {\n          var coercedField = coerceValue(fieldValue, field.type, blameNode, atPath(path, fieldName));\n\n          if (coercedField.errors) {\n            _errors2 = add(_errors2, coercedField.errors);\n          } else if (!_errors2) {\n            _coercedValue[fieldName] = coercedField.value;\n          }\n        }\n      }\n    } // Ensure every provided field is defined.\n\n\n    for (var _fieldName in value) {\n      if (hasOwnProperty.call(value, _fieldName)) {\n        if (!fields[_fieldName]) {\n          var _suggestions = suggestionList(_fieldName, Object.keys(fields));\n\n          var _didYouMean = _suggestions.length !== 0 ? 'did you mean ' + orList(_suggestions) + '?' : undefined;\n\n          _errors2 = add(_errors2, coercionError('Field \"' + _fieldName + '\" is not defined by type ' + type.name, blameNode, path, _didYouMean));\n        }\n      }\n    }\n\n    return _errors2 ? ofErrors(_errors2) : ofValue(_coercedValue);\n  }\n  /* istanbul ignore next */\n\n\n  throw new Error('Unexpected type: ' + type + '.');\n}\n\nfunction ofValue(value) {\n  return {\n    errors: undefined,\n    value: value\n  };\n}\n\nfunction ofErrors(errors) {\n  return {\n    errors: errors,\n    value: undefined\n  };\n}\n\nfunction add(errors, moreErrors) {\n  return (errors || []).concat(moreErrors);\n}\n\nfunction atPath(prev, key) {\n  return {\n    prev: prev,\n    key: key\n  };\n}\n\nfunction coercionError(message, blameNode, path, subMessage, originalError) {\n  var pathStr = printPath(path); // Return a GraphQLError instance\n\n  return new GraphQLError(message + (pathStr ? ' at ' + pathStr : '') + (subMessage ? '; ' + subMessage : '.'), blameNode, undefined, undefined, undefined, originalError);\n} // Build a string describing the path into the value where the error was found\n\n\nfunction printPath(path) {\n  var pathStr = '';\n  var currentPath = path;\n\n  while (currentPath) {\n    pathStr = (typeof currentPath.key === 'string' ? '.' + currentPath.key : '[' + String(currentPath.key) + ']') + pathStr;\n    currentPath = currentPath.prev;\n  }\n\n  return pathStr ? 'value' + pathStr : '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;","map":{"version":3,"names":["_typeof","Symbol","iterator","obj","constructor","prototype","forEach","isCollection","isInvalid","isNullish","orList","suggestionList","GraphQLError","isScalarType","isEnumType","isInputObjectType","isListType","isNonNullType","coerceValue","value","type","blameNode","path","ofErrors","coercionError","String","ofType","ofValue","parseResult","parseValue","name","error","message","enumValue","getValue","suggestions","getValues","map","didYouMean","length","undefined","itemType","_errors","coercedValue","itemValue","index","coercedItem","atPath","errors","add","push","_errors2","_coercedValue","fields","getFields","fieldName","hasOwnProperty","call","field","fieldValue","defaultValue","printPath","coercedField","_fieldName","_suggestions","Object","keys","_didYouMean","Error","moreErrors","concat","prev","key","subMessage","originalError","pathStr","currentPath"],"sources":["/Users/roaldmaravillas/ro/sandbox/aws-mobile-appsync-events-starter-react/node_modules/aws-appsync/node_modules/graphql/module/utilities/coerceValue.js"],"sourcesContent":["var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport { forEach, isCollection } from 'iterall';\nimport isInvalid from '../jsutils/isInvalid';\nimport isNullish from '../jsutils/isNullish';\nimport orList from '../jsutils/orList';\nimport suggestionList from '../jsutils/suggestionList';\nimport { GraphQLError } from '../error';\n\nimport { isScalarType, isEnumType, isInputObjectType, isListType, isNonNullType } from '../type/definition';\n\n\n/**\n * Coerces a JavaScript value given a GraphQL Type.\n *\n * Returns either a value which is valid for the provided type or a list of\n * encountered coercion errors.\n *\n */\nexport function coerceValue(value, type, blameNode, path) {\n  // A value must be provided if the type is non-null.\n  if (isNonNullType(type)) {\n    if (isNullish(value)) {\n      return ofErrors([coercionError('Expected non-nullable type ' + String(type) + ' not to be null', blameNode, path)]);\n    }\n    return coerceValue(value, type.ofType, blameNode, path);\n  }\n\n  if (isNullish(value)) {\n    // Explicitly return the value null.\n    return ofValue(null);\n  }\n\n  if (isScalarType(type)) {\n    // Scalars determine if a value is valid via parseValue(), which can\n    // throw to indicate failure. If it throws, maintain a reference to\n    // the original error.\n    try {\n      var parseResult = type.parseValue(value);\n      if (isInvalid(parseResult)) {\n        return ofErrors([coercionError('Expected type ' + type.name, blameNode, path)]);\n      }\n      return ofValue(parseResult);\n    } catch (error) {\n      return ofErrors([coercionError('Expected type ' + type.name, blameNode, path, error.message, error)]);\n    }\n  }\n\n  if (isEnumType(type)) {\n    if (typeof value === 'string') {\n      var enumValue = type.getValue(value);\n      if (enumValue) {\n        return ofValue(enumValue.value);\n      }\n    }\n    var suggestions = suggestionList(String(value), type.getValues().map(function (enumValue) {\n      return enumValue.name;\n    }));\n    var didYouMean = suggestions.length !== 0 ? 'did you mean ' + orList(suggestions) + '?' : undefined;\n    return ofErrors([coercionError('Expected type ' + type.name, blameNode, path, didYouMean)]);\n  }\n\n  if (isListType(type)) {\n    var itemType = type.ofType;\n    if (isCollection(value)) {\n      var _errors = void 0;\n      var coercedValue = [];\n      forEach(value, function (itemValue, index) {\n        var coercedItem = coerceValue(itemValue, itemType, blameNode, atPath(path, index));\n        if (coercedItem.errors) {\n          _errors = add(_errors, coercedItem.errors);\n        } else if (!_errors) {\n          coercedValue.push(coercedItem.value);\n        }\n      });\n      return _errors ? ofErrors(_errors) : ofValue(coercedValue);\n    }\n    // Lists accept a non-list value as a list of one.\n    var coercedItem = coerceValue(value, itemType, blameNode);\n    return coercedItem.errors ? coercedItem : ofValue([coercedItem.value]);\n  }\n\n  if (isInputObjectType(type)) {\n    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {\n      return ofErrors([coercionError('Expected type ' + type.name + ' to be an object', blameNode, path)]);\n    }\n    var _errors2 = void 0;\n    var _coercedValue = {};\n    var fields = type.getFields();\n\n    // Ensure every defined field is valid.\n    for (var fieldName in fields) {\n      if (hasOwnProperty.call(fields, fieldName)) {\n        var field = fields[fieldName];\n        var fieldValue = value[fieldName];\n        if (isInvalid(fieldValue)) {\n          if (!isInvalid(field.defaultValue)) {\n            _coercedValue[fieldName] = field.defaultValue;\n          } else if (isNonNullType(field.type)) {\n            _errors2 = add(_errors2, coercionError('Field ' + printPath(atPath(path, fieldName)) + ' of required ' + ('type ' + String(field.type) + ' was not provided'), blameNode));\n          }\n        } else {\n          var coercedField = coerceValue(fieldValue, field.type, blameNode, atPath(path, fieldName));\n          if (coercedField.errors) {\n            _errors2 = add(_errors2, coercedField.errors);\n          } else if (!_errors2) {\n            _coercedValue[fieldName] = coercedField.value;\n          }\n        }\n      }\n    }\n\n    // Ensure every provided field is defined.\n    for (var _fieldName in value) {\n      if (hasOwnProperty.call(value, _fieldName)) {\n        if (!fields[_fieldName]) {\n          var _suggestions = suggestionList(_fieldName, Object.keys(fields));\n          var _didYouMean = _suggestions.length !== 0 ? 'did you mean ' + orList(_suggestions) + '?' : undefined;\n          _errors2 = add(_errors2, coercionError('Field \"' + _fieldName + '\" is not defined by type ' + type.name, blameNode, path, _didYouMean));\n        }\n      }\n    }\n\n    return _errors2 ? ofErrors(_errors2) : ofValue(_coercedValue);\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unexpected type: ' + type + '.');\n}\n\nfunction ofValue(value) {\n  return { errors: undefined, value: value };\n}\n\nfunction ofErrors(errors) {\n  return { errors: errors, value: undefined };\n}\n\nfunction add(errors, moreErrors) {\n  return (errors || []).concat(moreErrors);\n}\n\nfunction atPath(prev, key) {\n  return { prev: prev, key: key };\n}\n\nfunction coercionError(message, blameNode, path, subMessage, originalError) {\n  var pathStr = printPath(path);\n  // Return a GraphQLError instance\n  return new GraphQLError(message + (pathStr ? ' at ' + pathStr : '') + (subMessage ? '; ' + subMessage : '.'), blameNode, undefined, undefined, undefined, originalError);\n}\n\n// Build a string describing the path into the value where the error was found\nfunction printPath(path) {\n  var pathStr = '';\n  var currentPath = path;\n  while (currentPath) {\n    pathStr = (typeof currentPath.key === 'string' ? '.' + currentPath.key : '[' + String(currentPath.key) + ']') + pathStr;\n    currentPath = currentPath.prev;\n  }\n  return pathStr ? 'value' + pathStr : '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;"],"mappings":"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"},"metadata":{},"sourceType":"module"}