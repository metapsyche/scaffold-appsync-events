{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { getOperationName } from 'apollo-utilities';\nimport Observable from 'zen-observable-ts';\nimport { print } from 'graphql/language/printer';\nexport function validateOperation(operation) {\n  var OPERATION_FIELDS = ['query', 'operationName', 'variables', 'extensions', 'context'];\n\n  for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n    var key = _a[_i];\n\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw new Error(\"illegal argument: \" + key);\n    }\n  }\n\n  return operation;\n}\n\nvar LinkError =\n/** @class */\nfunction (_super) {\n  __extends(LinkError, _super);\n\n  function LinkError(message, link) {\n    var _this = _super.call(this, message) || this;\n\n    _this.link = link;\n    return _this;\n  }\n\n  return LinkError;\n}(Error);\n\nexport { LinkError };\nexport function isTerminating(link) {\n  return link.request.length <= 1;\n}\nexport function toPromise(observable) {\n  var completed = false;\n  return new Promise(function (resolve, reject) {\n    observable.subscribe({\n      next: function (data) {\n        if (completed) {\n          console.warn(\"Promise Wrapper does not support multiple results from Observable\");\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject\n    });\n  });\n} // backwards compat\n\nexport var makePromise = toPromise;\nexport function fromPromise(promise) {\n  return new Observable(function (observer) {\n    promise.then(function (value) {\n      observer.next(value);\n      observer.complete();\n    }).catch(observer.error.bind(observer));\n  });\n}\nexport function fromError(errorValue) {\n  return new Observable(function (observer) {\n    observer.error(errorValue);\n  });\n}\nexport function transformOperation(operation) {\n  var transformedOperation = {\n    variables: operation.variables || {},\n    extensions: operation.extensions || {},\n    operationName: operation.operationName,\n    query: operation.query\n  }; // best guess at an operation name\n\n  if (!transformedOperation.operationName) {\n    transformedOperation.operationName = typeof transformedOperation.query !== 'string' ? getOperationName(transformedOperation.query) : '';\n  }\n\n  return transformedOperation;\n}\nexport function createOperation(starting, operation) {\n  var context = __assign({}, starting);\n\n  var setContext = function (next) {\n    if (typeof next === 'function') {\n      context = __assign({}, context, next(context));\n    } else {\n      context = __assign({}, context, next);\n    }\n  };\n\n  var getContext = function () {\n    return __assign({}, context);\n  };\n\n  Object.defineProperty(operation, 'setContext', {\n    enumerable: false,\n    value: setContext\n  });\n  Object.defineProperty(operation, 'getContext', {\n    enumerable: false,\n    value: getContext\n  });\n  Object.defineProperty(operation, 'toKey', {\n    enumerable: false,\n    value: function () {\n      return getKey(operation);\n    }\n  });\n  return operation;\n}\nexport function getKey(operation) {\n  // XXX we're assuming here that variables will be serialized in the same order.\n  // that might not always be true\n  return print(operation.query) + \"|\" + JSON.stringify(operation.variables) + \"|\" + operation.operationName;\n}","map":{"version":3,"sources":["../src/linkUtils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { getOperationName } from 'apollo-utilities';\nimport Observable from 'zen-observable-ts';\nimport { print } from 'graphql/language/printer';\nexport function validateOperation(operation) {\n    var OPERATION_FIELDS = [\n        'query',\n        'operationName',\n        'variables',\n        'extensions',\n        'context',\n    ];\n    for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (OPERATION_FIELDS.indexOf(key) < 0) {\n            throw new Error(\"illegal argument: \" + key);\n        }\n    }\n    return operation;\n}\nvar LinkError = /** @class */ (function (_super) {\n    __extends(LinkError, _super);\n    function LinkError(message, link) {\n        var _this = _super.call(this, message) || this;\n        _this.link = link;\n        return _this;\n    }\n    return LinkError;\n}(Error));\nexport { LinkError };\nexport function isTerminating(link) {\n    return link.request.length <= 1;\n}\nexport function toPromise(observable) {\n    var completed = false;\n    return new Promise(function (resolve, reject) {\n        observable.subscribe({\n            next: function (data) {\n                if (completed) {\n                    console.warn(\"Promise Wrapper does not support multiple results from Observable\");\n                }\n                else {\n                    completed = true;\n                    resolve(data);\n                }\n            },\n            error: reject,\n        });\n    });\n}\n// backwards compat\nexport var makePromise = toPromise;\nexport function fromPromise(promise) {\n    return new Observable(function (observer) {\n        promise\n            .then(function (value) {\n            observer.next(value);\n            observer.complete();\n        })\n            .catch(observer.error.bind(observer));\n    });\n}\nexport function fromError(errorValue) {\n    return new Observable(function (observer) {\n        observer.error(errorValue);\n    });\n}\nexport function transformOperation(operation) {\n    var transformedOperation = {\n        variables: operation.variables || {},\n        extensions: operation.extensions || {},\n        operationName: operation.operationName,\n        query: operation.query,\n    };\n    // best guess at an operation name\n    if (!transformedOperation.operationName) {\n        transformedOperation.operationName =\n            typeof transformedOperation.query !== 'string'\n                ? getOperationName(transformedOperation.query)\n                : '';\n    }\n    return transformedOperation;\n}\nexport function createOperation(starting, operation) {\n    var context = __assign({}, starting);\n    var setContext = function (next) {\n        if (typeof next === 'function') {\n            context = __assign({}, context, next(context));\n        }\n        else {\n            context = __assign({}, context, next);\n        }\n    };\n    var getContext = function () { return (__assign({}, context)); };\n    Object.defineProperty(operation, 'setContext', {\n        enumerable: false,\n        value: setContext,\n    });\n    Object.defineProperty(operation, 'getContext', {\n        enumerable: false,\n        value: getContext,\n    });\n    Object.defineProperty(operation, 'toKey', {\n        enumerable: false,\n        value: function () { return getKey(operation); },\n    });\n    return operation;\n}\nexport function getKey(operation) {\n    // XXX we're assuming here that variables will be serialized in the same order.\n    // that might not always be true\n    return print(operation.query) + \"|\" + JSON.stringify(operation.variables) + \"|\" + operation.operationName;\n}\n//# sourceMappingURL=linkUtils.js.map"]},"metadata":{},"sourceType":"module"}