{"ast":null,"code":"import { GraphQLError } from '../../error';\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nexport function unusedFragMessage(fragName) {\n  return 'Fragment \"' + fragName + '\" is never used.';\n}\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n */\n\nexport function NoUnusedFragments(context) {\n  var operationDefs = [];\n  var fragmentDefs = [];\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n    Document: {\n      leave: function leave() {\n        var fragmentNameUsed = Object.create(null);\n        operationDefs.forEach(function (operation) {\n          context.getRecursivelyReferencedFragments(operation).forEach(function (fragment) {\n            fragmentNameUsed[fragment.name.value] = true;\n          });\n        });\n        fragmentDefs.forEach(function (fragmentDef) {\n          var fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new GraphQLError(unusedFragMessage(fragName), [fragmentDef]));\n          }\n        });\n      }\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","unusedFragMessage","fragName","NoUnusedFragments","context","operationDefs","fragmentDefs","OperationDefinition","node","push","FragmentDefinition","Document","leave","fragmentNameUsed","Object","create","forEach","operation","getRecursivelyReferencedFragments","fragment","name","value","fragmentDef","reportError"],"sources":["/Users/roaldmaravillas/ro/github/scaffold-appsync-events/node_modules/aws-appsync/node_modules/graphql/module/validation/rules/NoUnusedFragments.js"],"sourcesContent":["\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             * \n                                             */\n\nexport function unusedFragMessage(fragName) {\n  return 'Fragment \"' + fragName + '\" is never used.';\n}\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n */\nexport function NoUnusedFragments(context) {\n  var operationDefs = [];\n  var fragmentDefs = [];\n\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave: function leave() {\n        var fragmentNameUsed = Object.create(null);\n        operationDefs.forEach(function (operation) {\n          context.getRecursivelyReferencedFragments(operation).forEach(function (fragment) {\n            fragmentNameUsed[fragment.name.value] = true;\n          });\n        });\n\n        fragmentDefs.forEach(function (fragmentDef) {\n          var fragName = fragmentDef.name.value;\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new GraphQLError(unusedFragMessage(fragName), [fragmentDef]));\n          }\n        });\n      }\n    }\n  };\n}"],"mappings":"AACA,SAASA,YAAT,QAA6B,aAA7B;AAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;EAC1C,OAAO,eAAeA,QAAf,GAA0B,kBAAjC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,iBAAT,CAA2BC,OAA3B,EAAoC;EACzC,IAAIC,aAAa,GAAG,EAApB;EACA,IAAIC,YAAY,GAAG,EAAnB;EAEA,OAAO;IACLC,mBAAmB,EAAE,SAASA,mBAAT,CAA6BC,IAA7B,EAAmC;MACtDH,aAAa,CAACI,IAAd,CAAmBD,IAAnB;MACA,OAAO,KAAP;IACD,CAJI;IAKLE,kBAAkB,EAAE,SAASA,kBAAT,CAA4BF,IAA5B,EAAkC;MACpDF,YAAY,CAACG,IAAb,CAAkBD,IAAlB;MACA,OAAO,KAAP;IACD,CARI;IAULG,QAAQ,EAAE;MACRC,KAAK,EAAE,SAASA,KAAT,GAAiB;QACtB,IAAIC,gBAAgB,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAvB;QACAV,aAAa,CAACW,OAAd,CAAsB,UAAUC,SAAV,EAAqB;UACzCb,OAAO,CAACc,iCAAR,CAA0CD,SAA1C,EAAqDD,OAArD,CAA6D,UAAUG,QAAV,EAAoB;YAC/EN,gBAAgB,CAACM,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAhB,GAAwC,IAAxC;UACD,CAFD;QAGD,CAJD;QAMAf,YAAY,CAACU,OAAb,CAAqB,UAAUM,WAAV,EAAuB;UAC1C,IAAIpB,QAAQ,GAAGoB,WAAW,CAACF,IAAZ,CAAiBC,KAAhC;;UACA,IAAIR,gBAAgB,CAACX,QAAD,CAAhB,KAA+B,IAAnC,EAAyC;YACvCE,OAAO,CAACmB,WAAR,CAAoB,IAAIvB,YAAJ,CAAiBC,iBAAiB,CAACC,QAAD,CAAlC,EAA8C,CAACoB,WAAD,CAA9C,CAApB;UACD;QACF,CALD;MAMD;IAfO;EAVL,CAAP;AA4BD"},"metadata":{},"sourceType":"module"}