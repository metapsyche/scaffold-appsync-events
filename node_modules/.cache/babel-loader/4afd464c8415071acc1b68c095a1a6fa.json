{"ast":null,"code":"var AWS = require('./core');\n\nvar SequentialExecutor = require('./sequential_executor');\n\nvar DISCOVER_ENDPOINT = require('./discover_endpoint').discoverEndpoint;\n/**\n * The namespace used to register global event listeners for request building\n * and sending.\n */\n\n\nAWS.EventListeners = {\n  /**\n   * @!attribute VALIDATE_CREDENTIALS\n   *   A request listener that validates whether the request is being\n   *   sent with credentials.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating credentials\n   *     var listener = AWS.EventListeners.Core.VALIDATE_CREDENTIALS;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_REGION\n   *   A request listener that validates whether the region is set\n   *   for a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating region configuration\n   *     var listener = AWS.EventListeners.Core.VALIDATE_REGION;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_PARAMETERS\n   *   A request listener that validates input parameters in a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating parameters\n   *     var listener = AWS.EventListeners.Core.VALIDATE_PARAMETERS;\n   *     request.removeListener('validate', listener);\n   *   @example Disable parameter validation globally\n   *     AWS.EventListeners.Core.removeListener('validate',\n   *       AWS.EventListeners.Core.VALIDATE_REGION);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute SEND\n   *   A request listener that initiates the HTTP connection for a\n   *   request being sent. Handles the {AWS.Request~send 'send' Request event}\n   *   @example Replacing the HTTP handler\n   *     var listener = AWS.EventListeners.Core.SEND;\n   *     request.removeListener('send', listener);\n   *     request.on('send', function(response) {\n   *       customHandler.send(response);\n   *     });\n   *   @return [Function]\n   *   @readonly\n   * @!attribute HTTP_DATA\n   *   A request listener that reads data from the HTTP connection in order\n   *   to build the response data.\n   *   Handles the {AWS.Request~httpData 'httpData' Request event}.\n   *   Remove this handler if you are overriding the 'httpData' event and\n   *   do not want extra data processing and buffering overhead.\n   *   @example Disabling default data processing\n   *     var listener = AWS.EventListeners.Core.HTTP_DATA;\n   *     request.removeListener('httpData', listener);\n   *   @return [Function]\n   *   @readonly\n   */\n  Core: {}\n  /* doc hack */\n\n};\n/**\n * @api private\n */\n\nfunction getOperationAuthtype(req) {\n  if (!req.service.api.operations) {\n    return '';\n  }\n\n  var operation = req.service.api.operations[req.operation];\n  return operation ? operation.authtype : '';\n}\n\nAWS.EventListeners = {\n  Core: new SequentialExecutor().addNamedListeners(function (add, addAsync) {\n    addAsync('VALIDATE_CREDENTIALS', 'validate', function VALIDATE_CREDENTIALS(req, done) {\n      if (!req.service.api.signatureVersion) return done(); // none\n\n      req.service.config.getCredentials(function (err) {\n        if (err) {\n          req.response.error = AWS.util.error(err, {\n            code: 'CredentialsError',\n            message: 'Missing credentials in config'\n          });\n        }\n\n        done();\n      });\n    });\n    add('VALIDATE_REGION', 'validate', function VALIDATE_REGION(req) {\n      if (!req.service.config.region && !req.service.isGlobalEndpoint) {\n        req.response.error = AWS.util.error(new Error(), {\n          code: 'ConfigError',\n          message: 'Missing region in config'\n        });\n      }\n    });\n    add('BUILD_IDEMPOTENCY_TOKENS', 'validate', function BUILD_IDEMPOTENCY_TOKENS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n\n      var operation = req.service.api.operations[req.operation];\n\n      if (!operation) {\n        return;\n      }\n\n      var idempotentMembers = operation.idempotentMembers;\n\n      if (!idempotentMembers.length) {\n        return;\n      } // creates a copy of params so user's param object isn't mutated\n\n\n      var params = AWS.util.copy(req.params);\n\n      for (var i = 0, iLen = idempotentMembers.length; i < iLen; i++) {\n        if (!params[idempotentMembers[i]]) {\n          // add the member\n          params[idempotentMembers[i]] = AWS.util.uuid.v4();\n        }\n      }\n\n      req.params = params;\n    });\n    add('VALIDATE_PARAMETERS', 'validate', function VALIDATE_PARAMETERS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n\n      var rules = req.service.api.operations[req.operation].input;\n      var validation = req.service.config.paramValidation;\n      new AWS.ParamValidator(validation).validate(rules, req.params);\n    });\n    addAsync('COMPUTE_SHA256', 'afterBuild', function COMPUTE_SHA256(req, done) {\n      req.haltHandlersOnError();\n\n      if (!req.service.api.operations) {\n        return;\n      }\n\n      var operation = req.service.api.operations[req.operation];\n      var authtype = operation ? operation.authtype : '';\n      if (!req.service.api.signatureVersion && !authtype) return done(); // none\n\n      if (req.service.getSignerClass(req) === AWS.Signers.V4) {\n        var body = req.httpRequest.body || '';\n\n        if (authtype.indexOf('unsigned-body') >= 0) {\n          req.httpRequest.headers['X-Amz-Content-Sha256'] = 'UNSIGNED-PAYLOAD';\n          return done();\n        }\n\n        AWS.util.computeSha256(body, function (err, sha) {\n          if (err) {\n            done(err);\n          } else {\n            req.httpRequest.headers['X-Amz-Content-Sha256'] = sha;\n            done();\n          }\n        });\n      } else {\n        done();\n      }\n    });\n    add('SET_CONTENT_LENGTH', 'afterBuild', function SET_CONTENT_LENGTH(req) {\n      var authtype = getOperationAuthtype(req);\n      var payloadMember = AWS.util.getRequestPayloadShape(req);\n\n      if (req.httpRequest.headers['Content-Length'] === undefined) {\n        try {\n          var length = AWS.util.string.byteLength(req.httpRequest.body);\n          req.httpRequest.headers['Content-Length'] = length;\n        } catch (err) {\n          if (payloadMember && payloadMember.isStreaming) {\n            if (payloadMember.requiresLength) {\n              //streaming payload requires length(s3, glacier)\n              throw err;\n            } else if (authtype.indexOf('unsigned-body') >= 0) {\n              //unbounded streaming payload(lex, mediastore)\n              req.httpRequest.headers['Transfer-Encoding'] = 'chunked';\n              return;\n            } else {\n              throw err;\n            }\n          }\n\n          throw err;\n        }\n      }\n    });\n    add('SET_HTTP_HOST', 'afterBuild', function SET_HTTP_HOST(req) {\n      req.httpRequest.headers['Host'] = req.httpRequest.endpoint.host;\n    });\n    add('RESTART', 'restart', function RESTART() {\n      var err = this.response.error;\n      if (!err || !err.retryable) return;\n      this.httpRequest = new AWS.HttpRequest(this.service.endpoint, this.service.region);\n\n      if (this.response.retryCount < this.service.config.maxRetries) {\n        this.response.retryCount++;\n      } else {\n        this.response.error = null;\n      }\n    });\n    var addToHead = true;\n    addAsync('DISCOVER_ENDPOINT', 'sign', DISCOVER_ENDPOINT, addToHead);\n    addAsync('SIGN', 'sign', function SIGN(req, done) {\n      var service = req.service;\n      var operations = req.service.api.operations || {};\n      var operation = operations[req.operation];\n      var authtype = operation ? operation.authtype : '';\n      if (!service.api.signatureVersion && !authtype) return done(); // none\n\n      service.config.getCredentials(function (err, credentials) {\n        if (err) {\n          req.response.error = err;\n          return done();\n        }\n\n        try {\n          var date = service.getSkewCorrectedDate();\n          var SignerClass = service.getSignerClass(req);\n          var signer = new SignerClass(req.httpRequest, service.api.signingName || service.api.endpointPrefix, {\n            signatureCache: service.config.signatureCache,\n            operation: operation,\n            signatureVersion: service.api.signatureVersion\n          });\n          signer.setServiceClientId(service._clientId); // clear old authorization headers\n\n          delete req.httpRequest.headers['Authorization'];\n          delete req.httpRequest.headers['Date'];\n          delete req.httpRequest.headers['X-Amz-Date']; // add new authorization\n\n          signer.addAuthorization(credentials, date);\n          req.signedAt = date;\n        } catch (e) {\n          req.response.error = e;\n        }\n\n        done();\n      });\n    });\n    add('VALIDATE_RESPONSE', 'validateResponse', function VALIDATE_RESPONSE(resp) {\n      if (this.service.successfulResponse(resp, this)) {\n        resp.data = {};\n        resp.error = null;\n      } else {\n        resp.data = null;\n        resp.error = AWS.util.error(new Error(), {\n          code: 'UnknownError',\n          message: 'An unknown error occurred.'\n        });\n      }\n    });\n    addAsync('SEND', 'send', function SEND(resp, done) {\n      resp.httpResponse._abortCallback = done;\n      resp.error = null;\n      resp.data = null;\n\n      function callback(httpResp) {\n        resp.httpResponse.stream = httpResp;\n        var stream = resp.request.httpRequest.stream;\n        var service = resp.request.service;\n        var api = service.api;\n        var operationName = resp.request.operation;\n        var operation = api.operations[operationName] || {};\n        httpResp.on('headers', function onHeaders(statusCode, headers, statusMessage) {\n          resp.request.emit('httpHeaders', [statusCode, headers, resp, statusMessage]);\n\n          if (!resp.httpResponse.streaming) {\n            if (AWS.HttpClient.streamsApiVersion === 2) {\n              // streams2 API check\n              // if we detect event streams, we're going to have to\n              // return the stream immediately\n              if (operation.hasEventOutput && service.successfulResponse(resp)) {\n                // skip reading the IncomingStream\n                resp.request.emit('httpDone');\n                done();\n                return;\n              }\n\n              httpResp.on('readable', function onReadable() {\n                var data = httpResp.read();\n\n                if (data !== null) {\n                  resp.request.emit('httpData', [data, resp]);\n                }\n              });\n            } else {\n              // legacy streams API\n              httpResp.on('data', function onData(data) {\n                resp.request.emit('httpData', [data, resp]);\n              });\n            }\n          }\n        });\n        httpResp.on('end', function onEnd() {\n          if (!stream || !stream.didCallback) {\n            if (AWS.HttpClient.streamsApiVersion === 2 && operation.hasEventOutput && service.successfulResponse(resp)) {\n              // don't concatenate response chunks when streaming event stream data when response is successful\n              return;\n            }\n\n            resp.request.emit('httpDone');\n            done();\n          }\n        });\n      }\n\n      function progress(httpResp) {\n        httpResp.on('sendProgress', function onSendProgress(value) {\n          resp.request.emit('httpUploadProgress', [value, resp]);\n        });\n        httpResp.on('receiveProgress', function onReceiveProgress(value) {\n          resp.request.emit('httpDownloadProgress', [value, resp]);\n        });\n      }\n\n      function error(err) {\n        if (err.code !== 'RequestAbortedError') {\n          var errCode = err.code === 'TimeoutError' ? err.code : 'NetworkingError';\n          err = AWS.util.error(err, {\n            code: errCode,\n            region: resp.request.httpRequest.region,\n            hostname: resp.request.httpRequest.endpoint.hostname,\n            retryable: true\n          });\n        }\n\n        resp.error = err;\n        resp.request.emit('httpError', [resp.error, resp], function () {\n          done();\n        });\n      }\n\n      function executeSend() {\n        var http = AWS.HttpClient.getInstance();\n        var httpOptions = resp.request.service.config.httpOptions || {};\n\n        try {\n          var stream = http.handleRequest(resp.request.httpRequest, httpOptions, callback, error);\n          progress(stream);\n        } catch (err) {\n          error(err);\n        }\n      }\n\n      var timeDiff = (resp.request.service.getSkewCorrectedDate() - this.signedAt) / 1000;\n\n      if (timeDiff >= 60 * 10) {\n        // if we signed 10min ago, re-sign\n        this.emit('sign', [this], function (err) {\n          if (err) done(err);else executeSend();\n        });\n      } else {\n        executeSend();\n      }\n    });\n    add('HTTP_HEADERS', 'httpHeaders', function HTTP_HEADERS(statusCode, headers, resp, statusMessage) {\n      resp.httpResponse.statusCode = statusCode;\n      resp.httpResponse.statusMessage = statusMessage;\n      resp.httpResponse.headers = headers;\n      resp.httpResponse.body = AWS.util.buffer.toBuffer('');\n      resp.httpResponse.buffers = [];\n      resp.httpResponse.numBytes = 0;\n      var dateHeader = headers.date || headers.Date;\n      var service = resp.request.service;\n\n      if (dateHeader) {\n        var serverTime = Date.parse(dateHeader);\n\n        if (service.config.correctClockSkew && service.isClockSkewed(serverTime)) {\n          service.applyClockOffset(serverTime);\n        }\n      }\n    });\n    add('HTTP_DATA', 'httpData', function HTTP_DATA(chunk, resp) {\n      if (chunk) {\n        if (AWS.util.isNode()) {\n          resp.httpResponse.numBytes += chunk.length;\n          var total = resp.httpResponse.headers['content-length'];\n          var progress = {\n            loaded: resp.httpResponse.numBytes,\n            total: total\n          };\n          resp.request.emit('httpDownloadProgress', [progress, resp]);\n        }\n\n        resp.httpResponse.buffers.push(AWS.util.buffer.toBuffer(chunk));\n      }\n    });\n    add('HTTP_DONE', 'httpDone', function HTTP_DONE(resp) {\n      // convert buffers array into single buffer\n      if (resp.httpResponse.buffers && resp.httpResponse.buffers.length > 0) {\n        var body = AWS.util.buffer.concat(resp.httpResponse.buffers);\n        resp.httpResponse.body = body;\n      }\n\n      delete resp.httpResponse.numBytes;\n      delete resp.httpResponse.buffers;\n    });\n    add('FINALIZE_ERROR', 'retry', function FINALIZE_ERROR(resp) {\n      if (resp.httpResponse.statusCode) {\n        resp.error.statusCode = resp.httpResponse.statusCode;\n\n        if (resp.error.retryable === undefined) {\n          resp.error.retryable = this.service.retryableError(resp.error, this);\n        }\n      }\n    });\n    add('INVALIDATE_CREDENTIALS', 'retry', function INVALIDATE_CREDENTIALS(resp) {\n      if (!resp.error) return;\n\n      switch (resp.error.code) {\n        case 'RequestExpired': // EC2 only\n\n        case 'ExpiredTokenException':\n        case 'ExpiredToken':\n          resp.error.retryable = true;\n          resp.request.service.config.credentials.expired = true;\n      }\n    });\n    add('EXPIRED_SIGNATURE', 'retry', function EXPIRED_SIGNATURE(resp) {\n      var err = resp.error;\n      if (!err) return;\n\n      if (typeof err.code === 'string' && typeof err.message === 'string') {\n        if (err.code.match(/Signature/) && err.message.match(/expired/)) {\n          resp.error.retryable = true;\n        }\n      }\n    });\n    add('CLOCK_SKEWED', 'retry', function CLOCK_SKEWED(resp) {\n      if (!resp.error) return;\n\n      if (this.service.clockSkewError(resp.error) && this.service.config.correctClockSkew) {\n        resp.error.retryable = true;\n      }\n    });\n    add('REDIRECT', 'retry', function REDIRECT(resp) {\n      if (resp.error && resp.error.statusCode >= 300 && resp.error.statusCode < 400 && resp.httpResponse.headers['location']) {\n        this.httpRequest.endpoint = new AWS.Endpoint(resp.httpResponse.headers['location']);\n        this.httpRequest.headers['Host'] = this.httpRequest.endpoint.host;\n        resp.error.redirect = true;\n        resp.error.retryable = true;\n      }\n    });\n    add('RETRY_CHECK', 'retry', function RETRY_CHECK(resp) {\n      if (resp.error) {\n        if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.error.retryDelay = 0;\n        } else if (resp.retryCount < resp.maxRetries) {\n          resp.error.retryDelay = this.service.retryDelays(resp.retryCount) || 0;\n        }\n      }\n    });\n    addAsync('RESET_RETRY_STATE', 'afterRetry', function RESET_RETRY_STATE(resp, done) {\n      var delay,\n          willRetry = false;\n\n      if (resp.error) {\n        delay = resp.error.retryDelay || 0;\n\n        if (resp.error.retryable && resp.retryCount < resp.maxRetries) {\n          resp.retryCount++;\n          willRetry = true;\n        } else if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.redirectCount++;\n          willRetry = true;\n        }\n      }\n\n      if (willRetry) {\n        resp.error = null;\n        setTimeout(done, delay);\n      } else {\n        done();\n      }\n    });\n  }),\n  CorePost: new SequentialExecutor().addNamedListeners(function (add) {\n    add('EXTRACT_REQUEST_ID', 'extractData', AWS.util.extractRequestId);\n    add('EXTRACT_REQUEST_ID', 'extractError', AWS.util.extractRequestId);\n    add('ENOTFOUND_ERROR', 'httpError', function ENOTFOUND_ERROR(err) {\n      if (err.code === 'NetworkingError' && err.errno === 'ENOTFOUND') {\n        var message = 'Inaccessible host: `' + err.hostname + '\\'. This service may not be available in the `' + err.region + '\\' region.';\n        this.response.error = AWS.util.error(new Error(message), {\n          code: 'UnknownEndpoint',\n          region: err.region,\n          hostname: err.hostname,\n          retryable: true,\n          originalError: err\n        });\n      }\n    });\n  }),\n  Logger: new SequentialExecutor().addNamedListeners(function (add) {\n    add('LOG_REQUEST', 'complete', function LOG_REQUEST(resp) {\n      var req = resp.request;\n      var logger = req.service.config.logger;\n      if (!logger) return;\n\n      function filterSensitiveLog(inputShape, shape) {\n        if (!shape) {\n          return shape;\n        }\n\n        switch (inputShape.type) {\n          case 'structure':\n            var struct = {};\n            AWS.util.each(shape, function (subShapeName, subShape) {\n              if (Object.prototype.hasOwnProperty.call(inputShape.members, subShapeName)) {\n                struct[subShapeName] = filterSensitiveLog(inputShape.members[subShapeName], subShape);\n              } else {\n                struct[subShapeName] = subShape;\n              }\n            });\n            return struct;\n\n          case 'list':\n            var list = [];\n            AWS.util.arrayEach(shape, function (subShape, index) {\n              list.push(filterSensitiveLog(inputShape.member, subShape));\n            });\n            return list;\n\n          case 'map':\n            var map = {};\n            AWS.util.each(shape, function (key, value) {\n              map[key] = filterSensitiveLog(inputShape.value, value);\n            });\n            return map;\n\n          default:\n            if (inputShape.isSensitive) {\n              return '***SensitiveInformation***';\n            } else {\n              return shape;\n            }\n\n        }\n      }\n\n      function buildMessage() {\n        var time = resp.request.service.getSkewCorrectedDate().getTime();\n        var delta = (time - req.startTime.getTime()) / 1000;\n        var ansi = logger.isTTY ? true : false;\n        var status = resp.httpResponse.statusCode;\n        var censoredParams = req.params;\n\n        if (req.service.api.operations && req.service.api.operations[req.operation] && req.service.api.operations[req.operation].input) {\n          var inputShape = req.service.api.operations[req.operation].input;\n          censoredParams = filterSensitiveLog(inputShape, req.params);\n        }\n\n        var params = require('util').inspect(censoredParams, true, null);\n\n        var message = '';\n        if (ansi) message += '\\x1B[33m';\n        message += '[AWS ' + req.service.serviceIdentifier + ' ' + status;\n        message += ' ' + delta.toString() + 's ' + resp.retryCount + ' retries]';\n        if (ansi) message += '\\x1B[0;1m';\n        message += ' ' + AWS.util.string.lowerFirst(req.operation);\n        message += '(' + params + ')';\n        if (ansi) message += '\\x1B[0m';\n        return message;\n      }\n\n      var line = buildMessage();\n\n      if (typeof logger.log === 'function') {\n        logger.log(line);\n      } else if (typeof logger.write === 'function') {\n        logger.write(line + '\\n');\n      }\n    });\n  }),\n  Json: new SequentialExecutor().addNamedListeners(function (add) {\n    var svc = require('./protocol/json');\n\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n  Rest: new SequentialExecutor().addNamedListeners(function (add) {\n    var svc = require('./protocol/rest');\n\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n  RestJson: new SequentialExecutor().addNamedListeners(function (add) {\n    var svc = require('./protocol/rest_json');\n\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n  RestXml: new SequentialExecutor().addNamedListeners(function (add) {\n    var svc = require('./protocol/rest_xml');\n\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n  Query: new SequentialExecutor().addNamedListeners(function (add) {\n    var svc = require('./protocol/query');\n\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  })\n};","map":{"version":3,"names":["AWS","require","SequentialExecutor","DISCOVER_ENDPOINT","discoverEndpoint","EventListeners","Core","getOperationAuthtype","req","service","api","operations","operation","authtype","addNamedListeners","add","addAsync","VALIDATE_CREDENTIALS","done","signatureVersion","config","getCredentials","err","response","error","util","code","message","VALIDATE_REGION","region","isGlobalEndpoint","Error","BUILD_IDEMPOTENCY_TOKENS","idempotentMembers","length","params","copy","i","iLen","uuid","v4","VALIDATE_PARAMETERS","rules","input","validation","paramValidation","ParamValidator","validate","COMPUTE_SHA256","haltHandlersOnError","getSignerClass","Signers","V4","body","httpRequest","indexOf","headers","computeSha256","sha","SET_CONTENT_LENGTH","payloadMember","getRequestPayloadShape","undefined","string","byteLength","isStreaming","requiresLength","SET_HTTP_HOST","endpoint","host","RESTART","retryable","HttpRequest","retryCount","maxRetries","addToHead","SIGN","credentials","date","getSkewCorrectedDate","SignerClass","signer","signingName","endpointPrefix","signatureCache","setServiceClientId","_clientId","addAuthorization","signedAt","e","VALIDATE_RESPONSE","resp","successfulResponse","data","SEND","httpResponse","_abortCallback","callback","httpResp","stream","request","operationName","on","onHeaders","statusCode","statusMessage","emit","streaming","HttpClient","streamsApiVersion","hasEventOutput","onReadable","read","onData","onEnd","didCallback","progress","onSendProgress","value","onReceiveProgress","errCode","hostname","executeSend","http","getInstance","httpOptions","handleRequest","timeDiff","HTTP_HEADERS","buffer","toBuffer","buffers","numBytes","dateHeader","Date","serverTime","parse","correctClockSkew","isClockSkewed","applyClockOffset","HTTP_DATA","chunk","isNode","total","loaded","push","HTTP_DONE","concat","FINALIZE_ERROR","retryableError","INVALIDATE_CREDENTIALS","expired","EXPIRED_SIGNATURE","match","CLOCK_SKEWED","clockSkewError","REDIRECT","Endpoint","redirect","RETRY_CHECK","redirectCount","maxRedirects","retryDelay","retryDelays","RESET_RETRY_STATE","delay","willRetry","setTimeout","CorePost","extractRequestId","ENOTFOUND_ERROR","errno","originalError","Logger","LOG_REQUEST","logger","filterSensitiveLog","inputShape","shape","type","struct","each","subShapeName","subShape","Object","prototype","hasOwnProperty","call","members","list","arrayEach","index","member","map","key","isSensitive","buildMessage","time","getTime","delta","startTime","ansi","isTTY","status","censoredParams","inspect","serviceIdentifier","toString","lowerFirst","line","log","write","Json","svc","buildRequest","extractData","extractError","Rest","RestJson","RestXml","Query"],"sources":["/Users/roaldmaravillas/ro/sandbox/aws-mobile-appsync-events-starter-react/node_modules/aws-sdk/lib/event_listeners.js"],"sourcesContent":["var AWS = require('./core');\nvar SequentialExecutor = require('./sequential_executor');\nvar DISCOVER_ENDPOINT = require('./discover_endpoint').discoverEndpoint;\n/**\n * The namespace used to register global event listeners for request building\n * and sending.\n */\nAWS.EventListeners = {\n  /**\n   * @!attribute VALIDATE_CREDENTIALS\n   *   A request listener that validates whether the request is being\n   *   sent with credentials.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating credentials\n   *     var listener = AWS.EventListeners.Core.VALIDATE_CREDENTIALS;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_REGION\n   *   A request listener that validates whether the region is set\n   *   for a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating region configuration\n   *     var listener = AWS.EventListeners.Core.VALIDATE_REGION;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_PARAMETERS\n   *   A request listener that validates input parameters in a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating parameters\n   *     var listener = AWS.EventListeners.Core.VALIDATE_PARAMETERS;\n   *     request.removeListener('validate', listener);\n   *   @example Disable parameter validation globally\n   *     AWS.EventListeners.Core.removeListener('validate',\n   *       AWS.EventListeners.Core.VALIDATE_REGION);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute SEND\n   *   A request listener that initiates the HTTP connection for a\n   *   request being sent. Handles the {AWS.Request~send 'send' Request event}\n   *   @example Replacing the HTTP handler\n   *     var listener = AWS.EventListeners.Core.SEND;\n   *     request.removeListener('send', listener);\n   *     request.on('send', function(response) {\n   *       customHandler.send(response);\n   *     });\n   *   @return [Function]\n   *   @readonly\n   * @!attribute HTTP_DATA\n   *   A request listener that reads data from the HTTP connection in order\n   *   to build the response data.\n   *   Handles the {AWS.Request~httpData 'httpData' Request event}.\n   *   Remove this handler if you are overriding the 'httpData' event and\n   *   do not want extra data processing and buffering overhead.\n   *   @example Disabling default data processing\n   *     var listener = AWS.EventListeners.Core.HTTP_DATA;\n   *     request.removeListener('httpData', listener);\n   *   @return [Function]\n   *   @readonly\n   */\n  Core: {} /* doc hack */\n};\n\n/**\n * @api private\n */\nfunction getOperationAuthtype(req) {\n  if (!req.service.api.operations) {\n    return '';\n  }\n  var operation = req.service.api.operations[req.operation];\n  return operation ? operation.authtype : '';\n}\n\nAWS.EventListeners = {\n  Core: new SequentialExecutor().addNamedListeners(function(add, addAsync) {\n    addAsync('VALIDATE_CREDENTIALS', 'validate',\n        function VALIDATE_CREDENTIALS(req, done) {\n      if (!req.service.api.signatureVersion) return done(); // none\n      req.service.config.getCredentials(function(err) {\n        if (err) {\n          req.response.error = AWS.util.error(err,\n            {code: 'CredentialsError', message: 'Missing credentials in config'});\n        }\n        done();\n      });\n    });\n\n    add('VALIDATE_REGION', 'validate', function VALIDATE_REGION(req) {\n      if (!req.service.config.region && !req.service.isGlobalEndpoint) {\n        req.response.error = AWS.util.error(new Error(),\n          {code: 'ConfigError', message: 'Missing region in config'});\n      }\n    });\n\n    add('BUILD_IDEMPOTENCY_TOKENS', 'validate', function BUILD_IDEMPOTENCY_TOKENS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      if (!operation) {\n        return;\n      }\n      var idempotentMembers = operation.idempotentMembers;\n      if (!idempotentMembers.length) {\n        return;\n      }\n      // creates a copy of params so user's param object isn't mutated\n      var params = AWS.util.copy(req.params);\n      for (var i = 0, iLen = idempotentMembers.length; i < iLen; i++) {\n        if (!params[idempotentMembers[i]]) {\n          // add the member\n          params[idempotentMembers[i]] = AWS.util.uuid.v4();\n        }\n      }\n      req.params = params;\n    });\n\n    add('VALIDATE_PARAMETERS', 'validate', function VALIDATE_PARAMETERS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var rules = req.service.api.operations[req.operation].input;\n      var validation = req.service.config.paramValidation;\n      new AWS.ParamValidator(validation).validate(rules, req.params);\n    });\n\n    addAsync('COMPUTE_SHA256', 'afterBuild', function COMPUTE_SHA256(req, done) {\n      req.haltHandlersOnError();\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      var authtype = operation ? operation.authtype : '';\n      if (!req.service.api.signatureVersion && !authtype) return done(); // none\n      if (req.service.getSignerClass(req) === AWS.Signers.V4) {\n        var body = req.httpRequest.body || '';\n        if (authtype.indexOf('unsigned-body') >= 0) {\n          req.httpRequest.headers['X-Amz-Content-Sha256'] = 'UNSIGNED-PAYLOAD';\n          return done();\n        }\n        AWS.util.computeSha256(body, function(err, sha) {\n          if (err) {\n            done(err);\n          }\n          else {\n            req.httpRequest.headers['X-Amz-Content-Sha256'] = sha;\n            done();\n          }\n        });\n      } else {\n        done();\n      }\n    });\n\n    add('SET_CONTENT_LENGTH', 'afterBuild', function SET_CONTENT_LENGTH(req) {\n      var authtype = getOperationAuthtype(req);\n      var payloadMember = AWS.util.getRequestPayloadShape(req);\n      if (req.httpRequest.headers['Content-Length'] === undefined) {\n        try {\n          var length = AWS.util.string.byteLength(req.httpRequest.body);\n          req.httpRequest.headers['Content-Length'] = length;\n        } catch (err) {\n          if (payloadMember && payloadMember.isStreaming) {\n            if (payloadMember.requiresLength) {\n              //streaming payload requires length(s3, glacier)\n              throw err;\n            } else if (authtype.indexOf('unsigned-body') >= 0) {\n              //unbounded streaming payload(lex, mediastore)\n              req.httpRequest.headers['Transfer-Encoding'] = 'chunked';\n              return;\n            } else {\n              throw err;\n            }\n          }\n          throw err;\n        }\n      }\n    });\n\n    add('SET_HTTP_HOST', 'afterBuild', function SET_HTTP_HOST(req) {\n      req.httpRequest.headers['Host'] = req.httpRequest.endpoint.host;\n    });\n\n    add('RESTART', 'restart', function RESTART() {\n      var err = this.response.error;\n      if (!err || !err.retryable) return;\n\n      this.httpRequest = new AWS.HttpRequest(\n        this.service.endpoint,\n        this.service.region\n      );\n\n      if (this.response.retryCount < this.service.config.maxRetries) {\n        this.response.retryCount++;\n      } else {\n        this.response.error = null;\n      }\n    });\n\n    var addToHead = true;\n    addAsync('DISCOVER_ENDPOINT', 'sign', DISCOVER_ENDPOINT, addToHead);\n\n    addAsync('SIGN', 'sign', function SIGN(req, done) {\n      var service = req.service;\n      var operations = req.service.api.operations || {};\n      var operation = operations[req.operation];\n      var authtype = operation ? operation.authtype : '';\n      if (!service.api.signatureVersion && !authtype) return done(); // none\n\n      service.config.getCredentials(function (err, credentials) {\n        if (err) {\n          req.response.error = err;\n          return done();\n        }\n\n        try {\n          var date = service.getSkewCorrectedDate();\n          var SignerClass = service.getSignerClass(req);\n          var signer = new SignerClass(req.httpRequest,\n            service.api.signingName || service.api.endpointPrefix,\n            {\n              signatureCache: service.config.signatureCache,\n              operation: operation,\n              signatureVersion: service.api.signatureVersion\n            });\n          signer.setServiceClientId(service._clientId);\n\n          // clear old authorization headers\n          delete req.httpRequest.headers['Authorization'];\n          delete req.httpRequest.headers['Date'];\n          delete req.httpRequest.headers['X-Amz-Date'];\n\n          // add new authorization\n          signer.addAuthorization(credentials, date);\n          req.signedAt = date;\n        } catch (e) {\n          req.response.error = e;\n        }\n        done();\n      });\n    });\n\n    add('VALIDATE_RESPONSE', 'validateResponse', function VALIDATE_RESPONSE(resp) {\n      if (this.service.successfulResponse(resp, this)) {\n        resp.data = {};\n        resp.error = null;\n      } else {\n        resp.data = null;\n        resp.error = AWS.util.error(new Error(),\n          {code: 'UnknownError', message: 'An unknown error occurred.'});\n      }\n    });\n\n    addAsync('SEND', 'send', function SEND(resp, done) {\n      resp.httpResponse._abortCallback = done;\n      resp.error = null;\n      resp.data = null;\n\n      function callback(httpResp) {\n        resp.httpResponse.stream = httpResp;\n        var stream = resp.request.httpRequest.stream;\n        var service = resp.request.service;\n        var api = service.api;\n        var operationName = resp.request.operation;\n        var operation = api.operations[operationName] || {};\n\n        httpResp.on('headers', function onHeaders(statusCode, headers, statusMessage) {\n          resp.request.emit(\n            'httpHeaders',\n            [statusCode, headers, resp, statusMessage]\n          );\n\n          if (!resp.httpResponse.streaming) {\n            if (AWS.HttpClient.streamsApiVersion === 2) { // streams2 API check\n              // if we detect event streams, we're going to have to\n              // return the stream immediately\n              if (operation.hasEventOutput && service.successfulResponse(resp)) {\n                // skip reading the IncomingStream\n                resp.request.emit('httpDone');\n                done();\n                return;\n              }\n\n              httpResp.on('readable', function onReadable() {\n                var data = httpResp.read();\n                if (data !== null) {\n                  resp.request.emit('httpData', [data, resp]);\n                }\n              });\n            } else { // legacy streams API\n              httpResp.on('data', function onData(data) {\n                resp.request.emit('httpData', [data, resp]);\n              });\n            }\n          }\n        });\n\n        httpResp.on('end', function onEnd() {\n          if (!stream || !stream.didCallback) {\n            if (AWS.HttpClient.streamsApiVersion === 2 && (operation.hasEventOutput && service.successfulResponse(resp))) {\n              // don't concatenate response chunks when streaming event stream data when response is successful\n              return;\n            }\n            resp.request.emit('httpDone');\n            done();\n          }\n        });\n      }\n\n      function progress(httpResp) {\n        httpResp.on('sendProgress', function onSendProgress(value) {\n          resp.request.emit('httpUploadProgress', [value, resp]);\n        });\n\n        httpResp.on('receiveProgress', function onReceiveProgress(value) {\n          resp.request.emit('httpDownloadProgress', [value, resp]);\n        });\n      }\n\n      function error(err) {\n        if (err.code !== 'RequestAbortedError') {\n          var errCode = err.code === 'TimeoutError' ? err.code : 'NetworkingError';\n          err = AWS.util.error(err, {\n            code: errCode,\n            region: resp.request.httpRequest.region,\n            hostname: resp.request.httpRequest.endpoint.hostname,\n            retryable: true\n          });\n        }\n        resp.error = err;\n        resp.request.emit('httpError', [resp.error, resp], function() {\n          done();\n        });\n      }\n\n      function executeSend() {\n        var http = AWS.HttpClient.getInstance();\n        var httpOptions = resp.request.service.config.httpOptions || {};\n        try {\n          var stream = http.handleRequest(resp.request.httpRequest, httpOptions,\n                                          callback, error);\n          progress(stream);\n        } catch (err) {\n          error(err);\n        }\n      }\n      var timeDiff = (resp.request.service.getSkewCorrectedDate() - this.signedAt) / 1000;\n      if (timeDiff >= 60 * 10) { // if we signed 10min ago, re-sign\n        this.emit('sign', [this], function(err) {\n          if (err) done(err);\n          else executeSend();\n        });\n      } else {\n        executeSend();\n      }\n    });\n\n    add('HTTP_HEADERS', 'httpHeaders',\n        function HTTP_HEADERS(statusCode, headers, resp, statusMessage) {\n      resp.httpResponse.statusCode = statusCode;\n      resp.httpResponse.statusMessage = statusMessage;\n      resp.httpResponse.headers = headers;\n      resp.httpResponse.body = AWS.util.buffer.toBuffer('');\n      resp.httpResponse.buffers = [];\n      resp.httpResponse.numBytes = 0;\n      var dateHeader = headers.date || headers.Date;\n      var service = resp.request.service;\n      if (dateHeader) {\n        var serverTime = Date.parse(dateHeader);\n        if (service.config.correctClockSkew\n            && service.isClockSkewed(serverTime)) {\n          service.applyClockOffset(serverTime);\n        }\n      }\n    });\n\n    add('HTTP_DATA', 'httpData', function HTTP_DATA(chunk, resp) {\n      if (chunk) {\n        if (AWS.util.isNode()) {\n          resp.httpResponse.numBytes += chunk.length;\n\n          var total = resp.httpResponse.headers['content-length'];\n          var progress = { loaded: resp.httpResponse.numBytes, total: total };\n          resp.request.emit('httpDownloadProgress', [progress, resp]);\n        }\n\n        resp.httpResponse.buffers.push(AWS.util.buffer.toBuffer(chunk));\n      }\n    });\n\n    add('HTTP_DONE', 'httpDone', function HTTP_DONE(resp) {\n      // convert buffers array into single buffer\n      if (resp.httpResponse.buffers && resp.httpResponse.buffers.length > 0) {\n        var body = AWS.util.buffer.concat(resp.httpResponse.buffers);\n        resp.httpResponse.body = body;\n      }\n      delete resp.httpResponse.numBytes;\n      delete resp.httpResponse.buffers;\n    });\n\n    add('FINALIZE_ERROR', 'retry', function FINALIZE_ERROR(resp) {\n      if (resp.httpResponse.statusCode) {\n        resp.error.statusCode = resp.httpResponse.statusCode;\n        if (resp.error.retryable === undefined) {\n          resp.error.retryable = this.service.retryableError(resp.error, this);\n        }\n      }\n    });\n\n    add('INVALIDATE_CREDENTIALS', 'retry', function INVALIDATE_CREDENTIALS(resp) {\n      if (!resp.error) return;\n      switch (resp.error.code) {\n        case 'RequestExpired': // EC2 only\n        case 'ExpiredTokenException':\n        case 'ExpiredToken':\n          resp.error.retryable = true;\n          resp.request.service.config.credentials.expired = true;\n      }\n    });\n\n    add('EXPIRED_SIGNATURE', 'retry', function EXPIRED_SIGNATURE(resp) {\n      var err = resp.error;\n      if (!err) return;\n      if (typeof err.code === 'string' && typeof err.message === 'string') {\n        if (err.code.match(/Signature/) && err.message.match(/expired/)) {\n          resp.error.retryable = true;\n        }\n      }\n    });\n\n    add('CLOCK_SKEWED', 'retry', function CLOCK_SKEWED(resp) {\n      if (!resp.error) return;\n      if (this.service.clockSkewError(resp.error)\n          && this.service.config.correctClockSkew) {\n        resp.error.retryable = true;\n      }\n    });\n\n    add('REDIRECT', 'retry', function REDIRECT(resp) {\n      if (resp.error && resp.error.statusCode >= 300 &&\n          resp.error.statusCode < 400 && resp.httpResponse.headers['location']) {\n        this.httpRequest.endpoint =\n          new AWS.Endpoint(resp.httpResponse.headers['location']);\n        this.httpRequest.headers['Host'] = this.httpRequest.endpoint.host;\n        resp.error.redirect = true;\n        resp.error.retryable = true;\n      }\n    });\n\n    add('RETRY_CHECK', 'retry', function RETRY_CHECK(resp) {\n      if (resp.error) {\n        if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.error.retryDelay = 0;\n        } else if (resp.retryCount < resp.maxRetries) {\n          resp.error.retryDelay = this.service.retryDelays(resp.retryCount) || 0;\n        }\n      }\n    });\n\n    addAsync('RESET_RETRY_STATE', 'afterRetry', function RESET_RETRY_STATE(resp, done) {\n      var delay, willRetry = false;\n\n      if (resp.error) {\n        delay = resp.error.retryDelay || 0;\n        if (resp.error.retryable && resp.retryCount < resp.maxRetries) {\n          resp.retryCount++;\n          willRetry = true;\n        } else if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.redirectCount++;\n          willRetry = true;\n        }\n      }\n\n      if (willRetry) {\n        resp.error = null;\n        setTimeout(done, delay);\n      } else {\n        done();\n      }\n    });\n  }),\n\n  CorePost: new SequentialExecutor().addNamedListeners(function(add) {\n    add('EXTRACT_REQUEST_ID', 'extractData', AWS.util.extractRequestId);\n    add('EXTRACT_REQUEST_ID', 'extractError', AWS.util.extractRequestId);\n\n    add('ENOTFOUND_ERROR', 'httpError', function ENOTFOUND_ERROR(err) {\n      if (err.code === 'NetworkingError' && err.errno === 'ENOTFOUND') {\n        var message = 'Inaccessible host: `' + err.hostname +\n          '\\'. This service may not be available in the `' + err.region +\n          '\\' region.';\n        this.response.error = AWS.util.error(new Error(message), {\n          code: 'UnknownEndpoint',\n          region: err.region,\n          hostname: err.hostname,\n          retryable: true,\n          originalError: err\n        });\n      }\n    });\n  }),\n\n  Logger: new SequentialExecutor().addNamedListeners(function(add) {\n    add('LOG_REQUEST', 'complete', function LOG_REQUEST(resp) {\n      var req = resp.request;\n      var logger = req.service.config.logger;\n      if (!logger) return;\n      function filterSensitiveLog(inputShape, shape) {\n        if (!shape) {\n          return shape;\n        }\n        switch (inputShape.type) {\n          case 'structure':\n            var struct = {};\n            AWS.util.each(shape, function(subShapeName, subShape) {\n              if (Object.prototype.hasOwnProperty.call(inputShape.members, subShapeName)) {\n                struct[subShapeName] = filterSensitiveLog(inputShape.members[subShapeName], subShape);\n              } else {\n                struct[subShapeName] = subShape;\n              }\n            });\n            return struct;\n          case 'list':\n            var list = [];\n            AWS.util.arrayEach(shape, function(subShape, index) {\n              list.push(filterSensitiveLog(inputShape.member, subShape));\n            });\n            return list;\n          case 'map':\n            var map = {};\n            AWS.util.each(shape, function(key, value) {\n              map[key] = filterSensitiveLog(inputShape.value, value);\n            });\n            return map;\n          default:\n            if (inputShape.isSensitive) {\n              return '***SensitiveInformation***';\n            } else {\n              return shape;\n            }\n        }\n      }\n\n      function buildMessage() {\n        var time = resp.request.service.getSkewCorrectedDate().getTime();\n        var delta = (time - req.startTime.getTime()) / 1000;\n        var ansi = logger.isTTY ? true : false;\n        var status = resp.httpResponse.statusCode;\n        var censoredParams = req.params;\n        if (\n          req.service.api.operations &&\n              req.service.api.operations[req.operation] &&\n              req.service.api.operations[req.operation].input\n        ) {\n          var inputShape = req.service.api.operations[req.operation].input;\n          censoredParams = filterSensitiveLog(inputShape, req.params);\n        }\n        var params = require('util').inspect(censoredParams, true, null);\n        var message = '';\n        if (ansi) message += '\\x1B[33m';\n        message += '[AWS ' + req.service.serviceIdentifier + ' ' + status;\n        message += ' ' + delta.toString() + 's ' + resp.retryCount + ' retries]';\n        if (ansi) message += '\\x1B[0;1m';\n        message += ' ' + AWS.util.string.lowerFirst(req.operation);\n        message += '(' + params + ')';\n        if (ansi) message += '\\x1B[0m';\n        return message;\n      }\n\n      var line = buildMessage();\n      if (typeof logger.log === 'function') {\n        logger.log(line);\n      } else if (typeof logger.write === 'function') {\n        logger.write(line + '\\n');\n      }\n    });\n  }),\n\n  Json: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/json');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  Rest: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  RestJson: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest_json');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  RestXml: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest_xml');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  Query: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/query');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  })\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}