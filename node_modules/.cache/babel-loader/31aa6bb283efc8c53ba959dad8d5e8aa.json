{"ast":null,"code":"export var fromUtf8 = function (input) {\n  var bytes = [];\n\n  for (var i = 0, len = input.length; i < len; i++) {\n    var value = input.charCodeAt(i);\n\n    if (value < 0x80) {\n      bytes.push(value);\n    } else if (value < 0x800) {\n      bytes.push(value >> 6 | 192, value & 63 | 128);\n    } else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n      var surrogatePair = 0x10000 + ((value & 1023) << 10) + (input.charCodeAt(++i) & 1023);\n      bytes.push(surrogatePair >> 18 | 240, surrogatePair >> 12 & 63 | 128, surrogatePair >> 6 & 63 | 128, surrogatePair & 63 | 128);\n    } else {\n      bytes.push(value >> 12 | 224, value >> 6 & 63 | 128, value & 63 | 128);\n    }\n  }\n\n  return Uint8Array.from(bytes);\n};\nexport var toUtf8 = function (input) {\n  var decoded = \"\";\n\n  for (var i = 0, len = input.length; i < len; i++) {\n    var byte = input[i];\n\n    if (byte < 0x80) {\n      decoded += String.fromCharCode(byte);\n    } else if (192 <= byte && byte < 224) {\n      var nextByte = input[++i];\n      decoded += String.fromCharCode((byte & 31) << 6 | nextByte & 63);\n    } else if (240 <= byte && byte < 365) {\n      var surrogatePair = [byte, input[++i], input[++i], input[++i]];\n      var encoded = \"%\" + surrogatePair.map(function (byteValue) {\n        return byteValue.toString(16);\n      }).join(\"%\");\n      decoded += decodeURIComponent(encoded);\n    } else {\n      decoded += String.fromCharCode((byte & 15) << 12 | (input[++i] & 63) << 6 | input[++i] & 63);\n    }\n  }\n\n  return decoded;\n};","map":{"version":3,"names":["fromUtf8","input","bytes","i","len","length","value","charCodeAt","push","surrogatePair","Uint8Array","from","toUtf8","decoded","byte","String","fromCharCode","nextByte","encoded","map","byteValue","toString","join","decodeURIComponent"],"sources":["/Users/roaldmaravillas/ro/github/scaffold-appsync-events/node_modules/@aws-sdk/util-utf8-browser/dist-es/pureJs.js"],"sourcesContent":["export var fromUtf8 = function (input) {\n    var bytes = [];\n    for (var i = 0, len = input.length; i < len; i++) {\n        var value = input.charCodeAt(i);\n        if (value < 0x80) {\n            bytes.push(value);\n        }\n        else if (value < 0x800) {\n            bytes.push((value >> 6) | 192, (value & 63) | 128);\n        }\n        else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n            var surrogatePair = 0x10000 + ((value & 1023) << 10) + (input.charCodeAt(++i) & 1023);\n            bytes.push((surrogatePair >> 18) | 240, ((surrogatePair >> 12) & 63) | 128, ((surrogatePair >> 6) & 63) | 128, (surrogatePair & 63) | 128);\n        }\n        else {\n            bytes.push((value >> 12) | 224, ((value >> 6) & 63) | 128, (value & 63) | 128);\n        }\n    }\n    return Uint8Array.from(bytes);\n};\nexport var toUtf8 = function (input) {\n    var decoded = \"\";\n    for (var i = 0, len = input.length; i < len; i++) {\n        var byte = input[i];\n        if (byte < 0x80) {\n            decoded += String.fromCharCode(byte);\n        }\n        else if (192 <= byte && byte < 224) {\n            var nextByte = input[++i];\n            decoded += String.fromCharCode(((byte & 31) << 6) | (nextByte & 63));\n        }\n        else if (240 <= byte && byte < 365) {\n            var surrogatePair = [byte, input[++i], input[++i], input[++i]];\n            var encoded = \"%\" + surrogatePair.map(function (byteValue) { return byteValue.toString(16); }).join(\"%\");\n            decoded += decodeURIComponent(encoded);\n        }\n        else {\n            decoded += String.fromCharCode(((byte & 15) << 12) | ((input[++i] & 63) << 6) | (input[++i] & 63));\n        }\n    }\n    return decoded;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}