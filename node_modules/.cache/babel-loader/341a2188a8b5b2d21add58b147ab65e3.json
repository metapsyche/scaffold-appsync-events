{"ast":null,"code":"import { GraphQLError } from '../../error';\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nexport function duplicateFragmentNameMessage(fragName) {\n  return 'There can be only one fragment named \"' + fragName + '\".';\n}\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n */\n\nexport function UniqueFragmentNames(context) {\n  var knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(new GraphQLError(duplicateFragmentNameMessage(fragmentName), [knownFragmentNames[fragmentName], node.name]));\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","duplicateFragmentNameMessage","fragName","UniqueFragmentNames","context","knownFragmentNames","Object","create","OperationDefinition","FragmentDefinition","node","fragmentName","name","value","reportError"],"sources":["/Users/roaldmaravillas/ro/github/scaffold-appsync-events/node_modules/aws-appsync/node_modules/graphql/module/validation/rules/UniqueFragmentNames.js"],"sourcesContent":["\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             * \n                                             */\n\nexport function duplicateFragmentNameMessage(fragName) {\n  return 'There can be only one fragment named \"' + fragName + '\".';\n}\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n */\nexport function UniqueFragmentNames(context) {\n  var knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var fragmentName = node.name.value;\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(new GraphQLError(duplicateFragmentNameMessage(fragmentName), [knownFragmentNames[fragmentName], node.name]));\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n      return false;\n    }\n  };\n}"],"mappings":"AACA,SAASA,YAAT,QAA6B,aAA7B;AAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,4BAAT,CAAsCC,QAAtC,EAAgD;EACrD,OAAO,2CAA2CA,QAA3C,GAAsD,IAA7D;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC;EAC3C,IAAIC,kBAAkB,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAzB;EACA,OAAO;IACLC,mBAAmB,EAAE,SAASA,mBAAT,GAA+B;MAClD,OAAO,KAAP;IACD,CAHI;IAILC,kBAAkB,EAAE,SAASA,kBAAT,CAA4BC,IAA5B,EAAkC;MACpD,IAAIC,YAAY,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAA7B;;MACA,IAAIR,kBAAkB,CAACM,YAAD,CAAtB,EAAsC;QACpCP,OAAO,CAACU,WAAR,CAAoB,IAAId,YAAJ,CAAiBC,4BAA4B,CAACU,YAAD,CAA7C,EAA6D,CAACN,kBAAkB,CAACM,YAAD,CAAnB,EAAmCD,IAAI,CAACE,IAAxC,CAA7D,CAApB;MACD,CAFD,MAEO;QACLP,kBAAkB,CAACM,YAAD,CAAlB,GAAmCD,IAAI,CAACE,IAAxC;MACD;;MACD,OAAO,KAAP;IACD;EAZI,CAAP;AAcD"},"metadata":{},"sourceType":"module"}