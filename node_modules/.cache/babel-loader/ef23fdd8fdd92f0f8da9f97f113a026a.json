{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar uuid_1 = require(\"uuid\");\n\nvar apollo_utilities_1 = require(\"apollo-utilities\");\n\nvar client_1 = require(\"../client\");\n\nvar link_1 = require(\"../link\");\n\nvar utils_1 = require(\"../utils\");\n\nvar logger = utils_1.rootLogger.extend('offline-helper');\nvar CacheOperationTypes;\n\n(function (CacheOperationTypes) {\n  CacheOperationTypes[\"AUTO\"] = \"auto\";\n  CacheOperationTypes[\"ADD\"] = \"add\";\n  CacheOperationTypes[\"REMOVE\"] = \"remove\";\n  CacheOperationTypes[\"UPDATE\"] = \"update\";\n})(CacheOperationTypes = exports.CacheOperationTypes || (exports.CacheOperationTypes = {}));\n\n;\nvar prefixesForRemove = ['delete', 'deleted', 'discard', 'discarded', 'erase', 'erased', 'remove', 'removed'];\nvar prefixesForUpdate = ['update', 'updated', 'upsert', 'upserted', 'edit', 'edited', 'modify', 'modified'];\nvar prefixesForAdd = ['create', 'created', 'put', 'set', 'add', 'added', 'new', 'insert', 'inserted'];\n\nexports.getOpTypeFromOperationName = function (opName) {\n  if (opName === void 0) {\n    opName = '';\n  } // Note: we do a toLowerCase() and startsWith() to avoid ambiguity with operations like \"RemoveAddendum\"\n\n\n  var comparator = function (prefix) {\n    return opName.toLowerCase().startsWith(prefix) || opName.toLowerCase().startsWith(\"on\" + prefix);\n  };\n\n  var result = CacheOperationTypes.AUTO;\n  [[prefixesForAdd, CacheOperationTypes.ADD], [prefixesForRemove, CacheOperationTypes.REMOVE], [prefixesForUpdate, CacheOperationTypes.UPDATE]].forEach(function (_a) {\n    var prefix = _a[0],\n        type = _a[1];\n\n    if (prefix.some(comparator)) {\n      result = type;\n      return;\n    }\n  });\n  return result;\n};\n/**\n * Builds a SubscribeToMoreOptions object ready to be used by Apollo's subscribeToMore() to automatically update the query result in the\n * cache according to the cacheUpdateQuery parameter\n *\n * @param subscriptionQuery The GraphQL subscription DocumentNode or CacheUpdateQuery\n * @param cacheUpdateQuery The query for which the result needs to be updated\n * @param idField\n * @param operationType\n */\n\n\nvar buildSubscription = function (subscriptionQuery, cacheUpdateQuery, idField, operationType) {\n  var document = subscriptionQuery && subscriptionQuery.query || subscriptionQuery;\n  var variables = subscriptionQuery && subscriptionQuery.variables || {};\n  var query = cacheUpdateQuery && cacheUpdateQuery.query || cacheUpdateQuery;\n  var queryField = utils_1.getOperationFieldName(query);\n  return {\n    document: document,\n    variables: variables,\n    updateQuery: function (prev, _a) {\n      var _b;\n\n      var data = _a.subscriptionData.data;\n      var subField = Object.keys(data)[0];\n      var _c = subField,\n          mutadedItem = data[_c];\n      var optype = operationType || exports.getOpTypeFromOperationName(subField);\n      var updater = exports.getUpdater(optype, idField);\n      var updatedOpResult;\n      var result;\n      var path = findArrayInObject(prev);\n\n      if (path) {\n        var arr = __spreadArrays(getValueByPath(prev, path));\n\n        updatedOpResult = updater(arr, mutadedItem);\n      } else {\n        updatedOpResult = updater(prev, mutadedItem);\n      }\n\n      if (!path || path.length === 0) {\n        result = updatedOpResult;\n      } else {\n        var cloned = apollo_utilities_1.cloneDeep(prev);\n        setValueByPath(cloned, path, updatedOpResult);\n        result = cloned[queryField];\n      }\n\n      return _b = {}, _b[queryField] = result, _b;\n    }\n  };\n};\n\nexports.buildSubscription = buildSubscription;\n\nexports.getUpdater = function (opType, idField) {\n  if (idField === void 0) {\n    idField = 'id';\n  }\n\n  var updater;\n\n  switch (opType) {\n    case CacheOperationTypes.ADD:\n      updater = function (currentValue, newItem) {\n        if (Array.isArray(currentValue)) {\n          return !newItem ? __spreadArrays(currentValue) : __spreadArrays(currentValue.filter(function (item) {\n            return item[idField] !== newItem[idField];\n          }), [newItem]);\n        } else {\n          return newItem;\n        }\n      };\n\n      break;\n\n    case CacheOperationTypes.UPDATE:\n      updater = function (currentValue, newItem) {\n        if (Array.isArray(currentValue)) {\n          return !newItem ? __spreadArrays(currentValue) : currentValue.map(function (item) {\n            return item[idField] === newItem[idField] ? newItem : item;\n          });\n        } else {\n          return newItem;\n        }\n      };\n\n      break;\n\n    case CacheOperationTypes.REMOVE:\n      updater = function (currentValue, newItem) {\n        if (Array.isArray(currentValue)) {\n          return !newItem ? __spreadArrays(currentValue) : currentValue.filter(function (item) {\n            return item[idField] !== newItem[idField];\n          });\n        } else {\n          return null;\n        }\n      };\n\n      break;\n\n    default:\n      updater = function (currentValue) {\n        return currentValue;\n      };\n\n  }\n\n  return updater;\n};\n\nvar getOpTypeQueriesMap = function (cacheUpdateQuery, variables) {\n  var _a;\n\n  var cacheUpdateQueryVal = typeof cacheUpdateQuery === 'function' ? cacheUpdateQuery(variables) : cacheUpdateQuery || {};\n  var opTypeQueriesMap = cacheUpdateQueryVal;\n\n  if (isDocument(cacheUpdateQueryVal) || isDocument(cacheUpdateQueryVal.query) || Array.isArray(cacheUpdateQuery)) {\n    opTypeQueriesMap = (_a = {}, _a[CacheOperationTypes.AUTO] = [].concat(cacheUpdateQueryVal), _a);\n  }\n\n  return opTypeQueriesMap;\n};\n\nvar getEvaluatedOp = function (opType, mutationField, operationType) {\n  var evaluatedOP = opType === CacheOperationTypes.AUTO ? operationType || exports.getOpTypeFromOperationName(mutationField) : opType;\n  return evaluatedOP;\n};\n\nvar findArrayInObject = function (obj, path) {\n  if (path === void 0) {\n    path = [];\n  }\n\n  if (Array.isArray(obj)) {\n    return path;\n  }\n\n  if (!isObject(obj)) {\n    return undefined;\n  }\n\n  var result;\n  Object.keys(obj).some(function (key) {\n    var newPath = findArrayInObject(obj[key], path.concat(key));\n\n    if (newPath) {\n      result = newPath;\n      return true;\n    }\n\n    return false;\n  });\n  return result;\n};\n\nvar getValueByPath = function (obj, path) {\n  if (path === void 0) {\n    path = [];\n  }\n\n  if (!isObject(obj)) {\n    return obj;\n  }\n\n  return path.reduce(function (acc, elem) {\n    var val = acc && acc[elem];\n\n    if (val) {\n      return val;\n    }\n\n    return null;\n  }, obj);\n};\n\nvar setValueByPath = function (obj, path, value) {\n  if (path === void 0) {\n    path = [];\n  }\n\n  return path.reduce(function (acc, elem, i, arr) {\n    if (arr.length - 1 === i) {\n      acc[elem] = value;\n      return obj;\n    }\n\n    return acc[elem];\n  }, obj);\n};\n\nvar isDocument = function (doc) {\n  return !!doc && doc.kind === 'Document';\n}; // make sure that the object is of type object and is not null.\n\n\nvar isObject = function (object) {\n  return object != null && typeof object === 'object';\n};\n/**\n * Builds a MutationOptions object ready to be used by the ApolloClient to automatically update the cache according to the cacheUpdateQuery\n * parameter\n *\n * @param client An ApolloClient instance\n * @param mutation DocumentNode for the muation\n * @param variables An object with the mutation variables\n * @param cacheUpdateQuery The queries to update in the cache\n * @param typename __typename from your schema\n * @param idField The name of the field with the ID\n * @param operationType Override for the operation type\n *\n * @returns Mutation options to be used by the ApolloClient\n */\n\n\nvar buildMutation = function (client, mutation, variablesInfo, cacheUpdateQuery, typename, idField, operationType) {\n  var _a, _b, _c;\n\n  if (idField === void 0) {\n    idField = 'id';\n  }\n\n  var isVariablesInfo = typeof variablesInfo.variables === 'object';\n  var variables = isVariablesInfo ? variablesInfo.variables : variablesInfo;\n  var hasInputType = Object.keys(variables).length === 1 && typeof variables.input === 'object';\n  var inputTypeVersionField = isVariablesInfo && variablesInfo.inputType.definitions[0].fields.find(function (f) {\n    return ['version', 'expectedVersion'].find(function (n) {\n      return n === f.name.value;\n    }) && f.type.name.value === 'Int';\n  });\n  var useVersioning = hasInputType ? !!inputTypeVersionField : true;\n  var opTypeQueriesMap = getOpTypeQueriesMap(cacheUpdateQuery, variables);\n\n  var _d = idField || 'id',\n      idCustomField = (hasInputType ? variables.input : variables)[_d];\n\n  var comparator = function (elem) {\n    return elem[idField] === idCustomField;\n  };\n\n  var version = 0;\n\n  for (var opType in opTypeQueriesMap) {\n    var queries = [].concat(opTypeQueriesMap[opType]);\n    queries.forEach(function (queryEntry) {\n      var query = queryEntry && queryEntry.query || queryEntry;\n      var queryVars = queryEntry && queryEntry.variables || {};\n      var queryField = utils_1.getOperationFieldName(query);\n      var result;\n      var cachedItem;\n\n      try {\n        var _a = queryField,\n            queryRead = client.readQuery({\n          query: query,\n          variables: queryVars\n        })[_a];\n\n        result = queryRead;\n      } catch (err) {\n        logger('Skipping query', query, err.message);\n        return;\n      }\n\n      var path = findArrayInObject(result);\n\n      if (path) {\n        var arr = __spreadArrays(getValueByPath(result, path));\n\n        cachedItem = arr.find(comparator);\n      } else {\n        cachedItem = result;\n      }\n\n      if (cachedItem) {\n        version = Math.max(version, cachedItem.version);\n      }\n    });\n  }\n\n  ;\n  var mutationField = utils_1.getOperationFieldName(mutation);\n  var cache = client && client instanceof client_1.default && client.isOfflineEnabled() && client.cache;\n  var versionFieldName = inputTypeVersionField ? inputTypeVersionField.name.value : '';\n  return {\n    mutation: mutation,\n    variables: hasInputType ? {\n      input: __assign(__assign({}, useVersioning && (_a = {}, _a[versionFieldName] = version, _a)), variables.input)\n    } : __assign({\n      version: version,\n      expectedVersion: version\n    }, variables),\n    optimisticResponse: typename ? (_b = {\n      __typename: \"Mutation\"\n    }, _b[mutationField] = __assign(__assign((_c = {\n      __typename: typename\n    }, _c[idField] = (hasInputType ? variables.input : variables)[idField] || uuid_1.v4(), _c), hasInputType ? variables.input : variables), {\n      version: version + 1\n    }), _b) : null,\n    update: function (proxy, _a) {\n      var _b = mutationField,\n          mutatedItem = _a.data[_b];\n\n      var _loop_1 = function (opType) {\n        var queries = [].concat(opTypeQueriesMap[opType]);\n        var updaterFn = exports.getUpdater(getEvaluatedOp(opType, mutationField, operationType), idField);\n        queries.forEach(function (queryEntry) {\n          var query = queryEntry && queryEntry.query || queryEntry;\n          var queryField = utils_1.getOperationFieldName(query);\n          var queryVars = queryEntry && queryEntry.variables || {};\n\n          if (cache) {\n            queryVars = link_1.replaceUsingMap(__assign({}, queryVars), cache.getIdsMap());\n          }\n\n          var data;\n          var updatedOpResult;\n\n          try {\n            data = proxy.readQuery({\n              query: query,\n              variables: queryVars\n            });\n          } catch (err) {\n            logger('Skipping query', query, err.message);\n            return;\n          }\n\n          var opResultCachedValue = data[queryField];\n          var path = findArrayInObject(opResultCachedValue);\n\n          if (path) {\n            var arr = __spreadArrays(getValueByPath(opResultCachedValue, path));\n\n            updatedOpResult = updaterFn(arr, mutatedItem);\n          } else {\n            updatedOpResult = updaterFn(opResultCachedValue, mutatedItem);\n          }\n\n          if (!path || path.length === 0) {\n            data[queryField] = updatedOpResult;\n          } else {\n            setValueByPath(data[queryField], path, updatedOpResult);\n          }\n\n          proxy.writeQuery({\n            query: query,\n            variables: queryVars,\n            data: data\n          });\n        });\n      };\n\n      for (var opType in opTypeQueriesMap) {\n        _loop_1(opType);\n      }\n    }\n  };\n};\n\nexports.buildMutation = buildMutation;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArrays","il","r","Array","k","a","j","jl","defineProperty","exports","value","uuid_1","require","apollo_utilities_1","client_1","link_1","utils_1","logger","rootLogger","extend","CacheOperationTypes","prefixesForRemove","prefixesForUpdate","prefixesForAdd","getOpTypeFromOperationName","opName","comparator","prefix","toLowerCase","startsWith","result","AUTO","ADD","REMOVE","UPDATE","forEach","_a","type","some","buildSubscription","subscriptionQuery","cacheUpdateQuery","idField","operationType","document","query","variables","queryField","getOperationFieldName","updateQuery","prev","_b","data","subscriptionData","subField","keys","_c","mutadedItem","optype","updater","getUpdater","updatedOpResult","path","findArrayInObject","arr","getValueByPath","cloned","cloneDeep","setValueByPath","opType","currentValue","newItem","isArray","filter","item","map","getOpTypeQueriesMap","cacheUpdateQueryVal","opTypeQueriesMap","isDocument","concat","getEvaluatedOp","mutationField","evaluatedOP","obj","isObject","undefined","key","newPath","reduce","acc","elem","val","doc","kind","object","buildMutation","client","mutation","variablesInfo","typename","isVariablesInfo","hasInputType","input","inputTypeVersionField","inputType","definitions","fields","find","f","name","useVersioning","_d","idCustomField","version","queries","queryEntry","queryVars","cachedItem","queryRead","readQuery","err","message","Math","max","cache","default","isOfflineEnabled","versionFieldName","expectedVersion","optimisticResponse","__typename","v4","update","proxy","mutatedItem","_loop_1","updaterFn","replaceUsingMap","getIdsMap","opResultCachedValue","writeQuery"],"sources":["/Users/roaldmaravillas/ro/github/scaffold-appsync-events/node_modules/aws-appsync/lib/helpers/offline.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*!\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar uuid_1 = require(\"uuid\");\nvar apollo_utilities_1 = require(\"apollo-utilities\");\nvar client_1 = require(\"../client\");\nvar link_1 = require(\"../link\");\nvar utils_1 = require(\"../utils\");\nvar logger = utils_1.rootLogger.extend('offline-helper');\nvar CacheOperationTypes;\n(function (CacheOperationTypes) {\n    CacheOperationTypes[\"AUTO\"] = \"auto\";\n    CacheOperationTypes[\"ADD\"] = \"add\";\n    CacheOperationTypes[\"REMOVE\"] = \"remove\";\n    CacheOperationTypes[\"UPDATE\"] = \"update\";\n})(CacheOperationTypes = exports.CacheOperationTypes || (exports.CacheOperationTypes = {}));\n;\nvar prefixesForRemove = [\n    'delete',\n    'deleted',\n    'discard',\n    'discarded',\n    'erase',\n    'erased',\n    'remove',\n    'removed'\n];\nvar prefixesForUpdate = [\n    'update',\n    'updated',\n    'upsert',\n    'upserted',\n    'edit',\n    'edited',\n    'modify',\n    'modified',\n];\nvar prefixesForAdd = [\n    'create',\n    'created',\n    'put',\n    'set',\n    'add',\n    'added',\n    'new',\n    'insert',\n    'inserted',\n];\nexports.getOpTypeFromOperationName = function (opName) {\n    if (opName === void 0) { opName = ''; }\n    // Note: we do a toLowerCase() and startsWith() to avoid ambiguity with operations like \"RemoveAddendum\"\n    var comparator = function (prefix) { return opName.toLowerCase().startsWith(prefix) || opName.toLowerCase().startsWith(\"on\" + prefix); };\n    var result = CacheOperationTypes.AUTO;\n    [\n        [prefixesForAdd, CacheOperationTypes.ADD],\n        [prefixesForRemove, CacheOperationTypes.REMOVE],\n        [prefixesForUpdate, CacheOperationTypes.UPDATE],\n    ].forEach(function (_a) {\n        var prefix = _a[0], type = _a[1];\n        if (prefix.some(comparator)) {\n            result = type;\n            return;\n        }\n    });\n    return result;\n};\n/**\n * Builds a SubscribeToMoreOptions object ready to be used by Apollo's subscribeToMore() to automatically update the query result in the\n * cache according to the cacheUpdateQuery parameter\n *\n * @param subscriptionQuery The GraphQL subscription DocumentNode or CacheUpdateQuery\n * @param cacheUpdateQuery The query for which the result needs to be updated\n * @param idField\n * @param operationType\n */\nvar buildSubscription = function (subscriptionQuery, cacheUpdateQuery, idField, operationType) {\n    var document = (subscriptionQuery && subscriptionQuery.query) || subscriptionQuery;\n    var variables = (subscriptionQuery && subscriptionQuery.variables) || {};\n    var query = (cacheUpdateQuery && cacheUpdateQuery.query) || cacheUpdateQuery;\n    var queryField = utils_1.getOperationFieldName(query);\n    return {\n        document: document,\n        variables: variables,\n        updateQuery: function (prev, _a) {\n            var _b;\n            var data = _a.subscriptionData.data;\n            var subField = Object.keys(data)[0];\n            var _c = subField, mutadedItem = data[_c];\n            var optype = operationType || exports.getOpTypeFromOperationName(subField);\n            var updater = exports.getUpdater(optype, idField);\n            var updatedOpResult;\n            var result;\n            var path = findArrayInObject(prev);\n            if (path) {\n                var arr = __spreadArrays(getValueByPath(prev, path));\n                updatedOpResult = updater(arr, mutadedItem);\n            }\n            else {\n                updatedOpResult = updater(prev, mutadedItem);\n            }\n            if (!path || path.length === 0) {\n                result = updatedOpResult;\n            }\n            else {\n                var cloned = apollo_utilities_1.cloneDeep(prev);\n                setValueByPath(cloned, path, updatedOpResult);\n                result = cloned[queryField];\n            }\n            return _b = {},\n                _b[queryField] = result,\n                _b;\n        }\n    };\n};\nexports.buildSubscription = buildSubscription;\nexports.getUpdater = function (opType, idField) {\n    if (idField === void 0) { idField = 'id'; }\n    var updater;\n    switch (opType) {\n        case CacheOperationTypes.ADD:\n            updater = function (currentValue, newItem) {\n                if (Array.isArray(currentValue)) {\n                    return !newItem ? __spreadArrays(currentValue) : __spreadArrays(currentValue.filter(function (item) { return item[idField] !== newItem[idField]; }), [newItem]);\n                }\n                else {\n                    return newItem;\n                }\n            };\n            break;\n        case CacheOperationTypes.UPDATE:\n            updater = function (currentValue, newItem) {\n                if (Array.isArray(currentValue)) {\n                    return !newItem ? __spreadArrays(currentValue) : currentValue.map(function (item) { return item[idField] === newItem[idField] ? newItem : item; });\n                }\n                else {\n                    return newItem;\n                }\n            };\n            break;\n        case CacheOperationTypes.REMOVE:\n            updater = function (currentValue, newItem) {\n                if (Array.isArray(currentValue)) {\n                    return !newItem ? __spreadArrays(currentValue) : currentValue.filter(function (item) { return item[idField] !== newItem[idField]; });\n                }\n                else {\n                    return null;\n                }\n            };\n            break;\n        default:\n            updater = function (currentValue) { return currentValue; };\n    }\n    return updater;\n};\nvar getOpTypeQueriesMap = function (cacheUpdateQuery, variables) {\n    var _a;\n    var cacheUpdateQueryVal = typeof cacheUpdateQuery === 'function' ?\n        cacheUpdateQuery(variables) :\n        cacheUpdateQuery || {};\n    var opTypeQueriesMap = cacheUpdateQueryVal;\n    if (isDocument(cacheUpdateQueryVal) ||\n        isDocument(cacheUpdateQueryVal.query) ||\n        Array.isArray(cacheUpdateQuery)) {\n        opTypeQueriesMap = (_a = {}, _a[CacheOperationTypes.AUTO] = [].concat(cacheUpdateQueryVal), _a);\n    }\n    return opTypeQueriesMap;\n};\nvar getEvaluatedOp = function (opType, mutationField, operationType) {\n    var evaluatedOP = opType === CacheOperationTypes.AUTO ?\n        (operationType || exports.getOpTypeFromOperationName(mutationField)) :\n        opType;\n    return evaluatedOP;\n};\nvar findArrayInObject = function (obj, path) {\n    if (path === void 0) { path = []; }\n    if (Array.isArray(obj)) {\n        return path;\n    }\n    if (!isObject(obj)) {\n        return undefined;\n    }\n    var result;\n    Object.keys(obj).some(function (key) {\n        var newPath = findArrayInObject(obj[key], path.concat(key));\n        if (newPath) {\n            result = newPath;\n            return true;\n        }\n        return false;\n    });\n    return result;\n};\nvar getValueByPath = function (obj, path) {\n    if (path === void 0) { path = []; }\n    if (!isObject(obj)) {\n        return obj;\n    }\n    return path.reduce(function (acc, elem) {\n        var val = acc && acc[elem];\n        if (val) {\n            return val;\n        }\n        return null;\n    }, obj);\n};\nvar setValueByPath = function (obj, path, value) {\n    if (path === void 0) { path = []; }\n    return path.reduce(function (acc, elem, i, arr) {\n        if (arr.length - 1 === i) {\n            acc[elem] = value;\n            return obj;\n        }\n        return acc[elem];\n    }, obj);\n};\nvar isDocument = function (doc) { return !!doc && doc.kind === 'Document'; };\n// make sure that the object is of type object and is not null.\nvar isObject = function (object) { return object != null && (typeof object === 'object'); };\n/**\n * Builds a MutationOptions object ready to be used by the ApolloClient to automatically update the cache according to the cacheUpdateQuery\n * parameter\n *\n * @param client An ApolloClient instance\n * @param mutation DocumentNode for the muation\n * @param variables An object with the mutation variables\n * @param cacheUpdateQuery The queries to update in the cache\n * @param typename __typename from your schema\n * @param idField The name of the field with the ID\n * @param operationType Override for the operation type\n *\n * @returns Mutation options to be used by the ApolloClient\n */\nvar buildMutation = function (client, mutation, variablesInfo, cacheUpdateQuery, typename, idField, operationType) {\n    var _a, _b, _c;\n    if (idField === void 0) { idField = 'id'; }\n    var isVariablesInfo = typeof variablesInfo.variables === 'object';\n    var variables = isVariablesInfo ? variablesInfo.variables : variablesInfo;\n    var hasInputType = Object.keys(variables).length === 1 && typeof variables.input === 'object';\n    var inputTypeVersionField = isVariablesInfo && variablesInfo.inputType.definitions[0].fields.find(function (f) {\n        return ['version', 'expectedVersion'].find(function (n) { return n === f.name.value; }) && f.type.name.value === 'Int';\n    });\n    var useVersioning = hasInputType ? !!inputTypeVersionField : true;\n    var opTypeQueriesMap = getOpTypeQueriesMap(cacheUpdateQuery, variables);\n    var _d = idField || 'id', idCustomField = (hasInputType ? variables.input : variables)[_d];\n    var comparator = function (elem) { return elem[idField] === idCustomField; };\n    var version = 0;\n    for (var opType in opTypeQueriesMap) {\n        var queries = [].concat(opTypeQueriesMap[opType]);\n        queries.forEach(function (queryEntry) {\n            var query = (queryEntry && queryEntry.query) || queryEntry;\n            var queryVars = (queryEntry && queryEntry.variables) || {};\n            var queryField = utils_1.getOperationFieldName(query);\n            var result;\n            var cachedItem;\n            try {\n                var _a = queryField, queryRead = client.readQuery({ query: query, variables: queryVars })[_a];\n                result = queryRead;\n            }\n            catch (err) {\n                logger('Skipping query', query, err.message);\n                return;\n            }\n            var path = findArrayInObject(result);\n            if (path) {\n                var arr = __spreadArrays(getValueByPath(result, path));\n                cachedItem = arr.find(comparator);\n            }\n            else {\n                cachedItem = result;\n            }\n            if (cachedItem) {\n                version = Math.max(version, cachedItem.version);\n            }\n        });\n    }\n    ;\n    var mutationField = utils_1.getOperationFieldName(mutation);\n    var cache = client &&\n        client instanceof client_1.default &&\n        client.isOfflineEnabled() &&\n        client.cache;\n    var versionFieldName = inputTypeVersionField ? inputTypeVersionField.name.value : '';\n    return {\n        mutation: mutation,\n        variables: hasInputType\n            ? { input: __assign(__assign({}, (useVersioning && (_a = {}, _a[versionFieldName] = version, _a))), variables.input) }\n            : __assign({ version: version, expectedVersion: version }, variables),\n        optimisticResponse: typename ? (_b = {\n                __typename: \"Mutation\"\n            },\n            _b[mutationField] = __assign(__assign((_c = { __typename: typename }, _c[idField] = (hasInputType ? variables.input : variables)[idField] || uuid_1.v4(), _c), (hasInputType ? variables.input : variables)), { version: version + 1 }),\n            _b) : null,\n        update: function (proxy, _a) {\n            var _b = mutationField, mutatedItem = _a.data[_b];\n            var _loop_1 = function (opType) {\n                var queries = [].concat(opTypeQueriesMap[opType]);\n                var updaterFn = exports.getUpdater(getEvaluatedOp(opType, mutationField, operationType), idField);\n                queries.forEach(function (queryEntry) {\n                    var query = (queryEntry && queryEntry.query) || queryEntry;\n                    var queryField = utils_1.getOperationFieldName(query);\n                    var queryVars = (queryEntry && queryEntry.variables) || {};\n                    if (cache) {\n                        queryVars = link_1.replaceUsingMap(__assign({}, queryVars), cache.getIdsMap());\n                    }\n                    var data;\n                    var updatedOpResult;\n                    try {\n                        data = proxy.readQuery({ query: query, variables: queryVars });\n                    }\n                    catch (err) {\n                        logger('Skipping query', query, err.message);\n                        return;\n                    }\n                    var opResultCachedValue = data[queryField];\n                    var path = findArrayInObject(opResultCachedValue);\n                    if (path) {\n                        var arr = __spreadArrays(getValueByPath(opResultCachedValue, path));\n                        updatedOpResult = updaterFn(arr, mutatedItem);\n                    }\n                    else {\n                        updatedOpResult = updaterFn(opResultCachedValue, mutatedItem);\n                    }\n                    if (!path || path.length === 0) {\n                        data[queryField] = updatedOpResult;\n                    }\n                    else {\n                        setValueByPath(data[queryField], path, updatedOpResult);\n                    }\n                    proxy.writeQuery({ query: query, variables: queryVars, data: data });\n                });\n            };\n            for (var opType in opTypeQueriesMap) {\n                _loop_1(opType);\n            }\n        },\n    };\n};\nexports.buildMutation = buildMutation;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}