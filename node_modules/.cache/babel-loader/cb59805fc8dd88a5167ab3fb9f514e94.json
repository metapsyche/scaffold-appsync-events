{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unknownFragmentMessage = unknownFragmentMessage;\nexports.KnownFragmentNames = KnownFragmentNames;\n\nvar _error = require('../../error');\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nfunction unknownFragmentMessage(fragName) {\n  return 'Unknown fragment \"' + fragName + '\".';\n}\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n */\n\n\nfunction KnownFragmentNames(context) {\n  return {\n    FragmentSpread: function FragmentSpread(node) {\n      var fragmentName = node.name.value;\n      var fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(new _error.GraphQLError(unknownFragmentMessage(fragmentName), [node.name]));\n      }\n    }\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","unknownFragmentMessage","KnownFragmentNames","_error","require","fragName","context","FragmentSpread","node","fragmentName","name","fragment","getFragment","reportError","GraphQLError"],"sources":["/Users/roaldmaravillas/ro/github/scaffold-appsync-events/node_modules/graphql/validation/rules/KnownFragmentNames.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unknownFragmentMessage = unknownFragmentMessage;\nexports.KnownFragmentNames = KnownFragmentNames;\n\nvar _error = require('../../error');\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction unknownFragmentMessage(fragName) {\n  return 'Unknown fragment \"' + fragName + '\".';\n}\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n */\nfunction KnownFragmentNames(context) {\n  return {\n    FragmentSpread: function FragmentSpread(node) {\n      var fragmentName = node.name.value;\n      var fragment = context.getFragment(fragmentName);\n      if (!fragment) {\n        context.reportError(new _error.GraphQLError(unknownFragmentMessage(fragmentName), [node.name]));\n      }\n    }\n  };\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,sBAAR,GAAiCA,sBAAjC;AACAF,OAAO,CAACG,kBAAR,GAA6BA,kBAA7B;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASH,sBAAT,CAAgCI,QAAhC,EAA0C;EACxC,OAAO,uBAAuBA,QAAvB,GAAkC,IAAzC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASH,kBAAT,CAA4BI,OAA5B,EAAqC;EACnC,OAAO;IACLC,cAAc,EAAE,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;MAC5C,IAAIC,YAAY,GAAGD,IAAI,CAACE,IAAL,CAAUV,KAA7B;MACA,IAAIW,QAAQ,GAAGL,OAAO,CAACM,WAAR,CAAoBH,YAApB,CAAf;;MACA,IAAI,CAACE,QAAL,EAAe;QACbL,OAAO,CAACO,WAAR,CAAoB,IAAIV,MAAM,CAACW,YAAX,CAAwBb,sBAAsB,CAACQ,YAAD,CAA9C,EAA8D,CAACD,IAAI,CAACE,IAAN,CAA9D,CAApB;MACD;IACF;EAPI,CAAP;AASD"},"metadata":{},"sourceType":"script"}