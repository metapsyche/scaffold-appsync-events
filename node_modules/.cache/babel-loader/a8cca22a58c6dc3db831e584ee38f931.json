{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unusedFragMessage = unusedFragMessage;\nexports.NoUnusedFragments = NoUnusedFragments;\n\nvar _error = require('../../error');\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nfunction unusedFragMessage(fragName) {\n  return 'Fragment \"' + fragName + '\" is never used.';\n}\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n */\n\n\nfunction NoUnusedFragments(context) {\n  var operationDefs = [];\n  var fragmentDefs = [];\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n    Document: {\n      leave: function leave() {\n        var fragmentNameUsed = Object.create(null);\n        operationDefs.forEach(function (operation) {\n          context.getRecursivelyReferencedFragments(operation).forEach(function (fragment) {\n            fragmentNameUsed[fragment.name.value] = true;\n          });\n        });\n        fragmentDefs.forEach(function (fragmentDef) {\n          var fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new _error.GraphQLError(unusedFragMessage(fragName), [fragmentDef]));\n          }\n        });\n      }\n    }\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","unusedFragMessage","NoUnusedFragments","_error","require","fragName","context","operationDefs","fragmentDefs","OperationDefinition","node","push","FragmentDefinition","Document","leave","fragmentNameUsed","create","forEach","operation","getRecursivelyReferencedFragments","fragment","name","fragmentDef","reportError","GraphQLError"],"sources":["/Users/roaldmaravillas/ro/github/scaffold-appsync-events/node_modules/graphql/validation/rules/NoUnusedFragments.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unusedFragMessage = unusedFragMessage;\nexports.NoUnusedFragments = NoUnusedFragments;\n\nvar _error = require('../../error');\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction unusedFragMessage(fragName) {\n  return 'Fragment \"' + fragName + '\" is never used.';\n}\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n */\nfunction NoUnusedFragments(context) {\n  var operationDefs = [];\n  var fragmentDefs = [];\n\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave: function leave() {\n        var fragmentNameUsed = Object.create(null);\n        operationDefs.forEach(function (operation) {\n          context.getRecursivelyReferencedFragments(operation).forEach(function (fragment) {\n            fragmentNameUsed[fragment.name.value] = true;\n          });\n        });\n\n        fragmentDefs.forEach(function (fragmentDef) {\n          var fragName = fragmentDef.name.value;\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new _error.GraphQLError(unusedFragMessage(fragName), [fragmentDef]));\n          }\n        });\n      }\n    }\n  };\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B;AACAF,OAAO,CAACG,iBAAR,GAA4BA,iBAA5B;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASH,iBAAT,CAA2BI,QAA3B,EAAqC;EACnC,OAAO,eAAeA,QAAf,GAA0B,kBAAjC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASH,iBAAT,CAA2BI,OAA3B,EAAoC;EAClC,IAAIC,aAAa,GAAG,EAApB;EACA,IAAIC,YAAY,GAAG,EAAnB;EAEA,OAAO;IACLC,mBAAmB,EAAE,SAASA,mBAAT,CAA6BC,IAA7B,EAAmC;MACtDH,aAAa,CAACI,IAAd,CAAmBD,IAAnB;MACA,OAAO,KAAP;IACD,CAJI;IAKLE,kBAAkB,EAAE,SAASA,kBAAT,CAA4BF,IAA5B,EAAkC;MACpDF,YAAY,CAACG,IAAb,CAAkBD,IAAlB;MACA,OAAO,KAAP;IACD,CARI;IAULG,QAAQ,EAAE;MACRC,KAAK,EAAE,SAASA,KAAT,GAAiB;QACtB,IAAIC,gBAAgB,GAAGlB,MAAM,CAACmB,MAAP,CAAc,IAAd,CAAvB;QACAT,aAAa,CAACU,OAAd,CAAsB,UAAUC,SAAV,EAAqB;UACzCZ,OAAO,CAACa,iCAAR,CAA0CD,SAA1C,EAAqDD,OAArD,CAA6D,UAAUG,QAAV,EAAoB;YAC/EL,gBAAgB,CAACK,QAAQ,CAACC,IAAT,CAAcrB,KAAf,CAAhB,GAAwC,IAAxC;UACD,CAFD;QAGD,CAJD;QAMAQ,YAAY,CAACS,OAAb,CAAqB,UAAUK,WAAV,EAAuB;UAC1C,IAAIjB,QAAQ,GAAGiB,WAAW,CAACD,IAAZ,CAAiBrB,KAAhC;;UACA,IAAIe,gBAAgB,CAACV,QAAD,CAAhB,KAA+B,IAAnC,EAAyC;YACvCC,OAAO,CAACiB,WAAR,CAAoB,IAAIpB,MAAM,CAACqB,YAAX,CAAwBvB,iBAAiB,CAACI,QAAD,CAAzC,EAAqD,CAACiB,WAAD,CAArD,CAApB;UACD;QACF,CALD;MAMD;IAfO;EAVL,CAAP;AA4BD"},"metadata":{},"sourceType":"script"}