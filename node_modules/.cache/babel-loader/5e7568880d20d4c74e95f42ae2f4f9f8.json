{"ast":null,"code":"import { KEY_PREFIX } from './constants';\nexport default function purgeStoredState(config, keys) {\n  var storage = config.storage;\n  var keyPrefix = config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX; // basic validation\n\n  if (Array.isArray(config)) throw new Error('redux-persist: purgeStoredState requires config as a first argument (found array). An array of keys is the optional second argument.');\n  if (!storage) throw new Error('redux-persist: config.storage required in purgeStoredState');\n\n  if (typeof keys === 'undefined') {\n    // if keys is not defined, purge all keys\n    return new Promise(function (resolve, reject) {\n      storage.getAllKeys(function (err, allKeys) {\n        if (err) {\n          if (process.env.NODE_ENV !== 'production') console.warn('redux-persist: error during purgeStoredState in storage.getAllKeys');\n          reject(err);\n        } else {\n          resolve(purgeStoredState(config, allKeys.filter(function (key) {\n            return key.indexOf(keyPrefix) === 0;\n          }).map(function (key) {\n            return key.slice(keyPrefix.length);\n          })));\n        }\n      });\n    });\n  } else {\n    // otherwise purge specified keys\n    return Promise.all(keys.map(function (key) {\n      return storage.removeItem('' + keyPrefix + key, warnIfRemoveError(key));\n    }));\n  }\n}\n\nfunction warnIfRemoveError(key) {\n  return function removeError(err) {\n    if (err && process.env.NODE_ENV !== 'production') {\n      console.warn('Error storing data for key:', key, err);\n    }\n  };\n}","map":{"version":3,"names":["KEY_PREFIX","purgeStoredState","config","keys","storage","keyPrefix","undefined","Array","isArray","Error","Promise","resolve","reject","getAllKeys","err","allKeys","process","env","NODE_ENV","console","warn","filter","key","indexOf","map","slice","length","all","removeItem","warnIfRemoveError","removeError"],"sources":["/Users/roaldmaravillas/ro/sandbox/aws-mobile-appsync-events-starter-react/node_modules/redux-persist/es/purgeStoredState.js"],"sourcesContent":["import { KEY_PREFIX } from './constants';\n\nexport default function purgeStoredState(config, keys) {\n  var storage = config.storage;\n  var keyPrefix = config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX;\n\n  // basic validation\n  if (Array.isArray(config)) throw new Error('redux-persist: purgeStoredState requires config as a first argument (found array). An array of keys is the optional second argument.');\n  if (!storage) throw new Error('redux-persist: config.storage required in purgeStoredState');\n\n  if (typeof keys === 'undefined') {\n    // if keys is not defined, purge all keys\n    return new Promise(function (resolve, reject) {\n      storage.getAllKeys(function (err, allKeys) {\n        if (err) {\n          if (process.env.NODE_ENV !== 'production') console.warn('redux-persist: error during purgeStoredState in storage.getAllKeys');\n          reject(err);\n        } else {\n          resolve(purgeStoredState(config, allKeys.filter(function (key) {\n            return key.indexOf(keyPrefix) === 0;\n          }).map(function (key) {\n            return key.slice(keyPrefix.length);\n          })));\n        }\n      });\n    });\n  } else {\n    // otherwise purge specified keys\n    return Promise.all(keys.map(function (key) {\n      return storage.removeItem('' + keyPrefix + key, warnIfRemoveError(key));\n    }));\n  }\n}\n\nfunction warnIfRemoveError(key) {\n  return function removeError(err) {\n    if (err && process.env.NODE_ENV !== 'production') {\n      console.warn('Error storing data for key:', key, err);\n    }\n  };\n}"],"mappings":"AAAA,SAASA,UAAT,QAA2B,aAA3B;AAEA,eAAe,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,IAAlC,EAAwC;EACrD,IAAIC,OAAO,GAAGF,MAAM,CAACE,OAArB;EACA,IAAIC,SAAS,GAAGH,MAAM,CAACG,SAAP,KAAqBC,SAArB,GAAiCJ,MAAM,CAACG,SAAxC,GAAoDL,UAApE,CAFqD,CAIrD;;EACA,IAAIO,KAAK,CAACC,OAAN,CAAcN,MAAd,CAAJ,EAA2B,MAAM,IAAIO,KAAJ,CAAU,sIAAV,CAAN;EAC3B,IAAI,CAACL,OAAL,EAAc,MAAM,IAAIK,KAAJ,CAAU,4DAAV,CAAN;;EAEd,IAAI,OAAON,IAAP,KAAgB,WAApB,EAAiC;IAC/B;IACA,OAAO,IAAIO,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;MAC5CR,OAAO,CAACS,UAAR,CAAmB,UAAUC,GAAV,EAAeC,OAAf,EAAwB;QACzC,IAAID,GAAJ,EAAS;UACP,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2CC,OAAO,CAACC,IAAR,CAAa,oEAAb;UAC3CR,MAAM,CAACE,GAAD,CAAN;QACD,CAHD,MAGO;UACLH,OAAO,CAACV,gBAAgB,CAACC,MAAD,EAASa,OAAO,CAACM,MAAR,CAAe,UAAUC,GAAV,EAAe;YAC7D,OAAOA,GAAG,CAACC,OAAJ,CAAYlB,SAAZ,MAA2B,CAAlC;UACD,CAFgC,EAE9BmB,GAF8B,CAE1B,UAAUF,GAAV,EAAe;YACpB,OAAOA,GAAG,CAACG,KAAJ,CAAUpB,SAAS,CAACqB,MAApB,CAAP;UACD,CAJgC,CAAT,CAAjB,CAAP;QAKD;MACF,CAXD;IAYD,CAbM,CAAP;EAcD,CAhBD,MAgBO;IACL;IACA,OAAOhB,OAAO,CAACiB,GAAR,CAAYxB,IAAI,CAACqB,GAAL,CAAS,UAAUF,GAAV,EAAe;MACzC,OAAOlB,OAAO,CAACwB,UAAR,CAAmB,KAAKvB,SAAL,GAAiBiB,GAApC,EAAyCO,iBAAiB,CAACP,GAAD,CAA1D,CAAP;IACD,CAFkB,CAAZ,CAAP;EAGD;AACF;;AAED,SAASO,iBAAT,CAA2BP,GAA3B,EAAgC;EAC9B,OAAO,SAASQ,WAAT,CAAqBhB,GAArB,EAA0B;IAC/B,IAAIA,GAAG,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAApC,EAAkD;MAChDC,OAAO,CAACC,IAAR,CAAa,6BAAb,EAA4CE,GAA5C,EAAiDR,GAAjD;IACD;EACF,CAJD;AAKD"},"metadata":{},"sourceType":"module"}