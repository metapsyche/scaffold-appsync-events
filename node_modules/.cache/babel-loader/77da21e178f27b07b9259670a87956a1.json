{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.specifiedRules = undefined;\n\nvar _UniqueOperationNames = require('./rules/UniqueOperationNames');\n\nvar _LoneAnonymousOperation = require('./rules/LoneAnonymousOperation');\n\nvar _SingleFieldSubscriptions = require('./rules/SingleFieldSubscriptions');\n\nvar _KnownTypeNames = require('./rules/KnownTypeNames');\n\nvar _FragmentsOnCompositeTypes = require('./rules/FragmentsOnCompositeTypes');\n\nvar _VariablesAreInputTypes = require('./rules/VariablesAreInputTypes');\n\nvar _ScalarLeafs = require('./rules/ScalarLeafs');\n\nvar _FieldsOnCorrectType = require('./rules/FieldsOnCorrectType');\n\nvar _UniqueFragmentNames = require('./rules/UniqueFragmentNames');\n\nvar _KnownFragmentNames = require('./rules/KnownFragmentNames');\n\nvar _NoUnusedFragments = require('./rules/NoUnusedFragments');\n\nvar _PossibleFragmentSpreads = require('./rules/PossibleFragmentSpreads');\n\nvar _NoFragmentCycles = require('./rules/NoFragmentCycles');\n\nvar _UniqueVariableNames = require('./rules/UniqueVariableNames');\n\nvar _NoUndefinedVariables = require('./rules/NoUndefinedVariables');\n\nvar _NoUnusedVariables = require('./rules/NoUnusedVariables');\n\nvar _KnownDirectives = require('./rules/KnownDirectives');\n\nvar _UniqueDirectivesPerLocation = require('./rules/UniqueDirectivesPerLocation');\n\nvar _KnownArgumentNames = require('./rules/KnownArgumentNames');\n\nvar _UniqueArgumentNames = require('./rules/UniqueArgumentNames');\n\nvar _ArgumentsOfCorrectType = require('./rules/ArgumentsOfCorrectType');\n\nvar _ProvidedNonNullArguments = require('./rules/ProvidedNonNullArguments');\n\nvar _DefaultValuesOfCorrectType = require('./rules/DefaultValuesOfCorrectType');\n\nvar _VariablesInAllowedPosition = require('./rules/VariablesInAllowedPosition');\n\nvar _OverlappingFieldsCanBeMerged = require('./rules/OverlappingFieldsCanBeMerged');\n\nvar _UniqueInputFieldNames = require('./rules/UniqueInputFieldNames');\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\n// Spec Section: \"Field Selection Merging\"\n// Spec Section: \"Variable Default Values Are Correctly Typed\"\n// Spec Section: \"Argument Values Type Correctness\"\n// Spec Section: \"Argument Names\"\n// Spec Section: \"Directives Are Defined\"\n// Spec Section: \"All Variable Used Defined\"\n// Spec Section: \"Fragments must not form cycles\"\n// Spec Section: \"Fragments must be used\"\n// Spec Section: \"Fragment Name Uniqueness\"\n// Spec Section: \"Leaf Field Selections\"\n// Spec Section: \"Fragments on Composite Types\"\n// Spec Section: \"Subscriptions with Single Root Field\"\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n// Spec Section: \"Operation Name Uniqueness\"\n\n\nvar specifiedRules = exports.specifiedRules = [_UniqueOperationNames.UniqueOperationNames, _LoneAnonymousOperation.LoneAnonymousOperation, _SingleFieldSubscriptions.SingleFieldSubscriptions, _KnownTypeNames.KnownTypeNames, _FragmentsOnCompositeTypes.FragmentsOnCompositeTypes, _VariablesAreInputTypes.VariablesAreInputTypes, _ScalarLeafs.ScalarLeafs, _FieldsOnCorrectType.FieldsOnCorrectType, _UniqueFragmentNames.UniqueFragmentNames, _KnownFragmentNames.KnownFragmentNames, _NoUnusedFragments.NoUnusedFragments, _PossibleFragmentSpreads.PossibleFragmentSpreads, _NoFragmentCycles.NoFragmentCycles, _UniqueVariableNames.UniqueVariableNames, _NoUndefinedVariables.NoUndefinedVariables, _NoUnusedVariables.NoUnusedVariables, _KnownDirectives.KnownDirectives, _UniqueDirectivesPerLocation.UniqueDirectivesPerLocation, _KnownArgumentNames.KnownArgumentNames, _UniqueArgumentNames.UniqueArgumentNames, _ArgumentsOfCorrectType.ArgumentsOfCorrectType, _ProvidedNonNullArguments.ProvidedNonNullArguments, _DefaultValuesOfCorrectType.DefaultValuesOfCorrectType, _VariablesInAllowedPosition.VariablesInAllowedPosition, _OverlappingFieldsCanBeMerged.OverlappingFieldsCanBeMerged, _UniqueInputFieldNames.UniqueInputFieldNames]; // Spec Section: \"Input Object Field Uniqueness\"\n// Spec Section: \"All Variable Usages Are Allowed\"\n// Spec Section: \"Argument Optionality\"\n// Spec Section: \"Argument Uniqueness\"\n// Spec Section: \"Directives Are Unique Per Location\"\n// Spec Section: \"All Variables Used\"\n// Spec Section: \"Variable Uniqueness\"\n// Spec Section: \"Fragment spread is possible\"\n// Spec Section: \"Fragment spread target defined\"\n// Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n// Spec Section: \"Variables are Input Types\"\n// Spec Section: \"Fragment Spread Type Existence\"\n// Spec Section: \"Lone Anonymous Operation\"","map":{"version":3,"names":["Object","defineProperty","exports","value","specifiedRules","undefined","_UniqueOperationNames","require","_LoneAnonymousOperation","_SingleFieldSubscriptions","_KnownTypeNames","_FragmentsOnCompositeTypes","_VariablesAreInputTypes","_ScalarLeafs","_FieldsOnCorrectType","_UniqueFragmentNames","_KnownFragmentNames","_NoUnusedFragments","_PossibleFragmentSpreads","_NoFragmentCycles","_UniqueVariableNames","_NoUndefinedVariables","_NoUnusedVariables","_KnownDirectives","_UniqueDirectivesPerLocation","_KnownArgumentNames","_UniqueArgumentNames","_ArgumentsOfCorrectType","_ProvidedNonNullArguments","_DefaultValuesOfCorrectType","_VariablesInAllowedPosition","_OverlappingFieldsCanBeMerged","_UniqueInputFieldNames","UniqueOperationNames","LoneAnonymousOperation","SingleFieldSubscriptions","KnownTypeNames","FragmentsOnCompositeTypes","VariablesAreInputTypes","ScalarLeafs","FieldsOnCorrectType","UniqueFragmentNames","KnownFragmentNames","NoUnusedFragments","PossibleFragmentSpreads","NoFragmentCycles","UniqueVariableNames","NoUndefinedVariables","NoUnusedVariables","KnownDirectives","UniqueDirectivesPerLocation","KnownArgumentNames","UniqueArgumentNames","ArgumentsOfCorrectType","ProvidedNonNullArguments","DefaultValuesOfCorrectType","VariablesInAllowedPosition","OverlappingFieldsCanBeMerged","UniqueInputFieldNames"],"sources":["/Users/roaldmaravillas/ro/sandbox/aws-mobile-appsync-events-starter-react/node_modules/graphql/validation/specifiedRules.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.specifiedRules = undefined;\n\nvar _UniqueOperationNames = require('./rules/UniqueOperationNames');\n\nvar _LoneAnonymousOperation = require('./rules/LoneAnonymousOperation');\n\nvar _SingleFieldSubscriptions = require('./rules/SingleFieldSubscriptions');\n\nvar _KnownTypeNames = require('./rules/KnownTypeNames');\n\nvar _FragmentsOnCompositeTypes = require('./rules/FragmentsOnCompositeTypes');\n\nvar _VariablesAreInputTypes = require('./rules/VariablesAreInputTypes');\n\nvar _ScalarLeafs = require('./rules/ScalarLeafs');\n\nvar _FieldsOnCorrectType = require('./rules/FieldsOnCorrectType');\n\nvar _UniqueFragmentNames = require('./rules/UniqueFragmentNames');\n\nvar _KnownFragmentNames = require('./rules/KnownFragmentNames');\n\nvar _NoUnusedFragments = require('./rules/NoUnusedFragments');\n\nvar _PossibleFragmentSpreads = require('./rules/PossibleFragmentSpreads');\n\nvar _NoFragmentCycles = require('./rules/NoFragmentCycles');\n\nvar _UniqueVariableNames = require('./rules/UniqueVariableNames');\n\nvar _NoUndefinedVariables = require('./rules/NoUndefinedVariables');\n\nvar _NoUnusedVariables = require('./rules/NoUnusedVariables');\n\nvar _KnownDirectives = require('./rules/KnownDirectives');\n\nvar _UniqueDirectivesPerLocation = require('./rules/UniqueDirectivesPerLocation');\n\nvar _KnownArgumentNames = require('./rules/KnownArgumentNames');\n\nvar _UniqueArgumentNames = require('./rules/UniqueArgumentNames');\n\nvar _ArgumentsOfCorrectType = require('./rules/ArgumentsOfCorrectType');\n\nvar _ProvidedNonNullArguments = require('./rules/ProvidedNonNullArguments');\n\nvar _DefaultValuesOfCorrectType = require('./rules/DefaultValuesOfCorrectType');\n\nvar _VariablesInAllowedPosition = require('./rules/VariablesInAllowedPosition');\n\nvar _OverlappingFieldsCanBeMerged = require('./rules/OverlappingFieldsCanBeMerged');\n\nvar _UniqueInputFieldNames = require('./rules/UniqueInputFieldNames');\n\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\n\n\n// Spec Section: \"Field Selection Merging\"\n\n\n// Spec Section: \"Variable Default Values Are Correctly Typed\"\n\n\n// Spec Section: \"Argument Values Type Correctness\"\n\n\n// Spec Section: \"Argument Names\"\n\n\n// Spec Section: \"Directives Are Defined\"\n\n\n// Spec Section: \"All Variable Used Defined\"\n\n\n// Spec Section: \"Fragments must not form cycles\"\n\n\n// Spec Section: \"Fragments must be used\"\n\n\n// Spec Section: \"Fragment Name Uniqueness\"\n\n\n// Spec Section: \"Leaf Field Selections\"\n\n\n// Spec Section: \"Fragments on Composite Types\"\n\n\n// Spec Section: \"Subscriptions with Single Root Field\"\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n// Spec Section: \"Operation Name Uniqueness\"\nvar specifiedRules = exports.specifiedRules = [_UniqueOperationNames.UniqueOperationNames, _LoneAnonymousOperation.LoneAnonymousOperation, _SingleFieldSubscriptions.SingleFieldSubscriptions, _KnownTypeNames.KnownTypeNames, _FragmentsOnCompositeTypes.FragmentsOnCompositeTypes, _VariablesAreInputTypes.VariablesAreInputTypes, _ScalarLeafs.ScalarLeafs, _FieldsOnCorrectType.FieldsOnCorrectType, _UniqueFragmentNames.UniqueFragmentNames, _KnownFragmentNames.KnownFragmentNames, _NoUnusedFragments.NoUnusedFragments, _PossibleFragmentSpreads.PossibleFragmentSpreads, _NoFragmentCycles.NoFragmentCycles, _UniqueVariableNames.UniqueVariableNames, _NoUndefinedVariables.NoUndefinedVariables, _NoUnusedVariables.NoUnusedVariables, _KnownDirectives.KnownDirectives, _UniqueDirectivesPerLocation.UniqueDirectivesPerLocation, _KnownArgumentNames.KnownArgumentNames, _UniqueArgumentNames.UniqueArgumentNames, _ArgumentsOfCorrectType.ArgumentsOfCorrectType, _ProvidedNonNullArguments.ProvidedNonNullArguments, _DefaultValuesOfCorrectType.DefaultValuesOfCorrectType, _VariablesInAllowedPosition.VariablesInAllowedPosition, _OverlappingFieldsCanBeMerged.OverlappingFieldsCanBeMerged, _UniqueInputFieldNames.UniqueInputFieldNames];\n\n// Spec Section: \"Input Object Field Uniqueness\"\n\n\n// Spec Section: \"All Variable Usages Are Allowed\"\n\n\n// Spec Section: \"Argument Optionality\"\n\n\n// Spec Section: \"Argument Uniqueness\"\n\n\n// Spec Section: \"Directives Are Unique Per Location\"\n\n\n// Spec Section: \"All Variables Used\"\n\n\n// Spec Section: \"Variable Uniqueness\"\n\n\n// Spec Section: \"Fragment spread is possible\"\n\n\n// Spec Section: \"Fragment spread target defined\"\n\n\n// Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\n\n// Spec Section: \"Variables are Input Types\"\n\n\n// Spec Section: \"Fragment Spread Type Existence\"\n\n\n// Spec Section: \"Lone Anonymous Operation\""],"mappings":"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"},"metadata":{},"sourceType":"script"}