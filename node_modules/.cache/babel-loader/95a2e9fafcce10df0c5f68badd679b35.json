{"ast":null,"code":"import { GraphQLError } from '../../error';\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nexport function duplicateOperationNameMessage(operationName) {\n  return 'There can be only one operation named \"' + operationName + '\".';\n}\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n */\n\nexport function UniqueOperationNames(context) {\n  var knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      var operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(new GraphQLError(duplicateOperationNameMessage(operationName.value), [knownOperationNames[operationName.value], operationName]));\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","duplicateOperationNameMessage","operationName","UniqueOperationNames","context","knownOperationNames","Object","create","OperationDefinition","node","name","value","reportError","FragmentDefinition"],"sources":["/Users/roaldmaravillas/ro/sandbox/aws-mobile-appsync-events-starter-react/node_modules/aws-appsync/node_modules/graphql/module/validation/rules/UniqueOperationNames.js"],"sourcesContent":["\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             * \n                                             */\n\nexport function duplicateOperationNameMessage(operationName) {\n  return 'There can be only one operation named \"' + operationName + '\".';\n}\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n */\nexport function UniqueOperationNames(context) {\n  var knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      var operationName = node.name;\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(new GraphQLError(duplicateOperationNameMessage(operationName.value), [knownOperationNames[operationName.value], operationName]));\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n      return false;\n    },\n\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}"],"mappings":"AACA,SAASA,YAAT,QAA6B,aAA7B;AAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,6BAAT,CAAuCC,aAAvC,EAAsD;EAC3D,OAAO,4CAA4CA,aAA5C,GAA4D,IAAnE;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,oBAAT,CAA8BC,OAA9B,EAAuC;EAC5C,IAAIC,mBAAmB,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAA1B;EACA,OAAO;IACLC,mBAAmB,EAAE,SAASA,mBAAT,CAA6BC,IAA7B,EAAmC;MACtD,IAAIP,aAAa,GAAGO,IAAI,CAACC,IAAzB;;MACA,IAAIR,aAAJ,EAAmB;QACjB,IAAIG,mBAAmB,CAACH,aAAa,CAACS,KAAf,CAAvB,EAA8C;UAC5CP,OAAO,CAACQ,WAAR,CAAoB,IAAIZ,YAAJ,CAAiBC,6BAA6B,CAACC,aAAa,CAACS,KAAf,CAA9C,EAAqE,CAACN,mBAAmB,CAACH,aAAa,CAACS,KAAf,CAApB,EAA2CT,aAA3C,CAArE,CAApB;QACD,CAFD,MAEO;UACLG,mBAAmB,CAACH,aAAa,CAACS,KAAf,CAAnB,GAA2CT,aAA3C;QACD;MACF;;MACD,OAAO,KAAP;IACD,CAXI;IAaLW,kBAAkB,EAAE,SAASA,kBAAT,GAA8B;MAChD,OAAO,KAAP;IACD;EAfI,CAAP;AAiBD"},"metadata":{},"sourceType":"module"}