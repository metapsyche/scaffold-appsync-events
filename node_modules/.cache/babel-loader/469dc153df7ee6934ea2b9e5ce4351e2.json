{"ast":null,"code":"import { GraphQLError } from '../../error';\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nexport function singleFieldOnlyMessage(name) {\n  return (name ? 'Subscription \"' + name + '\" ' : 'Anonymous Subscription ') + 'must select only one top level field.';\n}\n/**\n * Subscriptions must only include one field.\n *\n * A GraphQL subscription is valid only if it contains a single root field.\n */\n\nexport function SingleFieldSubscriptions(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new GraphQLError(singleFieldOnlyMessage(node.name && node.name.value), node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","singleFieldOnlyMessage","name","SingleFieldSubscriptions","context","OperationDefinition","node","operation","selectionSet","selections","length","reportError","value","slice"],"sources":["/Users/roaldmaravillas/ro/sandbox/aws-mobile-appsync-events-starter-react/node_modules/aws-appsync/node_modules/graphql/module/validation/rules/SingleFieldSubscriptions.js"],"sourcesContent":["\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             * \n                                             */\n\nexport function singleFieldOnlyMessage(name) {\n  return (name ? 'Subscription \"' + name + '\" ' : 'Anonymous Subscription ') + 'must select only one top level field.';\n}\n\n/**\n * Subscriptions must only include one field.\n *\n * A GraphQL subscription is valid only if it contains a single root field.\n */\nexport function SingleFieldSubscriptions(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new GraphQLError(singleFieldOnlyMessage(node.name && node.name.value), node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}"],"mappings":"AACA,SAASA,YAAT,QAA6B,aAA7B;AAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,sBAAT,CAAgCC,IAAhC,EAAsC;EAC3C,OAAO,CAACA,IAAI,GAAG,mBAAmBA,IAAnB,GAA0B,IAA7B,GAAoC,yBAAzC,IAAsE,uCAA7E;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,wBAAT,CAAkCC,OAAlC,EAA2C;EAChD,OAAO;IACLC,mBAAmB,EAAE,SAASA,mBAAT,CAA6BC,IAA7B,EAAmC;MACtD,IAAIA,IAAI,CAACC,SAAL,KAAmB,cAAvB,EAAuC;QACrC,IAAID,IAAI,CAACE,YAAL,CAAkBC,UAAlB,CAA6BC,MAA7B,KAAwC,CAA5C,EAA+C;UAC7CN,OAAO,CAACO,WAAR,CAAoB,IAAIX,YAAJ,CAAiBC,sBAAsB,CAACK,IAAI,CAACJ,IAAL,IAAaI,IAAI,CAACJ,IAAL,CAAUU,KAAxB,CAAvC,EAAuEN,IAAI,CAACE,YAAL,CAAkBC,UAAlB,CAA6BI,KAA7B,CAAmC,CAAnC,CAAvE,CAApB;QACD;MACF;IACF;EAPI,CAAP;AASD"},"metadata":{},"sourceType":"module"}