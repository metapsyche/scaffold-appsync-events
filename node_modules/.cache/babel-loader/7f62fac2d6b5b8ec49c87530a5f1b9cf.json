{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { ApolloLink, execute } from 'apollo-link';\nimport { isProduction, removeConnectionDirectiveFromDocument } from 'apollo-utilities';\nimport { QueryManager } from './core/QueryManager';\nimport { DataStore } from './data/store';\nimport { version } from './version';\nvar hasSuggestedDevtools = false;\n\nvar ApolloClient = function () {\n  function ApolloClient(options) {\n    var _this = this;\n\n    this.defaultOptions = {};\n    this.resetStoreCallbacks = [];\n    var link = options.link,\n        cache = options.cache,\n        _a = options.ssrMode,\n        ssrMode = _a === void 0 ? false : _a,\n        _b = options.ssrForceFetchDelay,\n        ssrForceFetchDelay = _b === void 0 ? 0 : _b,\n        connectToDevTools = options.connectToDevTools,\n        _c = options.queryDeduplication,\n        queryDeduplication = _c === void 0 ? true : _c,\n        defaultOptions = options.defaultOptions;\n\n    if (!link || !cache) {\n      throw new Error(\"\\n        In order to initialize Apollo Client, you must specify link & cache properties on the config object.\\n        This is part of the required upgrade when migrating from Apollo Client 1.0 to Apollo Client 2.0.\\n        For more information, please visit:\\n          https://www.apollographql.com/docs/react/basics/setup.html\\n        to help you get started.\\n      \");\n    }\n\n    var supportedCache = new Map();\n    var supportedDirectives = new ApolloLink(function (operation, forward) {\n      var result = supportedCache.get(operation.query);\n\n      if (!result) {\n        result = removeConnectionDirectiveFromDocument(operation.query);\n        supportedCache.set(operation.query, result);\n        supportedCache.set(result, result);\n      }\n\n      operation.query = result;\n      return forward(operation);\n    });\n    this.link = supportedDirectives.concat(link);\n    this.cache = cache;\n    this.store = new DataStore(cache);\n    this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n    this.queryDeduplication = queryDeduplication;\n    this.ssrMode = ssrMode;\n    this.defaultOptions = defaultOptions || {};\n\n    if (ssrForceFetchDelay) {\n      setTimeout(function () {\n        return _this.disableNetworkFetches = false;\n      }, ssrForceFetchDelay);\n    }\n\n    this.watchQuery = this.watchQuery.bind(this);\n    this.query = this.query.bind(this);\n    this.mutate = this.mutate.bind(this);\n    this.resetStore = this.resetStore.bind(this);\n    this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n    var defaultConnectToDevTools = !isProduction() && typeof window !== 'undefined' && !window.__APOLLO_CLIENT__;\n\n    if (typeof connectToDevTools === 'undefined' ? defaultConnectToDevTools : connectToDevTools && typeof window !== 'undefined') {\n      window.__APOLLO_CLIENT__ = this;\n    }\n\n    if (!hasSuggestedDevtools && !isProduction()) {\n      hasSuggestedDevtools = true;\n\n      if (typeof window !== 'undefined' && window.document && window.top === window.self) {\n        if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n          if (window.navigator && window.navigator.userAgent && window.navigator.userAgent.indexOf('Chrome') > -1) {\n            console.debug('Download the Apollo DevTools ' + 'for a better development experience: ' + 'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n          }\n        }\n      }\n    }\n\n    this.version = version;\n  }\n\n  ApolloClient.prototype.watchQuery = function (options) {\n    if (this.defaultOptions.watchQuery) {\n      options = __assign({}, this.defaultOptions.watchQuery, options);\n    }\n\n    if (this.disableNetworkFetches && (options.fetchPolicy === 'network-only' || options.fetchPolicy === 'cache-and-network')) {\n      options = __assign({}, options, {\n        fetchPolicy: 'cache-first'\n      });\n    }\n\n    return this.initQueryManager().watchQuery(options);\n  };\n\n  ApolloClient.prototype.query = function (options) {\n    if (this.defaultOptions.query) {\n      options = __assign({}, this.defaultOptions.query, options);\n    }\n\n    if (options.fetchPolicy === 'cache-and-network') {\n      throw new Error('cache-and-network fetchPolicy can only be used with watchQuery');\n    }\n\n    if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n      options = __assign({}, options, {\n        fetchPolicy: 'cache-first'\n      });\n    }\n\n    return this.initQueryManager().query(options);\n  };\n\n  ApolloClient.prototype.mutate = function (options) {\n    if (this.defaultOptions.mutate) {\n      options = __assign({}, this.defaultOptions.mutate, options);\n    }\n\n    return this.initQueryManager().mutate(options);\n  };\n\n  ApolloClient.prototype.subscribe = function (options) {\n    return this.initQueryManager().startGraphQLSubscription(options);\n  };\n\n  ApolloClient.prototype.readQuery = function (options, optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    return this.initProxy().readQuery(options, optimistic);\n  };\n\n  ApolloClient.prototype.readFragment = function (options, optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    return this.initProxy().readFragment(options, optimistic);\n  };\n\n  ApolloClient.prototype.writeQuery = function (options) {\n    var result = this.initProxy().writeQuery(options);\n    this.initQueryManager().broadcastQueries();\n    return result;\n  };\n\n  ApolloClient.prototype.writeFragment = function (options) {\n    var result = this.initProxy().writeFragment(options);\n    this.initQueryManager().broadcastQueries();\n    return result;\n  };\n\n  ApolloClient.prototype.writeData = function (options) {\n    var result = this.initProxy().writeData(options);\n    this.initQueryManager().broadcastQueries();\n    return result;\n  };\n\n  ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n    this.devToolsHookCb = cb;\n  };\n\n  ApolloClient.prototype.__requestRaw = function (payload) {\n    return execute(this.link, payload);\n  };\n\n  ApolloClient.prototype.initQueryManager = function () {\n    var _this = this;\n\n    if (!this.queryManager) {\n      this.queryManager = new QueryManager({\n        link: this.link,\n        store: this.store,\n        queryDeduplication: this.queryDeduplication,\n        ssrMode: this.ssrMode,\n        onBroadcast: function () {\n          if (_this.devToolsHookCb) {\n            _this.devToolsHookCb({\n              action: {},\n              state: {\n                queries: _this.queryManager ? _this.queryManager.queryStore.getStore() : {},\n                mutations: _this.queryManager ? _this.queryManager.mutationStore.getStore() : {}\n              },\n              dataWithOptimisticResults: _this.cache.extract(true)\n            });\n          }\n        }\n      });\n    }\n\n    return this.queryManager;\n  };\n\n  ApolloClient.prototype.resetStore = function () {\n    var _this = this;\n\n    return Promise.resolve().then(function () {\n      return _this.queryManager ? _this.queryManager.clearStore() : Promise.resolve(null);\n    }).then(function () {\n      return Promise.all(_this.resetStoreCallbacks.map(function (fn) {\n        return fn();\n      }));\n    }).then(function () {\n      return _this.queryManager && _this.queryManager.reFetchObservableQueries ? _this.queryManager.reFetchObservableQueries() : Promise.resolve(null);\n    });\n  };\n\n  ApolloClient.prototype.clearStore = function () {\n    var queryManager = this.queryManager;\n    return Promise.resolve().then(function () {\n      return queryManager ? queryManager.clearStore() : Promise.resolve(null);\n    });\n  };\n\n  ApolloClient.prototype.onResetStore = function (cb) {\n    var _this = this;\n\n    this.resetStoreCallbacks.push(cb);\n    return function () {\n      _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) {\n        return c !== cb;\n      });\n    };\n  };\n\n  ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n    return this.queryManager ? this.queryManager.reFetchObservableQueries(includeStandby) : Promise.resolve(null);\n  };\n\n  ApolloClient.prototype.extract = function (optimistic) {\n    return this.initProxy().extract(optimistic);\n  };\n\n  ApolloClient.prototype.restore = function (serializedState) {\n    return this.initProxy().restore(serializedState);\n  };\n\n  ApolloClient.prototype.initProxy = function () {\n    if (!this.proxy) {\n      this.initQueryManager();\n      this.proxy = this.cache;\n    }\n\n    return this.proxy;\n  };\n\n  return ApolloClient;\n}();\n\nexport default ApolloClient;","map":{"version":3,"sources":["../src/ApolloClient.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ApolloLink, execute, } from 'apollo-link';\nimport { isProduction, removeConnectionDirectiveFromDocument, } from 'apollo-utilities';\nimport { QueryManager } from './core/QueryManager';\nimport { DataStore } from './data/store';\nimport { version } from './version';\nvar hasSuggestedDevtools = false;\nvar ApolloClient = (function () {\n    function ApolloClient(options) {\n        var _this = this;\n        this.defaultOptions = {};\n        this.resetStoreCallbacks = [];\n        var link = options.link, cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, connectToDevTools = options.connectToDevTools, _c = options.queryDeduplication, queryDeduplication = _c === void 0 ? true : _c, defaultOptions = options.defaultOptions;\n        if (!link || !cache) {\n            throw new Error(\"\\n        In order to initialize Apollo Client, you must specify link & cache properties on the config object.\\n        This is part of the required upgrade when migrating from Apollo Client 1.0 to Apollo Client 2.0.\\n        For more information, please visit:\\n          https://www.apollographql.com/docs/react/basics/setup.html\\n        to help you get started.\\n      \");\n        }\n        var supportedCache = new Map();\n        var supportedDirectives = new ApolloLink(function (operation, forward) {\n            var result = supportedCache.get(operation.query);\n            if (!result) {\n                result = removeConnectionDirectiveFromDocument(operation.query);\n                supportedCache.set(operation.query, result);\n                supportedCache.set(result, result);\n            }\n            operation.query = result;\n            return forward(operation);\n        });\n        this.link = supportedDirectives.concat(link);\n        this.cache = cache;\n        this.store = new DataStore(cache);\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.ssrMode = ssrMode;\n        this.defaultOptions = defaultOptions || {};\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        var defaultConnectToDevTools = !isProduction() &&\n            typeof window !== 'undefined' &&\n            !window.__APOLLO_CLIENT__;\n        if (typeof connectToDevTools === 'undefined'\n            ? defaultConnectToDevTools\n            : connectToDevTools && typeof window !== 'undefined') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        if (!hasSuggestedDevtools && !isProduction()) {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self) {\n                if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n                    if (window.navigator &&\n                        window.navigator.userAgent &&\n                        window.navigator.userAgent.indexOf('Chrome') > -1) {\n                        console.debug('Download the Apollo DevTools ' +\n                            'for a better development experience: ' +\n                            'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n                    }\n                }\n            }\n        }\n        this.version = version;\n    }\n    ApolloClient.prototype.watchQuery = function (options) {\n        if (this.defaultOptions.watchQuery) {\n            options = __assign({}, this.defaultOptions.watchQuery, options);\n        }\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options = __assign({}, options, { fetchPolicy: 'cache-first' });\n        }\n        return this.initQueryManager().watchQuery(options);\n    };\n    ApolloClient.prototype.query = function (options) {\n        if (this.defaultOptions.query) {\n            options = __assign({}, this.defaultOptions.query, options);\n        }\n        if (options.fetchPolicy === 'cache-and-network') {\n            throw new Error('cache-and-network fetchPolicy can only be used with watchQuery');\n        }\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign({}, options, { fetchPolicy: 'cache-first' });\n        }\n        return this.initQueryManager().query(options);\n    };\n    ApolloClient.prototype.mutate = function (options) {\n        if (this.defaultOptions.mutate) {\n            options = __assign({}, this.defaultOptions.mutate, options);\n        }\n        return this.initQueryManager().mutate(options);\n    };\n    ApolloClient.prototype.subscribe = function (options) {\n        return this.initQueryManager().startGraphQLSubscription(options);\n    };\n    ApolloClient.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.initProxy().readQuery(options, optimistic);\n    };\n    ApolloClient.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.initProxy().readFragment(options, optimistic);\n    };\n    ApolloClient.prototype.writeQuery = function (options) {\n        var result = this.initProxy().writeQuery(options);\n        this.initQueryManager().broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeFragment = function (options) {\n        var result = this.initProxy().writeFragment(options);\n        this.initQueryManager().broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeData = function (options) {\n        var result = this.initProxy().writeData(options);\n        this.initQueryManager().broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return execute(this.link, payload);\n    };\n    ApolloClient.prototype.initQueryManager = function () {\n        var _this = this;\n        if (!this.queryManager) {\n            this.queryManager = new QueryManager({\n                link: this.link,\n                store: this.store,\n                queryDeduplication: this.queryDeduplication,\n                ssrMode: this.ssrMode,\n                onBroadcast: function () {\n                    if (_this.devToolsHookCb) {\n                        _this.devToolsHookCb({\n                            action: {},\n                            state: {\n                                queries: _this.queryManager\n                                    ? _this.queryManager.queryStore.getStore()\n                                    : {},\n                                mutations: _this.queryManager\n                                    ? _this.queryManager.mutationStore.getStore()\n                                    : {},\n                            },\n                            dataWithOptimisticResults: _this.cache.extract(true),\n                        });\n                    }\n                },\n            });\n        }\n        return this.queryManager;\n    };\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () {\n            return _this.queryManager\n                ? _this.queryManager.clearStore()\n                : Promise.resolve(null);\n        })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () {\n            return _this.queryManager && _this.queryManager.reFetchObservableQueries\n                ? _this.queryManager.reFetchObservableQueries()\n                : Promise.resolve(null);\n        });\n    };\n    ApolloClient.prototype.clearStore = function () {\n        var queryManager = this.queryManager;\n        return Promise.resolve().then(function () { return (queryManager ? queryManager.clearStore() : Promise.resolve(null)); });\n    };\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager\n            ? this.queryManager.reFetchObservableQueries(includeStandby)\n            : Promise.resolve(null);\n    };\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.initProxy().extract(optimistic);\n    };\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.initProxy().restore(serializedState);\n    };\n    ApolloClient.prototype.initProxy = function () {\n        if (!this.proxy) {\n            this.initQueryManager();\n            this.proxy = this.cache;\n        }\n        return this.proxy;\n    };\n    return ApolloClient;\n}());\nexport default ApolloClient;\n//# sourceMappingURL=ApolloClient.js.map"]},"metadata":{},"sourceType":"module"}