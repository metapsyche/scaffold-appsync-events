{"ast":null,"code":"import { getOperationName, tryFunctionOrLogError, graphQLResultHasError } from 'apollo-utilities';\n\nvar DataStore = function () {\n  function DataStore(initialCache) {\n    this.cache = initialCache;\n  }\n\n  DataStore.prototype.getCache = function () {\n    return this.cache;\n  };\n\n  DataStore.prototype.markQueryResult = function (result, document, variables, fetchMoreForQueryId, ignoreErrors) {\n    if (ignoreErrors === void 0) {\n      ignoreErrors = false;\n    }\n\n    var writeWithErrors = !graphQLResultHasError(result);\n\n    if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n      writeWithErrors = true;\n    }\n\n    if (!fetchMoreForQueryId && writeWithErrors) {\n      this.cache.write({\n        result: result.data,\n        dataId: 'ROOT_QUERY',\n        query: document,\n        variables: variables\n      });\n    }\n  };\n\n  DataStore.prototype.markSubscriptionResult = function (result, document, variables) {\n    if (!graphQLResultHasError(result)) {\n      this.cache.write({\n        result: result.data,\n        dataId: 'ROOT_SUBSCRIPTION',\n        query: document,\n        variables: variables\n      });\n    }\n  };\n\n  DataStore.prototype.markMutationInit = function (mutation) {\n    var _this = this;\n\n    if (mutation.optimisticResponse) {\n      var optimistic_1;\n\n      if (typeof mutation.optimisticResponse === 'function') {\n        optimistic_1 = mutation.optimisticResponse(mutation.variables);\n      } else {\n        optimistic_1 = mutation.optimisticResponse;\n      }\n\n      var changeFn_1 = function () {\n        _this.markMutationResult({\n          mutationId: mutation.mutationId,\n          result: {\n            data: optimistic_1\n          },\n          document: mutation.document,\n          variables: mutation.variables,\n          updateQueries: mutation.updateQueries,\n          update: mutation.update\n        });\n      };\n\n      this.cache.recordOptimisticTransaction(function (c) {\n        var orig = _this.cache;\n        _this.cache = c;\n\n        try {\n          changeFn_1();\n        } finally {\n          _this.cache = orig;\n        }\n      }, mutation.mutationId);\n    }\n  };\n\n  DataStore.prototype.markMutationResult = function (mutation) {\n    var _this = this;\n\n    if (!graphQLResultHasError(mutation.result)) {\n      var cacheWrites_1 = [];\n      cacheWrites_1.push({\n        result: mutation.result.data,\n        dataId: 'ROOT_MUTATION',\n        query: mutation.document,\n        variables: mutation.variables\n      });\n\n      if (mutation.updateQueries) {\n        Object.keys(mutation.updateQueries).filter(function (id) {\n          return mutation.updateQueries[id];\n        }).forEach(function (queryId) {\n          var _a = mutation.updateQueries[queryId],\n              query = _a.query,\n              updater = _a.updater;\n\n          var _b = _this.cache.diff({\n            query: query.document,\n            variables: query.variables,\n            returnPartialData: true,\n            optimistic: false\n          }),\n              currentQueryResult = _b.result,\n              complete = _b.complete;\n\n          if (!complete) {\n            return;\n          }\n\n          var nextQueryResult = tryFunctionOrLogError(function () {\n            return updater(currentQueryResult, {\n              mutationResult: mutation.result,\n              queryName: getOperationName(query.document) || undefined,\n              queryVariables: query.variables\n            });\n          });\n\n          if (nextQueryResult) {\n            cacheWrites_1.push({\n              result: nextQueryResult,\n              dataId: 'ROOT_QUERY',\n              query: query.document,\n              variables: query.variables\n            });\n          }\n        });\n      }\n\n      this.cache.performTransaction(function (c) {\n        cacheWrites_1.forEach(function (write) {\n          return c.write(write);\n        });\n      });\n      var update_1 = mutation.update;\n\n      if (update_1) {\n        this.cache.performTransaction(function (c) {\n          tryFunctionOrLogError(function () {\n            return update_1(c, mutation.result);\n          });\n        });\n      }\n    }\n  };\n\n  DataStore.prototype.markMutationComplete = function (_a) {\n    var mutationId = _a.mutationId,\n        optimisticResponse = _a.optimisticResponse;\n    if (!optimisticResponse) return;\n    this.cache.removeOptimistic(mutationId);\n  };\n\n  DataStore.prototype.markUpdateQueryResult = function (document, variables, newResult) {\n    this.cache.write({\n      result: newResult,\n      dataId: 'ROOT_QUERY',\n      variables: variables,\n      query: document\n    });\n  };\n\n  DataStore.prototype.reset = function () {\n    return this.cache.reset();\n  };\n\n  return DataStore;\n}();\n\nexport { DataStore };","map":{"version":3,"sources":["../../src/data/store.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { getOperationName, tryFunctionOrLogError, graphQLResultHasError, } from 'apollo-utilities';\nvar DataStore = (function () {\n    function DataStore(initialCache) {\n        this.cache = initialCache;\n    }\n    DataStore.prototype.getCache = function () {\n        return this.cache;\n    };\n    DataStore.prototype.markQueryResult = function (result, document, variables, fetchMoreForQueryId, ignoreErrors) {\n        if (ignoreErrors === void 0) { ignoreErrors = false; }\n        var writeWithErrors = !graphQLResultHasError(result);\n        if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n            writeWithErrors = true;\n        }\n        if (!fetchMoreForQueryId && writeWithErrors) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_QUERY',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markSubscriptionResult = function (result, document, variables) {\n        if (!graphQLResultHasError(result)) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_SUBSCRIPTION',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markMutationInit = function (mutation) {\n        var _this = this;\n        if (mutation.optimisticResponse) {\n            var optimistic_1;\n            if (typeof mutation.optimisticResponse === 'function') {\n                optimistic_1 = mutation.optimisticResponse(mutation.variables);\n            }\n            else {\n                optimistic_1 = mutation.optimisticResponse;\n            }\n            var changeFn_1 = function () {\n                _this.markMutationResult({\n                    mutationId: mutation.mutationId,\n                    result: { data: optimistic_1 },\n                    document: mutation.document,\n                    variables: mutation.variables,\n                    updateQueries: mutation.updateQueries,\n                    update: mutation.update,\n                });\n            };\n            this.cache.recordOptimisticTransaction(function (c) {\n                var orig = _this.cache;\n                _this.cache = c;\n                try {\n                    changeFn_1();\n                }\n                finally {\n                    _this.cache = orig;\n                }\n            }, mutation.mutationId);\n        }\n    };\n    DataStore.prototype.markMutationResult = function (mutation) {\n        var _this = this;\n        if (!graphQLResultHasError(mutation.result)) {\n            var cacheWrites_1 = [];\n            cacheWrites_1.push({\n                result: mutation.result.data,\n                dataId: 'ROOT_MUTATION',\n                query: mutation.document,\n                variables: mutation.variables,\n            });\n            if (mutation.updateQueries) {\n                Object.keys(mutation.updateQueries)\n                    .filter(function (id) { return mutation.updateQueries[id]; })\n                    .forEach(function (queryId) {\n                    var _a = mutation.updateQueries[queryId], query = _a.query, updater = _a.updater;\n                    var _b = _this.cache.diff({\n                        query: query.document,\n                        variables: query.variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _b.result, complete = _b.complete;\n                    if (!complete) {\n                        return;\n                    }\n                    var nextQueryResult = tryFunctionOrLogError(function () {\n                        return updater(currentQueryResult, {\n                            mutationResult: mutation.result,\n                            queryName: getOperationName(query.document) || undefined,\n                            queryVariables: query.variables,\n                        });\n                    });\n                    if (nextQueryResult) {\n                        cacheWrites_1.push({\n                            result: nextQueryResult,\n                            dataId: 'ROOT_QUERY',\n                            query: query.document,\n                            variables: query.variables,\n                        });\n                    }\n                });\n            }\n            this.cache.performTransaction(function (c) {\n                cacheWrites_1.forEach(function (write) { return c.write(write); });\n            });\n            var update_1 = mutation.update;\n            if (update_1) {\n                this.cache.performTransaction(function (c) {\n                    tryFunctionOrLogError(function () { return update_1(c, mutation.result); });\n                });\n            }\n        }\n    };\n    DataStore.prototype.markMutationComplete = function (_a) {\n        var mutationId = _a.mutationId, optimisticResponse = _a.optimisticResponse;\n        if (!optimisticResponse)\n            return;\n        this.cache.removeOptimistic(mutationId);\n    };\n    DataStore.prototype.markUpdateQueryResult = function (document, variables, newResult) {\n        this.cache.write({\n            result: newResult,\n            dataId: 'ROOT_QUERY',\n            variables: variables,\n            query: document,\n        });\n    };\n    DataStore.prototype.reset = function () {\n        return this.cache.reset();\n    };\n    return DataStore;\n}());\nexport { DataStore };\n//# sourceMappingURL=store.js.map"]},"metadata":{},"sourceType":"module"}