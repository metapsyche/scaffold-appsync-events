{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n// Spec Section: \"Executable Definitions\"\nimport { ExecutableDefinitions } from './rules/ExecutableDefinitions'; // Spec Section: \"Operation Name Uniqueness\"\n\nimport { UniqueOperationNames } from './rules/UniqueOperationNames'; // Spec Section: \"Lone Anonymous Operation\"\n\nimport { LoneAnonymousOperation } from './rules/LoneAnonymousOperation'; // Spec Section: \"Subscriptions with Single Root Field\"\n\nimport { SingleFieldSubscriptions } from './rules/SingleFieldSubscriptions'; // Spec Section: \"Fragment Spread Type Existence\"\n\nimport { KnownTypeNames } from './rules/KnownTypeNames'; // Spec Section: \"Fragments on Composite Types\"\n\nimport { FragmentsOnCompositeTypes } from './rules/FragmentsOnCompositeTypes'; // Spec Section: \"Variables are Input Types\"\n\nimport { VariablesAreInputTypes } from './rules/VariablesAreInputTypes'; // Spec Section: \"Leaf Field Selections\"\n\nimport { ScalarLeafs } from './rules/ScalarLeafs'; // Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\nimport { FieldsOnCorrectType } from './rules/FieldsOnCorrectType'; // Spec Section: \"Fragment Name Uniqueness\"\n\nimport { UniqueFragmentNames } from './rules/UniqueFragmentNames'; // Spec Section: \"Fragment spread target defined\"\n\nimport { KnownFragmentNames } from './rules/KnownFragmentNames'; // Spec Section: \"Fragments must be used\"\n\nimport { NoUnusedFragments } from './rules/NoUnusedFragments'; // Spec Section: \"Fragment spread is possible\"\n\nimport { PossibleFragmentSpreads } from './rules/PossibleFragmentSpreads'; // Spec Section: \"Fragments must not form cycles\"\n\nimport { NoFragmentCycles } from './rules/NoFragmentCycles'; // Spec Section: \"Variable Uniqueness\"\n\nimport { UniqueVariableNames } from './rules/UniqueVariableNames'; // Spec Section: \"All Variable Used Defined\"\n\nimport { NoUndefinedVariables } from './rules/NoUndefinedVariables'; // Spec Section: \"All Variables Used\"\n\nimport { NoUnusedVariables } from './rules/NoUnusedVariables'; // Spec Section: \"Directives Are Defined\"\n\nimport { KnownDirectives } from './rules/KnownDirectives'; // Spec Section: \"Directives Are Unique Per Location\"\n\nimport { UniqueDirectivesPerLocation } from './rules/UniqueDirectivesPerLocation'; // Spec Section: \"Argument Names\"\n\nimport { KnownArgumentNames } from './rules/KnownArgumentNames'; // Spec Section: \"Argument Uniqueness\"\n\nimport { UniqueArgumentNames } from './rules/UniqueArgumentNames'; // Spec Section: \"Value Type Correctness\"\n\nimport { ValuesOfCorrectType } from './rules/ValuesOfCorrectType'; // Spec Section: \"Argument Optionality\"\n\nimport { ProvidedNonNullArguments } from './rules/ProvidedNonNullArguments'; // Spec Section: \"Variables Default Value Is Allowed\"\n\nimport { VariablesDefaultValueAllowed } from './rules/VariablesDefaultValueAllowed'; // Spec Section: \"All Variable Usages Are Allowed\"\n\nimport { VariablesInAllowedPosition } from './rules/VariablesInAllowedPosition'; // Spec Section: \"Field Selection Merging\"\n\nimport { OverlappingFieldsCanBeMerged } from './rules/OverlappingFieldsCanBeMerged'; // Spec Section: \"Input Object Field Uniqueness\"\n\nimport { UniqueInputFieldNames } from './rules/UniqueInputFieldNames';\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\n\nexport var specifiedRules = [ExecutableDefinitions, UniqueOperationNames, LoneAnonymousOperation, SingleFieldSubscriptions, KnownTypeNames, FragmentsOnCompositeTypes, VariablesAreInputTypes, ScalarLeafs, FieldsOnCorrectType, UniqueFragmentNames, KnownFragmentNames, NoUnusedFragments, PossibleFragmentSpreads, NoFragmentCycles, UniqueVariableNames, NoUndefinedVariables, NoUnusedVariables, KnownDirectives, UniqueDirectivesPerLocation, KnownArgumentNames, UniqueArgumentNames, ValuesOfCorrectType, ProvidedNonNullArguments, VariablesDefaultValueAllowed, VariablesInAllowedPosition, OverlappingFieldsCanBeMerged, UniqueInputFieldNames];","map":{"version":3,"names":["ExecutableDefinitions","UniqueOperationNames","LoneAnonymousOperation","SingleFieldSubscriptions","KnownTypeNames","FragmentsOnCompositeTypes","VariablesAreInputTypes","ScalarLeafs","FieldsOnCorrectType","UniqueFragmentNames","KnownFragmentNames","NoUnusedFragments","PossibleFragmentSpreads","NoFragmentCycles","UniqueVariableNames","NoUndefinedVariables","NoUnusedVariables","KnownDirectives","UniqueDirectivesPerLocation","KnownArgumentNames","UniqueArgumentNames","ValuesOfCorrectType","ProvidedNonNullArguments","VariablesDefaultValueAllowed","VariablesInAllowedPosition","OverlappingFieldsCanBeMerged","UniqueInputFieldNames","specifiedRules"],"sources":["/Users/roaldmaravillas/ro/sandbox/aws-mobile-appsync-events-starter-react/node_modules/aws-appsync/node_modules/graphql/module/validation/specifiedRules.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n// Spec Section: \"Executable Definitions\"\nimport { ExecutableDefinitions } from './rules/ExecutableDefinitions';\n\n// Spec Section: \"Operation Name Uniqueness\"\nimport { UniqueOperationNames } from './rules/UniqueOperationNames';\n\n// Spec Section: \"Lone Anonymous Operation\"\nimport { LoneAnonymousOperation } from './rules/LoneAnonymousOperation';\n\n// Spec Section: \"Subscriptions with Single Root Field\"\nimport { SingleFieldSubscriptions } from './rules/SingleFieldSubscriptions';\n\n// Spec Section: \"Fragment Spread Type Existence\"\nimport { KnownTypeNames } from './rules/KnownTypeNames';\n\n// Spec Section: \"Fragments on Composite Types\"\nimport { FragmentsOnCompositeTypes } from './rules/FragmentsOnCompositeTypes';\n\n// Spec Section: \"Variables are Input Types\"\nimport { VariablesAreInputTypes } from './rules/VariablesAreInputTypes';\n\n// Spec Section: \"Leaf Field Selections\"\nimport { ScalarLeafs } from './rules/ScalarLeafs';\n\n// Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\nimport { FieldsOnCorrectType } from './rules/FieldsOnCorrectType';\n\n// Spec Section: \"Fragment Name Uniqueness\"\nimport { UniqueFragmentNames } from './rules/UniqueFragmentNames';\n\n// Spec Section: \"Fragment spread target defined\"\nimport { KnownFragmentNames } from './rules/KnownFragmentNames';\n\n// Spec Section: \"Fragments must be used\"\nimport { NoUnusedFragments } from './rules/NoUnusedFragments';\n\n// Spec Section: \"Fragment spread is possible\"\nimport { PossibleFragmentSpreads } from './rules/PossibleFragmentSpreads';\n\n// Spec Section: \"Fragments must not form cycles\"\nimport { NoFragmentCycles } from './rules/NoFragmentCycles';\n\n// Spec Section: \"Variable Uniqueness\"\nimport { UniqueVariableNames } from './rules/UniqueVariableNames';\n\n// Spec Section: \"All Variable Used Defined\"\nimport { NoUndefinedVariables } from './rules/NoUndefinedVariables';\n\n// Spec Section: \"All Variables Used\"\nimport { NoUnusedVariables } from './rules/NoUnusedVariables';\n\n// Spec Section: \"Directives Are Defined\"\nimport { KnownDirectives } from './rules/KnownDirectives';\n\n// Spec Section: \"Directives Are Unique Per Location\"\nimport { UniqueDirectivesPerLocation } from './rules/UniqueDirectivesPerLocation';\n\n// Spec Section: \"Argument Names\"\nimport { KnownArgumentNames } from './rules/KnownArgumentNames';\n\n// Spec Section: \"Argument Uniqueness\"\nimport { UniqueArgumentNames } from './rules/UniqueArgumentNames';\n\n// Spec Section: \"Value Type Correctness\"\nimport { ValuesOfCorrectType } from './rules/ValuesOfCorrectType';\n\n// Spec Section: \"Argument Optionality\"\nimport { ProvidedNonNullArguments } from './rules/ProvidedNonNullArguments';\n\n// Spec Section: \"Variables Default Value Is Allowed\"\nimport { VariablesDefaultValueAllowed } from './rules/VariablesDefaultValueAllowed';\n\n// Spec Section: \"All Variable Usages Are Allowed\"\nimport { VariablesInAllowedPosition } from './rules/VariablesInAllowedPosition';\n\n// Spec Section: \"Field Selection Merging\"\nimport { OverlappingFieldsCanBeMerged } from './rules/OverlappingFieldsCanBeMerged';\n\n// Spec Section: \"Input Object Field Uniqueness\"\nimport { UniqueInputFieldNames } from './rules/UniqueInputFieldNames';\n\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\nexport var specifiedRules = [ExecutableDefinitions, UniqueOperationNames, LoneAnonymousOperation, SingleFieldSubscriptions, KnownTypeNames, FragmentsOnCompositeTypes, VariablesAreInputTypes, ScalarLeafs, FieldsOnCorrectType, UniqueFragmentNames, KnownFragmentNames, NoUnusedFragments, PossibleFragmentSpreads, NoFragmentCycles, UniqueVariableNames, NoUndefinedVariables, NoUnusedVariables, KnownDirectives, UniqueDirectivesPerLocation, KnownArgumentNames, UniqueArgumentNames, ValuesOfCorrectType, ProvidedNonNullArguments, VariablesDefaultValueAllowed, VariablesInAllowedPosition, OverlappingFieldsCanBeMerged, UniqueInputFieldNames];"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,SAASA,qBAAT,QAAsC,+BAAtC,C,CAEA;;AACA,SAASC,oBAAT,QAAqC,8BAArC,C,CAEA;;AACA,SAASC,sBAAT,QAAuC,gCAAvC,C,CAEA;;AACA,SAASC,wBAAT,QAAyC,kCAAzC,C,CAEA;;AACA,SAASC,cAAT,QAA+B,wBAA/B,C,CAEA;;AACA,SAASC,yBAAT,QAA0C,mCAA1C,C,CAEA;;AACA,SAASC,sBAAT,QAAuC,gCAAvC,C,CAEA;;AACA,SAASC,WAAT,QAA4B,qBAA5B,C,CAEA;;AACA,SAASC,mBAAT,QAAoC,6BAApC,C,CAEA;;AACA,SAASC,mBAAT,QAAoC,6BAApC,C,CAEA;;AACA,SAASC,kBAAT,QAAmC,4BAAnC,C,CAEA;;AACA,SAASC,iBAAT,QAAkC,2BAAlC,C,CAEA;;AACA,SAASC,uBAAT,QAAwC,iCAAxC,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,0BAAjC,C,CAEA;;AACA,SAASC,mBAAT,QAAoC,6BAApC,C,CAEA;;AACA,SAASC,oBAAT,QAAqC,8BAArC,C,CAEA;;AACA,SAASC,iBAAT,QAAkC,2BAAlC,C,CAEA;;AACA,SAASC,eAAT,QAAgC,yBAAhC,C,CAEA;;AACA,SAASC,2BAAT,QAA4C,qCAA5C,C,CAEA;;AACA,SAASC,kBAAT,QAAmC,4BAAnC,C,CAEA;;AACA,SAASC,mBAAT,QAAoC,6BAApC,C,CAEA;;AACA,SAASC,mBAAT,QAAoC,6BAApC,C,CAEA;;AACA,SAASC,wBAAT,QAAyC,kCAAzC,C,CAEA;;AACA,SAASC,4BAAT,QAA6C,sCAA7C,C,CAEA;;AACA,SAASC,0BAAT,QAA2C,oCAA3C,C,CAEA;;AACA,SAASC,4BAAT,QAA6C,sCAA7C,C,CAEA;;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,cAAc,GAAG,CAAC3B,qBAAD,EAAwBC,oBAAxB,EAA8CC,sBAA9C,EAAsEC,wBAAtE,EAAgGC,cAAhG,EAAgHC,yBAAhH,EAA2IC,sBAA3I,EAAmKC,WAAnK,EAAgLC,mBAAhL,EAAqMC,mBAArM,EAA0NC,kBAA1N,EAA8OC,iBAA9O,EAAiQC,uBAAjQ,EAA0RC,gBAA1R,EAA4SC,mBAA5S,EAAiUC,oBAAjU,EAAuVC,iBAAvV,EAA0WC,eAA1W,EAA2XC,2BAA3X,EAAwZC,kBAAxZ,EAA4aC,mBAA5a,EAAicC,mBAAjc,EAAsdC,wBAAtd,EAAgfC,4BAAhf,EAA8gBC,0BAA9gB,EAA0iBC,4BAA1iB,EAAwkBC,qBAAxkB,CAArB"},"metadata":{},"sourceType":"module"}