{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOperationAST = getOperationAST;\n\nvar _kinds = require('../language/kinds');\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\n\n\nfunction getOperationAST(documentAST, operationName) {\n  var operation = null;\n\n  for (var i = 0; i < documentAST.definitions.length; i++) {\n    var definition = documentAST.definitions[i];\n\n    if (definition.kind === _kinds.OPERATION_DEFINITION) {\n      if (!operationName) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n\n        operation = definition;\n      } else if (definition.name && definition.name.value === operationName) {\n        return definition;\n      }\n    }\n  }\n\n  return operation;\n}\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */","map":{"version":3,"names":["Object","defineProperty","exports","value","getOperationAST","_kinds","require","documentAST","operationName","operation","i","definitions","length","definition","kind","OPERATION_DEFINITION","name"],"sources":["/Users/roaldmaravillas/ro/github/scaffold-appsync-events/node_modules/graphql/utilities/getOperationAST.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOperationAST = getOperationAST;\n\nvar _kinds = require('../language/kinds');\n\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\nfunction getOperationAST(documentAST, operationName) {\n  var operation = null;\n  for (var i = 0; i < documentAST.definitions.length; i++) {\n    var definition = documentAST.definitions[i];\n    if (definition.kind === _kinds.OPERATION_DEFINITION) {\n      if (!operationName) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n        operation = definition;\n      } else if (definition.name && definition.name.value === operationName) {\n        return definition;\n      }\n    }\n  }\n  return operation;\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,eAAR,GAA0BA,eAA1B;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,mBAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;;;AACA,SAASF,eAAT,CAAyBG,WAAzB,EAAsCC,aAAtC,EAAqD;EACnD,IAAIC,SAAS,GAAG,IAAhB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAAW,CAACI,WAAZ,CAAwBC,MAA5C,EAAoDF,CAAC,EAArD,EAAyD;IACvD,IAAIG,UAAU,GAAGN,WAAW,CAACI,WAAZ,CAAwBD,CAAxB,CAAjB;;IACA,IAAIG,UAAU,CAACC,IAAX,KAAoBT,MAAM,CAACU,oBAA/B,EAAqD;MACnD,IAAI,CAACP,aAAL,EAAoB;QAClB;QACA;QACA;QACA,IAAIC,SAAJ,EAAe;UACb,OAAO,IAAP;QACD;;QACDA,SAAS,GAAGI,UAAZ;MACD,CARD,MAQO,IAAIA,UAAU,CAACG,IAAX,IAAmBH,UAAU,CAACG,IAAX,CAAgBb,KAAhB,KAA0BK,aAAjD,EAAgE;QACrE,OAAOK,UAAP;MACD;IACF;EACF;;EACD,OAAOJ,SAAP;AACD;AAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script"}