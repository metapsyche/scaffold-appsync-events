{"ast":null,"code":"import Observable from 'zen-observable-ts';\nimport { validateOperation, isTerminating, LinkError, transformOperation, createOperation } from './linkUtils';\n\nvar passthrough = function (op, forward) {\n  return forward ? forward(op) : Observable.of();\n};\n\nvar toLink = function (handler) {\n  return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n};\n\nexport var empty = function () {\n  return new ApolloLink(function (op, forward) {\n    return Observable.of();\n  });\n};\nexport var from = function (links) {\n  if (links.length === 0) return empty();\n  return links.map(toLink).reduce(function (x, y) {\n    return x.concat(y);\n  });\n};\nexport var split = function (test, left, right) {\n  if (right === void 0) {\n    right = new ApolloLink(passthrough);\n  }\n\n  var leftLink = toLink(left);\n  var rightLink = toLink(right);\n\n  if (isTerminating(leftLink) && isTerminating(rightLink)) {\n    return new ApolloLink(function (operation) {\n      return test(operation) ? leftLink.request(operation) || Observable.of() : rightLink.request(operation) || Observable.of();\n    });\n  } else {\n    return new ApolloLink(function (operation, forward) {\n      return test(operation) ? leftLink.request(operation, forward) || Observable.of() : rightLink.request(operation, forward) || Observable.of();\n    });\n  }\n}; // join two Links together\n\nexport var concat = function (first, second) {\n  var firstLink = toLink(first);\n\n  if (isTerminating(firstLink)) {\n    console.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\", firstLink));\n    return firstLink;\n  }\n\n  var nextLink = toLink(second);\n\n  if (isTerminating(nextLink)) {\n    return new ApolloLink(function (operation) {\n      return firstLink.request(operation, function (op) {\n        return nextLink.request(op) || Observable.of();\n      }) || Observable.of();\n    });\n  } else {\n    return new ApolloLink(function (operation, forward) {\n      return firstLink.request(operation, function (op) {\n        return nextLink.request(op, forward) || Observable.of();\n      }) || Observable.of();\n    });\n  }\n};\n\nvar ApolloLink =\n/** @class */\nfunction () {\n  function ApolloLink(request) {\n    if (request) this.request = request;\n  }\n\n  ApolloLink.prototype.split = function (test, left, right) {\n    if (right === void 0) {\n      right = new ApolloLink(passthrough);\n    }\n\n    return this.concat(split(test, left, right));\n  };\n\n  ApolloLink.prototype.concat = function (next) {\n    return concat(this, next);\n  };\n\n  ApolloLink.prototype.request = function (operation, forward) {\n    throw new Error('request is not implemented');\n  };\n\n  ApolloLink.empty = empty;\n  ApolloLink.from = from;\n  ApolloLink.split = split;\n  ApolloLink.execute = execute;\n  return ApolloLink;\n}();\n\nexport { ApolloLink };\nexport function execute(link, operation) {\n  return link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of();\n}","map":{"version":3,"sources":["../src/link.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import Observable from 'zen-observable-ts';\nimport { validateOperation, isTerminating, LinkError, transformOperation, createOperation, } from './linkUtils';\nvar passthrough = function (op, forward) { return (forward ? forward(op) : Observable.of()); };\nvar toLink = function (handler) {\n    return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n};\nexport var empty = function () {\n    return new ApolloLink(function (op, forward) { return Observable.of(); });\n};\nexport var from = function (links) {\n    if (links.length === 0)\n        return empty();\n    return links.map(toLink).reduce(function (x, y) { return x.concat(y); });\n};\nexport var split = function (test, left, right) {\n    if (right === void 0) { right = new ApolloLink(passthrough); }\n    var leftLink = toLink(left);\n    var rightLink = toLink(right);\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n        return new ApolloLink(function (operation) {\n            return test(operation)\n                ? leftLink.request(operation) || Observable.of()\n                : rightLink.request(operation) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return test(operation)\n                ? leftLink.request(operation, forward) || Observable.of()\n                : rightLink.request(operation, forward) || Observable.of();\n        });\n    }\n};\n// join two Links together\nexport var concat = function (first, second) {\n    var firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n        console.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\", firstLink));\n        return firstLink;\n    }\n    var nextLink = toLink(second);\n    if (isTerminating(nextLink)) {\n        return new ApolloLink(function (operation) {\n            return firstLink.request(operation, function (op) { return nextLink.request(op) || Observable.of(); }) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return (firstLink.request(operation, function (op) {\n                return nextLink.request(op, forward) || Observable.of();\n            }) || Observable.of());\n        });\n    }\n};\nvar ApolloLink = /** @class */ (function () {\n    function ApolloLink(request) {\n        if (request)\n            this.request = request;\n    }\n    ApolloLink.prototype.split = function (test, left, right) {\n        if (right === void 0) { right = new ApolloLink(passthrough); }\n        return this.concat(split(test, left, right));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        return concat(this, next);\n    };\n    ApolloLink.prototype.request = function (operation, forward) {\n        throw new Error('request is not implemented');\n    };\n    ApolloLink.empty = empty;\n    ApolloLink.from = from;\n    ApolloLink.split = split;\n    ApolloLink.execute = execute;\n    return ApolloLink;\n}());\nexport { ApolloLink };\nexport function execute(link, operation) {\n    return (link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of());\n}\n//# sourceMappingURL=link.js.map"]},"metadata":{},"sourceType":"module"}