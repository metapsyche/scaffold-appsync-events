{"ast":null,"code":"var toString = Object.prototype.toString;\nexport function cloneDeep(value) {\n  return cloneDeepHelper(value, new Map());\n}\n\nfunction cloneDeepHelper(val, seen) {\n  switch (toString.call(val)) {\n    case \"[object Array]\":\n      {\n        if (seen.has(val)) return seen.get(val);\n        var copy_1 = val.slice(0);\n        seen.set(val, copy_1);\n        copy_1.forEach(function (child, i) {\n          copy_1[i] = cloneDeepHelper(child, seen);\n        });\n        return copy_1;\n      }\n\n    case \"[object Object]\":\n      {\n        if (seen.has(val)) return seen.get(val);\n        var copy_2 = Object.create(Object.getPrototypeOf(val));\n        seen.set(val, copy_2);\n        Object.keys(val).forEach(function (key) {\n          copy_2[key] = cloneDeepHelper(val[key], seen);\n        });\n        return copy_2;\n      }\n\n    default:\n      return val;\n  }\n}","map":{"version":3,"sources":["../../src/util/cloneDeep.ts"],"names":[],"mappings":"AAAQ,IAAA,QAAA,GAAA,MAAA,CAAA,SAAA,CAAA,QAAA;AAKR,OAAM,SAAU,SAAV,CAAuB,KAAvB,EAA+B;EACnC,OAAO,eAAe,CAAC,KAAD,EAAQ,IAAI,GAAJ,EAAR,CAAtB;AACD;;AAED,SAAS,eAAT,CAA4B,GAA5B,EAAoC,IAApC,EAAuD;EACrD,QAAQ,QAAQ,CAAC,IAAT,CAAc,GAAd,CAAR;IACA,KAAK,gBAAL;MAAuB;QACrB,IAAI,IAAI,CAAC,GAAL,CAAS,GAAT,CAAJ,EAAmB,OAAO,IAAI,CAAC,GAAL,CAAS,GAAT,CAAP;QACnB,IAAM,MAAI,GAAe,GAAW,CAAC,KAAZ,CAAkB,CAAlB,CAAzB;QACA,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,MAAd;QACA,MAAI,CAAC,OAAL,CAAa,UAAU,KAAV,EAAiB,CAAjB,EAAkB;UAC7B,MAAI,CAAC,CAAD,CAAJ,GAAU,eAAe,CAAC,KAAD,EAAQ,IAAR,CAAzB;QACD,CAFD;QAGA,OAAO,MAAP;MACD;;IAED,KAAK,iBAAL;MAAwB;QACtB,IAAI,IAAI,CAAC,GAAL,CAAS,GAAT,CAAJ,EAAmB,OAAO,IAAI,CAAC,GAAL,CAAS,GAAT,CAAP;QAGnB,IAAM,MAAI,GAAG,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,cAAP,CAAsB,GAAtB,CAAd,CAAb;QACA,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,MAAd;QACA,MAAM,CAAC,IAAP,CAAY,GAAZ,EAAiB,OAAjB,CAAyB,UAAA,GAAA,EAAG;UAC1B,MAAI,CAAC,GAAD,CAAJ,GAAY,eAAe,CAAE,GAAW,CAAC,GAAD,CAAb,EAAoB,IAApB,CAA3B;QACD,CAFD;QAGA,OAAO,MAAP;MACD;;IAED;MACE,OAAO,GAAP;EAxBF;AA0BD","sourceRoot":"","sourcesContent":["var toString = Object.prototype.toString;\nexport function cloneDeep(value) {\n    return cloneDeepHelper(value, new Map());\n}\nfunction cloneDeepHelper(val, seen) {\n    switch (toString.call(val)) {\n        case \"[object Array]\": {\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_1 = val.slice(0);\n            seen.set(val, copy_1);\n            copy_1.forEach(function (child, i) {\n                copy_1[i] = cloneDeepHelper(child, seen);\n            });\n            return copy_1;\n        }\n        case \"[object Object]\": {\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_2 = Object.create(Object.getPrototypeOf(val));\n            seen.set(val, copy_2);\n            Object.keys(val).forEach(function (key) {\n                copy_2[key] = cloneDeepHelper(val[key], seen);\n            });\n            return copy_2;\n        }\n        default:\n            return val;\n    }\n}\n//# sourceMappingURL=cloneDeep.js.map"]},"metadata":{},"sourceType":"module"}