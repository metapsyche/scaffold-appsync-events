{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport './fixPolyfills';\nimport { ApolloCache } from 'apollo-cache';\nimport { getFragmentQueryDocument, addTypenameToDocument } from 'apollo-utilities';\nimport { HeuristicFragmentMatcher } from './fragmentMatcher';\nimport { StoreReader } from './readFromStore';\nimport { StoreWriter } from './writeToStore';\nimport { DepTrackingCache } from './depTrackingCache';\nimport { wrap, CacheKeyNode } from './optimism';\nimport { ObjectCache } from './objectCache';\nimport { record } from './recordingCache';\nvar defaultConfig = {\n  fragmentMatcher: new HeuristicFragmentMatcher(),\n  dataIdFromObject: defaultDataIdFromObject,\n  addTypename: true,\n  resultCaching: true\n};\nexport function defaultDataIdFromObject(result) {\n  if (result.__typename) {\n    if (result.id !== undefined) {\n      return result.__typename + \":\" + result.id;\n    }\n\n    if (result._id !== undefined) {\n      return result.__typename + \":\" + result._id;\n    }\n  }\n\n  return null;\n}\n\nvar InMemoryCache = function (_super) {\n  __extends(InMemoryCache, _super);\n\n  function InMemoryCache(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.optimistic = [];\n    _this.watches = new Set();\n    _this.typenameDocumentCache = new Map();\n    _this.cacheKeyRoot = new CacheKeyNode();\n    _this.silenceBroadcast = false;\n    _this.config = __assign({}, defaultConfig, config);\n\n    if (_this.config.customResolvers) {\n      console.warn('customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.');\n      _this.config.cacheRedirects = _this.config.customResolvers;\n    }\n\n    if (_this.config.cacheResolvers) {\n      console.warn('cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.');\n      _this.config.cacheRedirects = _this.config.cacheResolvers;\n    }\n\n    _this.addTypename = _this.config.addTypename;\n    _this.data = _this.config.resultCaching ? new DepTrackingCache() : new ObjectCache();\n    _this.storeReader = new StoreReader(_this.cacheKeyRoot);\n    _this.storeWriter = new StoreWriter();\n    var cache = _this;\n    var maybeBroadcastWatch = cache.maybeBroadcastWatch;\n    _this.maybeBroadcastWatch = wrap(function (c) {\n      return maybeBroadcastWatch.call(_this, c);\n    }, {\n      makeCacheKey: function (c) {\n        if (c.optimistic && cache.optimistic.length > 0) {\n          return;\n        }\n\n        if (c.previousResult) {\n          return;\n        }\n\n        if (cache.data instanceof DepTrackingCache) {\n          return cache.cacheKeyRoot.lookup(c.query, JSON.stringify(c.variables));\n        }\n      }\n    });\n    return _this;\n  }\n\n  InMemoryCache.prototype.restore = function (data) {\n    if (data) this.data.replace(data);\n    return this;\n  };\n\n  InMemoryCache.prototype.extract = function (optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    if (optimistic && this.optimistic.length > 0) {\n      var patches = this.optimistic.map(function (opt) {\n        return opt.data;\n      });\n      return Object.assign.apply(Object, [{}, this.data.toObject()].concat(patches));\n    }\n\n    return this.data.toObject();\n  };\n\n  InMemoryCache.prototype.read = function (query) {\n    if (query.rootId && this.data.get(query.rootId) === undefined) {\n      return null;\n    }\n\n    var store = query.optimistic && this.optimistic.length ? new ObjectCache(this.extract(true)) : this.data;\n    return this.storeReader.readQueryFromStore({\n      store: store,\n      query: this.transformDocument(query.query),\n      variables: query.variables,\n      rootId: query.rootId,\n      fragmentMatcherFunction: this.config.fragmentMatcher.match,\n      previousResult: query.previousResult,\n      config: this.config\n    });\n  };\n\n  InMemoryCache.prototype.write = function (write) {\n    this.storeWriter.writeResultToStore({\n      dataId: write.dataId,\n      result: write.result,\n      variables: write.variables,\n      document: this.transformDocument(write.query),\n      store: this.data,\n      dataIdFromObject: this.config.dataIdFromObject,\n      fragmentMatcherFunction: this.config.fragmentMatcher.match\n    });\n    this.broadcastWatches();\n  };\n\n  InMemoryCache.prototype.diff = function (query) {\n    var store = query.optimistic && this.optimistic.length ? new ObjectCache(this.extract(true)) : this.data;\n    return this.storeReader.diffQueryAgainstStore({\n      store: store,\n      query: this.transformDocument(query.query),\n      variables: query.variables,\n      returnPartialData: query.returnPartialData,\n      previousResult: query.previousResult,\n      fragmentMatcherFunction: this.config.fragmentMatcher.match,\n      config: this.config\n    });\n  };\n\n  InMemoryCache.prototype.watch = function (watch) {\n    var _this = this;\n\n    this.watches.add(watch);\n    return function () {\n      _this.watches.delete(watch);\n    };\n  };\n\n  InMemoryCache.prototype.evict = function (query) {\n    throw new Error(\"eviction is not implemented on InMemory Cache\");\n  };\n\n  InMemoryCache.prototype.reset = function () {\n    this.data.clear();\n    this.broadcastWatches();\n    return Promise.resolve();\n  };\n\n  InMemoryCache.prototype.removeOptimistic = function (id) {\n    var _this = this;\n\n    var toPerform = this.optimistic.filter(function (item) {\n      return item.id !== id;\n    });\n    this.optimistic = [];\n    toPerform.forEach(function (change) {\n      _this.recordOptimisticTransaction(change.transaction, change.id);\n    });\n    this.broadcastWatches();\n  };\n\n  InMemoryCache.prototype.performTransaction = function (transaction) {\n    var alreadySilenced = this.silenceBroadcast;\n    this.silenceBroadcast = true;\n    transaction(this);\n\n    if (!alreadySilenced) {\n      this.silenceBroadcast = false;\n    }\n\n    this.broadcastWatches();\n  };\n\n  InMemoryCache.prototype.recordOptimisticTransaction = function (transaction, id) {\n    var _this = this;\n\n    this.silenceBroadcast = true;\n    var patch = record(this.extract(true), function (recordingCache) {\n      var dataCache = _this.data;\n      _this.data = recordingCache;\n\n      _this.performTransaction(transaction);\n\n      _this.data = dataCache;\n    });\n    this.optimistic.push({\n      id: id,\n      transaction: transaction,\n      data: patch\n    });\n    this.silenceBroadcast = false;\n    this.broadcastWatches();\n  };\n\n  InMemoryCache.prototype.transformDocument = function (document) {\n    if (this.addTypename) {\n      var result = this.typenameDocumentCache.get(document);\n\n      if (!result) {\n        result = addTypenameToDocument(document);\n        this.typenameDocumentCache.set(document, result);\n        this.typenameDocumentCache.set(result, result);\n      }\n\n      return result;\n    }\n\n    return document;\n  };\n\n  InMemoryCache.prototype.readQuery = function (options, optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    return this.read({\n      query: options.query,\n      variables: options.variables,\n      optimistic: optimistic\n    });\n  };\n\n  InMemoryCache.prototype.readFragment = function (options, optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    return this.read({\n      query: this.transformDocument(getFragmentQueryDocument(options.fragment, options.fragmentName)),\n      variables: options.variables,\n      rootId: options.id,\n      optimistic: optimistic\n    });\n  };\n\n  InMemoryCache.prototype.writeQuery = function (options) {\n    this.write({\n      dataId: 'ROOT_QUERY',\n      result: options.data,\n      query: this.transformDocument(options.query),\n      variables: options.variables\n    });\n  };\n\n  InMemoryCache.prototype.writeFragment = function (options) {\n    this.write({\n      dataId: options.id,\n      result: options.data,\n      query: this.transformDocument(getFragmentQueryDocument(options.fragment, options.fragmentName)),\n      variables: options.variables\n    });\n  };\n\n  InMemoryCache.prototype.broadcastWatches = function () {\n    var _this = this;\n\n    if (!this.silenceBroadcast) {\n      var optimistic_1 = this.optimistic.length > 0;\n      this.watches.forEach(function (c) {\n        _this.maybeBroadcastWatch(c);\n\n        if (optimistic_1) {\n          _this.maybeBroadcastWatch.dirty(c);\n        }\n      });\n    }\n  };\n\n  InMemoryCache.prototype.maybeBroadcastWatch = function (c) {\n    c.callback(this.diff({\n      query: c.query,\n      variables: c.variables,\n      previousResult: c.previousResult && c.previousResult(),\n      optimistic: c.optimistic\n    }));\n  };\n\n  return InMemoryCache;\n}(ApolloCache);\n\nexport { InMemoryCache };","map":{"version":3,"sources":["../src/inMemoryCache.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport './fixPolyfills';\nimport { ApolloCache } from 'apollo-cache';\nimport { getFragmentQueryDocument, addTypenameToDocument, } from 'apollo-utilities';\nimport { HeuristicFragmentMatcher } from './fragmentMatcher';\nimport { StoreReader } from './readFromStore';\nimport { StoreWriter } from './writeToStore';\nimport { DepTrackingCache } from './depTrackingCache';\nimport { wrap, CacheKeyNode } from './optimism';\nimport { ObjectCache } from './objectCache';\nimport { record } from './recordingCache';\nvar defaultConfig = {\n    fragmentMatcher: new HeuristicFragmentMatcher(),\n    dataIdFromObject: defaultDataIdFromObject,\n    addTypename: true,\n    resultCaching: true,\n};\nexport function defaultDataIdFromObject(result) {\n    if (result.__typename) {\n        if (result.id !== undefined) {\n            return result.__typename + \":\" + result.id;\n        }\n        if (result._id !== undefined) {\n            return result.__typename + \":\" + result._id;\n        }\n    }\n    return null;\n}\nvar InMemoryCache = (function (_super) {\n    __extends(InMemoryCache, _super);\n    function InMemoryCache(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this) || this;\n        _this.optimistic = [];\n        _this.watches = new Set();\n        _this.typenameDocumentCache = new Map();\n        _this.cacheKeyRoot = new CacheKeyNode();\n        _this.silenceBroadcast = false;\n        _this.config = __assign({}, defaultConfig, config);\n        if (_this.config.customResolvers) {\n            console.warn('customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.customResolvers;\n        }\n        if (_this.config.cacheResolvers) {\n            console.warn('cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.cacheResolvers;\n        }\n        _this.addTypename = _this.config.addTypename;\n        _this.data = _this.config.resultCaching\n            ? new DepTrackingCache()\n            : new ObjectCache();\n        _this.storeReader = new StoreReader(_this.cacheKeyRoot);\n        _this.storeWriter = new StoreWriter();\n        var cache = _this;\n        var maybeBroadcastWatch = cache.maybeBroadcastWatch;\n        _this.maybeBroadcastWatch = wrap(function (c) {\n            return maybeBroadcastWatch.call(_this, c);\n        }, {\n            makeCacheKey: function (c) {\n                if (c.optimistic && cache.optimistic.length > 0) {\n                    return;\n                }\n                if (c.previousResult) {\n                    return;\n                }\n                if (cache.data instanceof DepTrackingCache) {\n                    return cache.cacheKeyRoot.lookup(c.query, JSON.stringify(c.variables));\n                }\n            }\n        });\n        return _this;\n    }\n    InMemoryCache.prototype.restore = function (data) {\n        if (data)\n            this.data.replace(data);\n        return this;\n    };\n    InMemoryCache.prototype.extract = function (optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        if (optimistic && this.optimistic.length > 0) {\n            var patches = this.optimistic.map(function (opt) { return opt.data; });\n            return Object.assign.apply(Object, [{}, this.data.toObject()].concat(patches));\n        }\n        return this.data.toObject();\n    };\n    InMemoryCache.prototype.read = function (query) {\n        if (query.rootId && this.data.get(query.rootId) === undefined) {\n            return null;\n        }\n        var store = query.optimistic && this.optimistic.length\n            ? new ObjectCache(this.extract(true))\n            : this.data;\n        return this.storeReader.readQueryFromStore({\n            store: store,\n            query: this.transformDocument(query.query),\n            variables: query.variables,\n            rootId: query.rootId,\n            fragmentMatcherFunction: this.config.fragmentMatcher.match,\n            previousResult: query.previousResult,\n            config: this.config,\n        });\n    };\n    InMemoryCache.prototype.write = function (write) {\n        this.storeWriter.writeResultToStore({\n            dataId: write.dataId,\n            result: write.result,\n            variables: write.variables,\n            document: this.transformDocument(write.query),\n            store: this.data,\n            dataIdFromObject: this.config.dataIdFromObject,\n            fragmentMatcherFunction: this.config.fragmentMatcher.match,\n        });\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.diff = function (query) {\n        var store = query.optimistic && this.optimistic.length\n            ? new ObjectCache(this.extract(true))\n            : this.data;\n        return this.storeReader.diffQueryAgainstStore({\n            store: store,\n            query: this.transformDocument(query.query),\n            variables: query.variables,\n            returnPartialData: query.returnPartialData,\n            previousResult: query.previousResult,\n            fragmentMatcherFunction: this.config.fragmentMatcher.match,\n            config: this.config,\n        });\n    };\n    InMemoryCache.prototype.watch = function (watch) {\n        var _this = this;\n        this.watches.add(watch);\n        return function () {\n            _this.watches.delete(watch);\n        };\n    };\n    InMemoryCache.prototype.evict = function (query) {\n        throw new Error(\"eviction is not implemented on InMemory Cache\");\n    };\n    InMemoryCache.prototype.reset = function () {\n        this.data.clear();\n        this.broadcastWatches();\n        return Promise.resolve();\n    };\n    InMemoryCache.prototype.removeOptimistic = function (id) {\n        var _this = this;\n        var toPerform = this.optimistic.filter(function (item) { return item.id !== id; });\n        this.optimistic = [];\n        toPerform.forEach(function (change) {\n            _this.recordOptimisticTransaction(change.transaction, change.id);\n        });\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.performTransaction = function (transaction) {\n        var alreadySilenced = this.silenceBroadcast;\n        this.silenceBroadcast = true;\n        transaction(this);\n        if (!alreadySilenced) {\n            this.silenceBroadcast = false;\n        }\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.recordOptimisticTransaction = function (transaction, id) {\n        var _this = this;\n        this.silenceBroadcast = true;\n        var patch = record(this.extract(true), function (recordingCache) {\n            var dataCache = _this.data;\n            _this.data = recordingCache;\n            _this.performTransaction(transaction);\n            _this.data = dataCache;\n        });\n        this.optimistic.push({\n            id: id,\n            transaction: transaction,\n            data: patch,\n        });\n        this.silenceBroadcast = false;\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.transformDocument = function (document) {\n        if (this.addTypename) {\n            var result = this.typenameDocumentCache.get(document);\n            if (!result) {\n                result = addTypenameToDocument(document);\n                this.typenameDocumentCache.set(document, result);\n                this.typenameDocumentCache.set(result, result);\n            }\n            return result;\n        }\n        return document;\n    };\n    InMemoryCache.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: options.query,\n            variables: options.variables,\n            optimistic: optimistic,\n        });\n    };\n    InMemoryCache.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: this.transformDocument(getFragmentQueryDocument(options.fragment, options.fragmentName)),\n            variables: options.variables,\n            rootId: options.id,\n            optimistic: optimistic,\n        });\n    };\n    InMemoryCache.prototype.writeQuery = function (options) {\n        this.write({\n            dataId: 'ROOT_QUERY',\n            result: options.data,\n            query: this.transformDocument(options.query),\n            variables: options.variables,\n        });\n    };\n    InMemoryCache.prototype.writeFragment = function (options) {\n        this.write({\n            dataId: options.id,\n            result: options.data,\n            query: this.transformDocument(getFragmentQueryDocument(options.fragment, options.fragmentName)),\n            variables: options.variables,\n        });\n    };\n    InMemoryCache.prototype.broadcastWatches = function () {\n        var _this = this;\n        if (!this.silenceBroadcast) {\n            var optimistic_1 = this.optimistic.length > 0;\n            this.watches.forEach(function (c) {\n                _this.maybeBroadcastWatch(c);\n                if (optimistic_1) {\n                    _this.maybeBroadcastWatch.dirty(c);\n                }\n            });\n        }\n    };\n    InMemoryCache.prototype.maybeBroadcastWatch = function (c) {\n        c.callback(this.diff({\n            query: c.query,\n            variables: c.variables,\n            previousResult: c.previousResult && c.previousResult(),\n            optimistic: c.optimistic,\n        }));\n    };\n    return InMemoryCache;\n}(ApolloCache));\nexport { InMemoryCache };\n//# sourceMappingURL=inMemoryCache.js.map"]},"metadata":{},"sourceType":"module"}