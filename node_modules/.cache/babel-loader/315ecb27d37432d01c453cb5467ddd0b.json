{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport isNullish from '../jsutils/isNullish';\nimport isInvalid from '../jsutils/isInvalid';\nimport objectValues from '../jsutils/objectValues';\nimport { astFromValue } from '../utilities/astFromValue';\nimport { print } from '../language/printer';\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from '../type/definition';\nimport { GraphQLString, isSpecifiedScalarType } from '../type/scalars';\nimport { GraphQLDirective, DEFAULT_DEPRECATION_REASON, isSpecifiedDirective } from '../type/directives';\nimport { isIntrospectionType } from '../type/introspection';\n/**\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\n\nexport function printSchema(schema, options) {\n  return printFilteredSchema(schema, function (n) {\n    return !isSpecifiedDirective(n);\n  }, isDefinedType, options);\n}\nexport function printIntrospectionSchema(schema, options) {\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType, options);\n}\n\nfunction isDefinedType(type) {\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter, options) {\n  var directives = schema.getDirectives().filter(directiveFilter);\n  var typeMap = schema.getTypeMap();\n  var types = objectValues(typeMap).sort(function (type1, type2) {\n    return type1.name.localeCompare(type2.name);\n  }).filter(typeFilter);\n  return [printSchemaDefinition(schema)].concat(directives.map(function (directive) {\n    return printDirective(directive, options);\n  }), types.map(function (type) {\n    return printType(type, options);\n  })).filter(Boolean).join('\\n\\n') + '\\n';\n}\n\nfunction printSchemaDefinition(schema) {\n  if (isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  var operationTypes = [];\n  var queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push('  query: ' + queryType.name);\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push('  mutation: ' + mutationType.name);\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push('  subscription: ' + subscriptionType.name);\n  }\n\n  return 'schema {\\n' + operationTypes.join('\\n') + '\\n}';\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *   }\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\n\nfunction isSchemaOfCommonNames(schema) {\n  var queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nexport function printType(type, options) {\n  if (isScalarType(type)) {\n    return printScalar(type, options);\n  } else if (isObjectType(type)) {\n    return printObject(type, options);\n  } else if (isInterfaceType(type)) {\n    return printInterface(type, options);\n  } else if (isUnionType(type)) {\n    return printUnion(type, options);\n  } else if (isEnumType(type)) {\n    return printEnum(type, options);\n  } else if (isInputObjectType(type)) {\n    return printInputObject(type, options);\n  }\n  /* istanbul ignore next */\n\n\n  throw new Error('Unknown type: ' + type + '.');\n}\n\nfunction printScalar(type, options) {\n  return printDescription(options, type) + ('scalar ' + type.name);\n}\n\nfunction printObject(type, options) {\n  var interfaces = type.getInterfaces();\n  var implementedInterfaces = interfaces.length ? ' implements ' + interfaces.map(function (i) {\n    return i.name;\n  }).join(' & ') : '';\n  return printDescription(options, type) + ('type ' + type.name + implementedInterfaces + ' {\\n') + printFields(options, type) + '\\n' + '}';\n}\n\nfunction printInterface(type, options) {\n  return printDescription(options, type) + ('interface ' + type.name + ' {\\n') + printFields(options, type) + '\\n' + '}';\n}\n\nfunction printUnion(type, options) {\n  return printDescription(options, type) + ('union ' + type.name + ' = ' + type.getTypes().join(' | '));\n}\n\nfunction printEnum(type, options) {\n  return printDescription(options, type) + ('enum ' + type.name + ' {\\n') + printEnumValues(type.getValues(), options) + '\\n' + '}';\n}\n\nfunction printEnumValues(values, options) {\n  return values.map(function (value, i) {\n    return printDescription(options, value, '  ', !i) + '  ' + value.name + printDeprecated(value);\n  }).join('\\n');\n}\n\nfunction printInputObject(type, options) {\n  var fields = objectValues(type.getFields());\n  return printDescription(options, type) + ('input ' + type.name + ' {\\n') + fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + printInputValue(f);\n  }).join('\\n') + '\\n' + '}';\n}\n\nfunction printFields(options, type) {\n  var fields = objectValues(type.getFields());\n  return fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + f.name + printArgs(options, f.args, '  ') + ': ' + String(f.type) + printDeprecated(f);\n  }).join('\\n');\n}\n\nfunction printArgs(options, args) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n\n  if (args.every(function (arg) {\n    return !arg.description;\n  })) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return '(\\n' + args.map(function (arg, i) {\n    return printDescription(options, arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg);\n  }).join('\\n') + '\\n' + indentation + ')';\n}\n\nfunction printInputValue(arg) {\n  var argDecl = arg.name + ': ' + String(arg.type);\n\n  if (!isInvalid(arg.defaultValue)) {\n    argDecl += ' = ' + print(astFromValue(arg.defaultValue, arg.type));\n  }\n\n  return argDecl;\n}\n\nfunction printDirective(directive, options) {\n  return printDescription(options, directive) + 'directive @' + directive.name + printArgs(options, directive.args) + ' on ' + directive.locations.join(' | ');\n}\n\nfunction printDeprecated(fieldOrEnumVal) {\n  if (!fieldOrEnumVal.isDeprecated) {\n    return '';\n  }\n\n  var reason = fieldOrEnumVal.deprecationReason;\n\n  if (isNullish(reason) || reason === '' || reason === DEFAULT_DEPRECATION_REASON) {\n    return ' @deprecated';\n  }\n\n  return ' @deprecated(reason: ' + print(astFromValue(reason, GraphQLString)) + ')';\n}\n\nfunction printDescription(options, def) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var firstInBlock = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n  if (!def.description) {\n    return '';\n  }\n\n  var lines = descriptionLines(def.description, 120 - indentation.length);\n\n  if (options && options.commentDescriptions) {\n    return printDescriptionWithComments(lines, indentation, firstInBlock);\n  }\n\n  var description = indentation && !firstInBlock ? '\\n' + indentation + '\"\"\"' : indentation + '\"\"\"'; // In some circumstances, a single line can be used for the description.\n\n  if (lines.length === 1 && lines[0].length < 70 && lines[0][lines[0].length - 1] !== '\"') {\n    return description + escapeQuote(lines[0]) + '\"\"\"\\n';\n  } // Format a multi-line block quote to account for leading space.\n\n\n  var hasLeadingSpace = lines[0][0] === ' ' || lines[0][0] === '\\t';\n\n  if (!hasLeadingSpace) {\n    description += '\\n';\n  }\n\n  for (var i = 0; i < lines.length; i++) {\n    if (i !== 0 || !hasLeadingSpace) {\n      description += indentation;\n    }\n\n    description += escapeQuote(lines[i]) + '\\n';\n  }\n\n  description += indentation + '\"\"\"\\n';\n  return description;\n}\n\nfunction escapeQuote(line) {\n  return line.replace(/\"\"\"/g, '\\\\\"\"\"');\n}\n\nfunction printDescriptionWithComments(lines, indentation, firstInBlock) {\n  var description = indentation && !firstInBlock ? '\\n' : '';\n\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i] === '') {\n      description += indentation + '#\\n';\n    } else {\n      description += indentation + '# ' + lines[i] + '\\n';\n    }\n  }\n\n  return description;\n}\n\nfunction descriptionLines(description, maxLen) {\n  var lines = [];\n  var rawLines = description.split('\\n');\n\n  for (var i = 0; i < rawLines.length; i++) {\n    if (rawLines[i] === '') {\n      lines.push(rawLines[i]);\n    } else {\n      // For > 120 character long lines, cut at space boundaries into sublines\n      // of ~80 chars.\n      var sublines = breakLine(rawLines[i], maxLen);\n\n      for (var j = 0; j < sublines.length; j++) {\n        lines.push(sublines[j]);\n      }\n    }\n  }\n\n  return lines;\n}\n\nfunction breakLine(line, maxLen) {\n  if (line.length < maxLen + 5) {\n    return [line];\n  }\n\n  var parts = line.split(new RegExp('((?: |^).{15,' + (maxLen - 40) + '}(?= |$))'));\n\n  if (parts.length < 4) {\n    return [line];\n  }\n\n  var sublines = [parts[0] + parts[1] + parts[2]];\n\n  for (var i = 3; i < parts.length; i += 2) {\n    sublines.push(parts[i].slice(1) + parts[i + 1]);\n  }\n\n  return sublines;\n}","map":{"version":3,"names":["isNullish","isInvalid","objectValues","astFromValue","print","isScalarType","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","GraphQLString","isSpecifiedScalarType","GraphQLDirective","DEFAULT_DEPRECATION_REASON","isSpecifiedDirective","isIntrospectionType","printSchema","schema","options","printFilteredSchema","n","isDefinedType","printIntrospectionSchema","type","directiveFilter","typeFilter","directives","getDirectives","filter","typeMap","getTypeMap","types","sort","type1","type2","name","localeCompare","printSchemaDefinition","concat","map","directive","printDirective","printType","Boolean","join","isSchemaOfCommonNames","operationTypes","queryType","getQueryType","push","mutationType","getMutationType","subscriptionType","getSubscriptionType","printScalar","printObject","printInterface","printUnion","printEnum","printInputObject","Error","printDescription","interfaces","getInterfaces","implementedInterfaces","length","i","printFields","getTypes","printEnumValues","getValues","values","value","printDeprecated","fields","getFields","f","printInputValue","printArgs","args","String","indentation","arguments","undefined","every","arg","description","argDecl","defaultValue","locations","fieldOrEnumVal","isDeprecated","reason","deprecationReason","def","firstInBlock","lines","descriptionLines","commentDescriptions","printDescriptionWithComments","escapeQuote","hasLeadingSpace","line","replace","maxLen","rawLines","split","sublines","breakLine","j","parts","RegExp","slice"],"sources":["/Users/roaldmaravillas/ro/sandbox/aws-mobile-appsync-events-starter-react/node_modules/aws-appsync/node_modules/graphql/module/utilities/schemaPrinter.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport isNullish from '../jsutils/isNullish';\nimport isInvalid from '../jsutils/isInvalid';\nimport objectValues from '../jsutils/objectValues';\nimport { astFromValue } from '../utilities/astFromValue';\nimport { print } from '../language/printer';\n\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from '../type/definition';\n\nimport { GraphQLString, isSpecifiedScalarType } from '../type/scalars';\nimport { GraphQLDirective, DEFAULT_DEPRECATION_REASON, isSpecifiedDirective } from '../type/directives';\nimport { isIntrospectionType } from '../type/introspection';\n\n/**\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nexport function printSchema(schema, options) {\n  return printFilteredSchema(schema, function (n) {\n    return !isSpecifiedDirective(n);\n  }, isDefinedType, options);\n}\n\nexport function printIntrospectionSchema(schema, options) {\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType, options);\n}\n\nfunction isDefinedType(type) {\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter, options) {\n  var directives = schema.getDirectives().filter(directiveFilter);\n  var typeMap = schema.getTypeMap();\n  var types = objectValues(typeMap).sort(function (type1, type2) {\n    return type1.name.localeCompare(type2.name);\n  }).filter(typeFilter);\n\n  return [printSchemaDefinition(schema)].concat(directives.map(function (directive) {\n    return printDirective(directive, options);\n  }), types.map(function (type) {\n    return printType(type, options);\n  })).filter(Boolean).join('\\n\\n') + '\\n';\n}\n\nfunction printSchemaDefinition(schema) {\n  if (isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  var operationTypes = [];\n\n  var queryType = schema.getQueryType();\n  if (queryType) {\n    operationTypes.push('  query: ' + queryType.name);\n  }\n\n  var mutationType = schema.getMutationType();\n  if (mutationType) {\n    operationTypes.push('  mutation: ' + mutationType.name);\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType) {\n    operationTypes.push('  subscription: ' + subscriptionType.name);\n  }\n\n  return 'schema {\\n' + operationTypes.join('\\n') + '\\n}';\n}\n\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *   }\n *\n * When using this naming convention, the schema description can be omitted.\n */\nfunction isSchemaOfCommonNames(schema) {\n  var queryType = schema.getQueryType();\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  var mutationType = schema.getMutationType();\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nexport function printType(type, options) {\n  if (isScalarType(type)) {\n    return printScalar(type, options);\n  } else if (isObjectType(type)) {\n    return printObject(type, options);\n  } else if (isInterfaceType(type)) {\n    return printInterface(type, options);\n  } else if (isUnionType(type)) {\n    return printUnion(type, options);\n  } else if (isEnumType(type)) {\n    return printEnum(type, options);\n  } else if (isInputObjectType(type)) {\n    return printInputObject(type, options);\n  }\n  /* istanbul ignore next */\n  throw new Error('Unknown type: ' + type + '.');\n}\n\nfunction printScalar(type, options) {\n  return printDescription(options, type) + ('scalar ' + type.name);\n}\n\nfunction printObject(type, options) {\n  var interfaces = type.getInterfaces();\n  var implementedInterfaces = interfaces.length ? ' implements ' + interfaces.map(function (i) {\n    return i.name;\n  }).join(' & ') : '';\n  return printDescription(options, type) + ('type ' + type.name + implementedInterfaces + ' {\\n') + printFields(options, type) + '\\n' + '}';\n}\n\nfunction printInterface(type, options) {\n  return printDescription(options, type) + ('interface ' + type.name + ' {\\n') + printFields(options, type) + '\\n' + '}';\n}\n\nfunction printUnion(type, options) {\n  return printDescription(options, type) + ('union ' + type.name + ' = ' + type.getTypes().join(' | '));\n}\n\nfunction printEnum(type, options) {\n  return printDescription(options, type) + ('enum ' + type.name + ' {\\n') + printEnumValues(type.getValues(), options) + '\\n' + '}';\n}\n\nfunction printEnumValues(values, options) {\n  return values.map(function (value, i) {\n    return printDescription(options, value, '  ', !i) + '  ' + value.name + printDeprecated(value);\n  }).join('\\n');\n}\n\nfunction printInputObject(type, options) {\n  var fields = objectValues(type.getFields());\n  return printDescription(options, type) + ('input ' + type.name + ' {\\n') + fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + printInputValue(f);\n  }).join('\\n') + '\\n' + '}';\n}\n\nfunction printFields(options, type) {\n  var fields = objectValues(type.getFields());\n  return fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + f.name + printArgs(options, f.args, '  ') + ': ' + String(f.type) + printDeprecated(f);\n  }).join('\\n');\n}\n\nfunction printArgs(options, args) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (args.length === 0) {\n    return '';\n  }\n\n  // If every arg does not have a description, print them on one line.\n  if (args.every(function (arg) {\n    return !arg.description;\n  })) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return '(\\n' + args.map(function (arg, i) {\n    return printDescription(options, arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg);\n  }).join('\\n') + '\\n' + indentation + ')';\n}\n\nfunction printInputValue(arg) {\n  var argDecl = arg.name + ': ' + String(arg.type);\n  if (!isInvalid(arg.defaultValue)) {\n    argDecl += ' = ' + print(astFromValue(arg.defaultValue, arg.type));\n  }\n  return argDecl;\n}\n\nfunction printDirective(directive, options) {\n  return printDescription(options, directive) + 'directive @' + directive.name + printArgs(options, directive.args) + ' on ' + directive.locations.join(' | ');\n}\n\nfunction printDeprecated(fieldOrEnumVal) {\n  if (!fieldOrEnumVal.isDeprecated) {\n    return '';\n  }\n  var reason = fieldOrEnumVal.deprecationReason;\n  if (isNullish(reason) || reason === '' || reason === DEFAULT_DEPRECATION_REASON) {\n    return ' @deprecated';\n  }\n  return ' @deprecated(reason: ' + print(astFromValue(reason, GraphQLString)) + ')';\n}\n\nfunction printDescription(options, def) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var firstInBlock = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n  if (!def.description) {\n    return '';\n  }\n\n  var lines = descriptionLines(def.description, 120 - indentation.length);\n  if (options && options.commentDescriptions) {\n    return printDescriptionWithComments(lines, indentation, firstInBlock);\n  }\n\n  var description = indentation && !firstInBlock ? '\\n' + indentation + '\"\"\"' : indentation + '\"\"\"';\n\n  // In some circumstances, a single line can be used for the description.\n  if (lines.length === 1 && lines[0].length < 70 && lines[0][lines[0].length - 1] !== '\"') {\n    return description + escapeQuote(lines[0]) + '\"\"\"\\n';\n  }\n\n  // Format a multi-line block quote to account for leading space.\n  var hasLeadingSpace = lines[0][0] === ' ' || lines[0][0] === '\\t';\n  if (!hasLeadingSpace) {\n    description += '\\n';\n  }\n  for (var i = 0; i < lines.length; i++) {\n    if (i !== 0 || !hasLeadingSpace) {\n      description += indentation;\n    }\n    description += escapeQuote(lines[i]) + '\\n';\n  }\n  description += indentation + '\"\"\"\\n';\n  return description;\n}\n\nfunction escapeQuote(line) {\n  return line.replace(/\"\"\"/g, '\\\\\"\"\"');\n}\n\nfunction printDescriptionWithComments(lines, indentation, firstInBlock) {\n  var description = indentation && !firstInBlock ? '\\n' : '';\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i] === '') {\n      description += indentation + '#\\n';\n    } else {\n      description += indentation + '# ' + lines[i] + '\\n';\n    }\n  }\n  return description;\n}\n\nfunction descriptionLines(description, maxLen) {\n  var lines = [];\n  var rawLines = description.split('\\n');\n  for (var i = 0; i < rawLines.length; i++) {\n    if (rawLines[i] === '') {\n      lines.push(rawLines[i]);\n    } else {\n      // For > 120 character long lines, cut at space boundaries into sublines\n      // of ~80 chars.\n      var sublines = breakLine(rawLines[i], maxLen);\n      for (var j = 0; j < sublines.length; j++) {\n        lines.push(sublines[j]);\n      }\n    }\n  }\n  return lines;\n}\n\nfunction breakLine(line, maxLen) {\n  if (line.length < maxLen + 5) {\n    return [line];\n  }\n  var parts = line.split(new RegExp('((?: |^).{15,' + (maxLen - 40) + '}(?= |$))'));\n  if (parts.length < 4) {\n    return [line];\n  }\n  var sublines = [parts[0] + parts[1] + parts[2]];\n  for (var i = 3; i < parts.length; i += 2) {\n    sublines.push(parts[i].slice(1) + parts[i + 1]);\n  }\n  return sublines;\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,sBAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AAEA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,eAArC,EAAsDC,WAAtD,EAAmEC,UAAnE,EAA+EC,iBAA/E,QAAwG,oBAAxG;AAEA,SAASC,aAAT,EAAwBC,qBAAxB,QAAqD,iBAArD;AACA,SAASC,gBAAT,EAA2BC,0BAA3B,EAAuDC,oBAAvD,QAAmF,oBAAnF;AACA,SAASC,mBAAT,QAAoC,uBAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,OAA7B,EAAsC;EAC3C,OAAOC,mBAAmB,CAACF,MAAD,EAAS,UAAUG,CAAV,EAAa;IAC9C,OAAO,CAACN,oBAAoB,CAACM,CAAD,CAA5B;EACD,CAFyB,EAEvBC,aAFuB,EAERH,OAFQ,CAA1B;AAGD;AAED,OAAO,SAASI,wBAAT,CAAkCL,MAAlC,EAA0CC,OAA1C,EAAmD;EACxD,OAAOC,mBAAmB,CAACF,MAAD,EAASH,oBAAT,EAA+BC,mBAA/B,EAAoDG,OAApD,CAA1B;AACD;;AAED,SAASG,aAAT,CAAuBE,IAAvB,EAA6B;EAC3B,OAAO,CAACZ,qBAAqB,CAACY,IAAD,CAAtB,IAAgC,CAACR,mBAAmB,CAACQ,IAAD,CAA3D;AACD;;AAED,SAASJ,mBAAT,CAA6BF,MAA7B,EAAqCO,eAArC,EAAsDC,UAAtD,EAAkEP,OAAlE,EAA2E;EACzE,IAAIQ,UAAU,GAAGT,MAAM,CAACU,aAAP,GAAuBC,MAAvB,CAA8BJ,eAA9B,CAAjB;EACA,IAAIK,OAAO,GAAGZ,MAAM,CAACa,UAAP,EAAd;EACA,IAAIC,KAAK,GAAG9B,YAAY,CAAC4B,OAAD,CAAZ,CAAsBG,IAAtB,CAA2B,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;IAC7D,OAAOD,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyBF,KAAK,CAACC,IAA/B,CAAP;EACD,CAFW,EAETP,MAFS,CAEFH,UAFE,CAAZ;EAIA,OAAO,CAACY,qBAAqB,CAACpB,MAAD,CAAtB,EAAgCqB,MAAhC,CAAuCZ,UAAU,CAACa,GAAX,CAAe,UAAUC,SAAV,EAAqB;IAChF,OAAOC,cAAc,CAACD,SAAD,EAAYtB,OAAZ,CAArB;EACD,CAF6C,CAAvC,EAEHa,KAAK,CAACQ,GAAN,CAAU,UAAUhB,IAAV,EAAgB;IAC5B,OAAOmB,SAAS,CAACnB,IAAD,EAAOL,OAAP,CAAhB;EACD,CAFG,CAFG,EAIHU,MAJG,CAIIe,OAJJ,EAIaC,IAJb,CAIkB,MAJlB,IAI4B,IAJnC;AAKD;;AAED,SAASP,qBAAT,CAA+BpB,MAA/B,EAAuC;EACrC,IAAI4B,qBAAqB,CAAC5B,MAAD,CAAzB,EAAmC;IACjC;EACD;;EAED,IAAI6B,cAAc,GAAG,EAArB;EAEA,IAAIC,SAAS,GAAG9B,MAAM,CAAC+B,YAAP,EAAhB;;EACA,IAAID,SAAJ,EAAe;IACbD,cAAc,CAACG,IAAf,CAAoB,cAAcF,SAAS,CAACZ,IAA5C;EACD;;EAED,IAAIe,YAAY,GAAGjC,MAAM,CAACkC,eAAP,EAAnB;;EACA,IAAID,YAAJ,EAAkB;IAChBJ,cAAc,CAACG,IAAf,CAAoB,iBAAiBC,YAAY,CAACf,IAAlD;EACD;;EAED,IAAIiB,gBAAgB,GAAGnC,MAAM,CAACoC,mBAAP,EAAvB;;EACA,IAAID,gBAAJ,EAAsB;IACpBN,cAAc,CAACG,IAAf,CAAoB,qBAAqBG,gBAAgB,CAACjB,IAA1D;EACD;;EAED,OAAO,eAAeW,cAAc,CAACF,IAAf,CAAoB,IAApB,CAAf,GAA2C,KAAlD;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,qBAAT,CAA+B5B,MAA/B,EAAuC;EACrC,IAAI8B,SAAS,GAAG9B,MAAM,CAAC+B,YAAP,EAAhB;;EACA,IAAID,SAAS,IAAIA,SAAS,CAACZ,IAAV,KAAmB,OAApC,EAA6C;IAC3C,OAAO,KAAP;EACD;;EAED,IAAIe,YAAY,GAAGjC,MAAM,CAACkC,eAAP,EAAnB;;EACA,IAAID,YAAY,IAAIA,YAAY,CAACf,IAAb,KAAsB,UAA1C,EAAsD;IACpD,OAAO,KAAP;EACD;;EAED,IAAIiB,gBAAgB,GAAGnC,MAAM,CAACoC,mBAAP,EAAvB;;EACA,IAAID,gBAAgB,IAAIA,gBAAgB,CAACjB,IAAjB,KAA0B,cAAlD,EAAkE;IAChE,OAAO,KAAP;EACD;;EAED,OAAO,IAAP;AACD;;AAED,OAAO,SAASO,SAAT,CAAmBnB,IAAnB,EAAyBL,OAAzB,EAAkC;EACvC,IAAId,YAAY,CAACmB,IAAD,CAAhB,EAAwB;IACtB,OAAO+B,WAAW,CAAC/B,IAAD,EAAOL,OAAP,CAAlB;EACD,CAFD,MAEO,IAAIb,YAAY,CAACkB,IAAD,CAAhB,EAAwB;IAC7B,OAAOgC,WAAW,CAAChC,IAAD,EAAOL,OAAP,CAAlB;EACD,CAFM,MAEA,IAAIZ,eAAe,CAACiB,IAAD,CAAnB,EAA2B;IAChC,OAAOiC,cAAc,CAACjC,IAAD,EAAOL,OAAP,CAArB;EACD,CAFM,MAEA,IAAIX,WAAW,CAACgB,IAAD,CAAf,EAAuB;IAC5B,OAAOkC,UAAU,CAAClC,IAAD,EAAOL,OAAP,CAAjB;EACD,CAFM,MAEA,IAAIV,UAAU,CAACe,IAAD,CAAd,EAAsB;IAC3B,OAAOmC,SAAS,CAACnC,IAAD,EAAOL,OAAP,CAAhB;EACD,CAFM,MAEA,IAAIT,iBAAiB,CAACc,IAAD,CAArB,EAA6B;IAClC,OAAOoC,gBAAgB,CAACpC,IAAD,EAAOL,OAAP,CAAvB;EACD;EACD;;;EACA,MAAM,IAAI0C,KAAJ,CAAU,mBAAmBrC,IAAnB,GAA0B,GAApC,CAAN;AACD;;AAED,SAAS+B,WAAT,CAAqB/B,IAArB,EAA2BL,OAA3B,EAAoC;EAClC,OAAO2C,gBAAgB,CAAC3C,OAAD,EAAUK,IAAV,CAAhB,IAAmC,YAAYA,IAAI,CAACY,IAApD,CAAP;AACD;;AAED,SAASoB,WAAT,CAAqBhC,IAArB,EAA2BL,OAA3B,EAAoC;EAClC,IAAI4C,UAAU,GAAGvC,IAAI,CAACwC,aAAL,EAAjB;EACA,IAAIC,qBAAqB,GAAGF,UAAU,CAACG,MAAX,GAAoB,iBAAiBH,UAAU,CAACvB,GAAX,CAAe,UAAU2B,CAAV,EAAa;IAC3F,OAAOA,CAAC,CAAC/B,IAAT;EACD,CAFgE,EAE9DS,IAF8D,CAEzD,KAFyD,CAArC,GAEX,EAFjB;EAGA,OAAOiB,gBAAgB,CAAC3C,OAAD,EAAUK,IAAV,CAAhB,IAAmC,UAAUA,IAAI,CAACY,IAAf,GAAsB6B,qBAAtB,GAA8C,MAAjF,IAA2FG,WAAW,CAACjD,OAAD,EAAUK,IAAV,CAAtG,GAAwH,IAAxH,GAA+H,GAAtI;AACD;;AAED,SAASiC,cAAT,CAAwBjC,IAAxB,EAA8BL,OAA9B,EAAuC;EACrC,OAAO2C,gBAAgB,CAAC3C,OAAD,EAAUK,IAAV,CAAhB,IAAmC,eAAeA,IAAI,CAACY,IAApB,GAA2B,MAA9D,IAAwEgC,WAAW,CAACjD,OAAD,EAAUK,IAAV,CAAnF,GAAqG,IAArG,GAA4G,GAAnH;AACD;;AAED,SAASkC,UAAT,CAAoBlC,IAApB,EAA0BL,OAA1B,EAAmC;EACjC,OAAO2C,gBAAgB,CAAC3C,OAAD,EAAUK,IAAV,CAAhB,IAAmC,WAAWA,IAAI,CAACY,IAAhB,GAAuB,KAAvB,GAA+BZ,IAAI,CAAC6C,QAAL,GAAgBxB,IAAhB,CAAqB,KAArB,CAAlE,CAAP;AACD;;AAED,SAASc,SAAT,CAAmBnC,IAAnB,EAAyBL,OAAzB,EAAkC;EAChC,OAAO2C,gBAAgB,CAAC3C,OAAD,EAAUK,IAAV,CAAhB,IAAmC,UAAUA,IAAI,CAACY,IAAf,GAAsB,MAAzD,IAAmEkC,eAAe,CAAC9C,IAAI,CAAC+C,SAAL,EAAD,EAAmBpD,OAAnB,CAAlF,GAAgH,IAAhH,GAAuH,GAA9H;AACD;;AAED,SAASmD,eAAT,CAAyBE,MAAzB,EAAiCrD,OAAjC,EAA0C;EACxC,OAAOqD,MAAM,CAAChC,GAAP,CAAW,UAAUiC,KAAV,EAAiBN,CAAjB,EAAoB;IACpC,OAAOL,gBAAgB,CAAC3C,OAAD,EAAUsD,KAAV,EAAiB,IAAjB,EAAuB,CAACN,CAAxB,CAAhB,GAA6C,IAA7C,GAAoDM,KAAK,CAACrC,IAA1D,GAAiEsC,eAAe,CAACD,KAAD,CAAvF;EACD,CAFM,EAEJ5B,IAFI,CAEC,IAFD,CAAP;AAGD;;AAED,SAASe,gBAAT,CAA0BpC,IAA1B,EAAgCL,OAAhC,EAAyC;EACvC,IAAIwD,MAAM,GAAGzE,YAAY,CAACsB,IAAI,CAACoD,SAAL,EAAD,CAAzB;EACA,OAAOd,gBAAgB,CAAC3C,OAAD,EAAUK,IAAV,CAAhB,IAAmC,WAAWA,IAAI,CAACY,IAAhB,GAAuB,MAA1D,IAAoEuC,MAAM,CAACnC,GAAP,CAAW,UAAUqC,CAAV,EAAaV,CAAb,EAAgB;IACpG,OAAOL,gBAAgB,CAAC3C,OAAD,EAAU0D,CAAV,EAAa,IAAb,EAAmB,CAACV,CAApB,CAAhB,GAAyC,IAAzC,GAAgDW,eAAe,CAACD,CAAD,CAAtE;EACD,CAF0E,EAExEhC,IAFwE,CAEnE,IAFmE,CAApE,GAES,IAFT,GAEgB,GAFvB;AAGD;;AAED,SAASuB,WAAT,CAAqBjD,OAArB,EAA8BK,IAA9B,EAAoC;EAClC,IAAImD,MAAM,GAAGzE,YAAY,CAACsB,IAAI,CAACoD,SAAL,EAAD,CAAzB;EACA,OAAOD,MAAM,CAACnC,GAAP,CAAW,UAAUqC,CAAV,EAAaV,CAAb,EAAgB;IAChC,OAAOL,gBAAgB,CAAC3C,OAAD,EAAU0D,CAAV,EAAa,IAAb,EAAmB,CAACV,CAApB,CAAhB,GAAyC,IAAzC,GAAgDU,CAAC,CAACzC,IAAlD,GAAyD2C,SAAS,CAAC5D,OAAD,EAAU0D,CAAC,CAACG,IAAZ,EAAkB,IAAlB,CAAlE,GAA4F,IAA5F,GAAmGC,MAAM,CAACJ,CAAC,CAACrD,IAAH,CAAzG,GAAoHkD,eAAe,CAACG,CAAD,CAA1I;EACD,CAFM,EAEJhC,IAFI,CAEC,IAFD,CAAP;AAGD;;AAED,SAASkC,SAAT,CAAmB5D,OAAnB,EAA4B6D,IAA5B,EAAkC;EAChC,IAAIE,WAAW,GAAGC,SAAS,CAACjB,MAAV,GAAmB,CAAnB,IAAwBiB,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAtF;;EAEA,IAAIH,IAAI,CAACd,MAAL,KAAgB,CAApB,EAAuB;IACrB,OAAO,EAAP;EACD,CAL+B,CAOhC;;;EACA,IAAIc,IAAI,CAACK,KAAL,CAAW,UAAUC,GAAV,EAAe;IAC5B,OAAO,CAACA,GAAG,CAACC,WAAZ;EACD,CAFG,CAAJ,EAEI;IACF,OAAO,MAAMP,IAAI,CAACxC,GAAL,CAASsC,eAAT,EAA0BjC,IAA1B,CAA+B,IAA/B,CAAN,GAA6C,GAApD;EACD;;EAED,OAAO,QAAQmC,IAAI,CAACxC,GAAL,CAAS,UAAU8C,GAAV,EAAenB,CAAf,EAAkB;IACxC,OAAOL,gBAAgB,CAAC3C,OAAD,EAAUmE,GAAV,EAAe,OAAOJ,WAAtB,EAAmC,CAACf,CAApC,CAAhB,GAAyD,IAAzD,GAAgEe,WAAhE,GAA8EJ,eAAe,CAACQ,GAAD,CAApG;EACD,CAFc,EAEZzC,IAFY,CAEP,IAFO,CAAR,GAES,IAFT,GAEgBqC,WAFhB,GAE8B,GAFrC;AAGD;;AAED,SAASJ,eAAT,CAAyBQ,GAAzB,EAA8B;EAC5B,IAAIE,OAAO,GAAGF,GAAG,CAAClD,IAAJ,GAAW,IAAX,GAAkB6C,MAAM,CAACK,GAAG,CAAC9D,IAAL,CAAtC;;EACA,IAAI,CAACvB,SAAS,CAACqF,GAAG,CAACG,YAAL,CAAd,EAAkC;IAChCD,OAAO,IAAI,QAAQpF,KAAK,CAACD,YAAY,CAACmF,GAAG,CAACG,YAAL,EAAmBH,GAAG,CAAC9D,IAAvB,CAAb,CAAxB;EACD;;EACD,OAAOgE,OAAP;AACD;;AAED,SAAS9C,cAAT,CAAwBD,SAAxB,EAAmCtB,OAAnC,EAA4C;EAC1C,OAAO2C,gBAAgB,CAAC3C,OAAD,EAAUsB,SAAV,CAAhB,GAAuC,aAAvC,GAAuDA,SAAS,CAACL,IAAjE,GAAwE2C,SAAS,CAAC5D,OAAD,EAAUsB,SAAS,CAACuC,IAApB,CAAjF,GAA6G,MAA7G,GAAsHvC,SAAS,CAACiD,SAAV,CAAoB7C,IAApB,CAAyB,KAAzB,CAA7H;AACD;;AAED,SAAS6B,eAAT,CAAyBiB,cAAzB,EAAyC;EACvC,IAAI,CAACA,cAAc,CAACC,YAApB,EAAkC;IAChC,OAAO,EAAP;EACD;;EACD,IAAIC,MAAM,GAAGF,cAAc,CAACG,iBAA5B;;EACA,IAAI9F,SAAS,CAAC6F,MAAD,CAAT,IAAqBA,MAAM,KAAK,EAAhC,IAAsCA,MAAM,KAAK/E,0BAArD,EAAiF;IAC/E,OAAO,cAAP;EACD;;EACD,OAAO,0BAA0BV,KAAK,CAACD,YAAY,CAAC0F,MAAD,EAASlF,aAAT,CAAb,CAA/B,GAAuE,GAA9E;AACD;;AAED,SAASmD,gBAAT,CAA0B3C,OAA1B,EAAmC4E,GAAnC,EAAwC;EACtC,IAAIb,WAAW,GAAGC,SAAS,CAACjB,MAAV,GAAmB,CAAnB,IAAwBiB,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAtF;EACA,IAAIa,YAAY,GAAGb,SAAS,CAACjB,MAAV,GAAmB,CAAnB,IAAwBiB,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAvF;;EAEA,IAAI,CAACY,GAAG,CAACR,WAAT,EAAsB;IACpB,OAAO,EAAP;EACD;;EAED,IAAIU,KAAK,GAAGC,gBAAgB,CAACH,GAAG,CAACR,WAAL,EAAkB,MAAML,WAAW,CAAChB,MAApC,CAA5B;;EACA,IAAI/C,OAAO,IAAIA,OAAO,CAACgF,mBAAvB,EAA4C;IAC1C,OAAOC,4BAA4B,CAACH,KAAD,EAAQf,WAAR,EAAqBc,YAArB,CAAnC;EACD;;EAED,IAAIT,WAAW,GAAGL,WAAW,IAAI,CAACc,YAAhB,GAA+B,OAAOd,WAAP,GAAqB,KAApD,GAA4DA,WAAW,GAAG,KAA5F,CAbsC,CAetC;;EACA,IAAIe,KAAK,CAAC/B,MAAN,KAAiB,CAAjB,IAAsB+B,KAAK,CAAC,CAAD,CAAL,CAAS/B,MAAT,GAAkB,EAAxC,IAA8C+B,KAAK,CAAC,CAAD,CAAL,CAASA,KAAK,CAAC,CAAD,CAAL,CAAS/B,MAAT,GAAkB,CAA3B,MAAkC,GAApF,EAAyF;IACvF,OAAOqB,WAAW,GAAGc,WAAW,CAACJ,KAAK,CAAC,CAAD,CAAN,CAAzB,GAAsC,OAA7C;EACD,CAlBqC,CAoBtC;;;EACA,IAAIK,eAAe,GAAGL,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,MAAgB,GAAhB,IAAuBA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,MAAgB,IAA7D;;EACA,IAAI,CAACK,eAAL,EAAsB;IACpBf,WAAW,IAAI,IAAf;EACD;;EACD,KAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8B,KAAK,CAAC/B,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;IACrC,IAAIA,CAAC,KAAK,CAAN,IAAW,CAACmC,eAAhB,EAAiC;MAC/Bf,WAAW,IAAIL,WAAf;IACD;;IACDK,WAAW,IAAIc,WAAW,CAACJ,KAAK,CAAC9B,CAAD,CAAN,CAAX,GAAwB,IAAvC;EACD;;EACDoB,WAAW,IAAIL,WAAW,GAAG,OAA7B;EACA,OAAOK,WAAP;AACD;;AAED,SAASc,WAAT,CAAqBE,IAArB,EAA2B;EACzB,OAAOA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAqB,OAArB,CAAP;AACD;;AAED,SAASJ,4BAAT,CAAsCH,KAAtC,EAA6Cf,WAA7C,EAA0Dc,YAA1D,EAAwE;EACtE,IAAIT,WAAW,GAAGL,WAAW,IAAI,CAACc,YAAhB,GAA+B,IAA/B,GAAsC,EAAxD;;EACA,KAAK,IAAI7B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8B,KAAK,CAAC/B,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;IACrC,IAAI8B,KAAK,CAAC9B,CAAD,CAAL,KAAa,EAAjB,EAAqB;MACnBoB,WAAW,IAAIL,WAAW,GAAG,KAA7B;IACD,CAFD,MAEO;MACLK,WAAW,IAAIL,WAAW,GAAG,IAAd,GAAqBe,KAAK,CAAC9B,CAAD,CAA1B,GAAgC,IAA/C;IACD;EACF;;EACD,OAAOoB,WAAP;AACD;;AAED,SAASW,gBAAT,CAA0BX,WAA1B,EAAuCkB,MAAvC,EAA+C;EAC7C,IAAIR,KAAK,GAAG,EAAZ;EACA,IAAIS,QAAQ,GAAGnB,WAAW,CAACoB,KAAZ,CAAkB,IAAlB,CAAf;;EACA,KAAK,IAAIxC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuC,QAAQ,CAACxC,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;IACxC,IAAIuC,QAAQ,CAACvC,CAAD,CAAR,KAAgB,EAApB,EAAwB;MACtB8B,KAAK,CAAC/C,IAAN,CAAWwD,QAAQ,CAACvC,CAAD,CAAnB;IACD,CAFD,MAEO;MACL;MACA;MACA,IAAIyC,QAAQ,GAAGC,SAAS,CAACH,QAAQ,CAACvC,CAAD,CAAT,EAAcsC,MAAd,CAAxB;;MACA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAAC1C,MAA7B,EAAqC4C,CAAC,EAAtC,EAA0C;QACxCb,KAAK,CAAC/C,IAAN,CAAW0D,QAAQ,CAACE,CAAD,CAAnB;MACD;IACF;EACF;;EACD,OAAOb,KAAP;AACD;;AAED,SAASY,SAAT,CAAmBN,IAAnB,EAAyBE,MAAzB,EAAiC;EAC/B,IAAIF,IAAI,CAACrC,MAAL,GAAcuC,MAAM,GAAG,CAA3B,EAA8B;IAC5B,OAAO,CAACF,IAAD,CAAP;EACD;;EACD,IAAIQ,KAAK,GAAGR,IAAI,CAACI,KAAL,CAAW,IAAIK,MAAJ,CAAW,mBAAmBP,MAAM,GAAG,EAA5B,IAAkC,WAA7C,CAAX,CAAZ;;EACA,IAAIM,KAAK,CAAC7C,MAAN,GAAe,CAAnB,EAAsB;IACpB,OAAO,CAACqC,IAAD,CAAP;EACD;;EACD,IAAIK,QAAQ,GAAG,CAACG,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAhB,GAAsBA,KAAK,CAAC,CAAD,CAA5B,CAAf;;EACA,KAAK,IAAI5C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4C,KAAK,CAAC7C,MAA1B,EAAkCC,CAAC,IAAI,CAAvC,EAA0C;IACxCyC,QAAQ,CAAC1D,IAAT,CAAc6D,KAAK,CAAC5C,CAAD,CAAL,CAAS8C,KAAT,CAAe,CAAf,IAAoBF,KAAK,CAAC5C,CAAC,GAAG,CAAL,CAAvC;EACD;;EACD,OAAOyC,QAAP;AACD"},"metadata":{},"sourceType":"module"}