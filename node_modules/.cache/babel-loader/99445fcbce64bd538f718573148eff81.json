{"ast":null,"code":"import { GraphQLError } from '../../error';\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport find from '../../jsutils/find';\nimport { Kind } from '../../language/kinds';\nimport { DirectiveLocation } from '../../language/directiveLocation';\nexport function unknownDirectiveMessage(directiveName) {\n  return 'Unknown directive \"' + directiveName + '\".';\n}\nexport function misplacedDirectiveMessage(directiveName, location) {\n  return 'Directive \"' + directiveName + '\" may not be used on ' + location + '.';\n}\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\n\nexport function KnownDirectives(context) {\n  return {\n    Directive: function Directive(node, key, parent, path, ancestors) {\n      var directiveDef = find(context.getSchema().getDirectives(), function (def) {\n        return def.name === node.name.value;\n      });\n\n      if (!directiveDef) {\n        context.reportError(new GraphQLError(unknownDirectiveMessage(node.name.value), [node]));\n        return;\n      }\n\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && directiveDef.locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new GraphQLError(misplacedDirectiveMessage(node.name.value, candidateLocation), [node]));\n      }\n    }\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n\n  if (!Array.isArray(appliedTo)) {\n    switch (appliedTo.kind) {\n      case Kind.OPERATION_DEFINITION:\n        switch (appliedTo.operation) {\n          case 'query':\n            return DirectiveLocation.QUERY;\n\n          case 'mutation':\n            return DirectiveLocation.MUTATION;\n\n          case 'subscription':\n            return DirectiveLocation.SUBSCRIPTION;\n        }\n\n        break;\n\n      case Kind.FIELD:\n        return DirectiveLocation.FIELD;\n\n      case Kind.FRAGMENT_SPREAD:\n        return DirectiveLocation.FRAGMENT_SPREAD;\n\n      case Kind.INLINE_FRAGMENT:\n        return DirectiveLocation.INLINE_FRAGMENT;\n\n      case Kind.FRAGMENT_DEFINITION:\n        return DirectiveLocation.FRAGMENT_DEFINITION;\n\n      case Kind.SCHEMA_DEFINITION:\n        return DirectiveLocation.SCHEMA;\n\n      case Kind.SCALAR_TYPE_DEFINITION:\n      case Kind.SCALAR_TYPE_EXTENSION:\n        return DirectiveLocation.SCALAR;\n\n      case Kind.OBJECT_TYPE_DEFINITION:\n      case Kind.OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.OBJECT;\n\n      case Kind.FIELD_DEFINITION:\n        return DirectiveLocation.FIELD_DEFINITION;\n\n      case Kind.INTERFACE_TYPE_DEFINITION:\n      case Kind.INTERFACE_TYPE_EXTENSION:\n        return DirectiveLocation.INTERFACE;\n\n      case Kind.UNION_TYPE_DEFINITION:\n      case Kind.UNION_TYPE_EXTENSION:\n        return DirectiveLocation.UNION;\n\n      case Kind.ENUM_TYPE_DEFINITION:\n      case Kind.ENUM_TYPE_EXTENSION:\n        return DirectiveLocation.ENUM;\n\n      case Kind.ENUM_VALUE_DEFINITION:\n        return DirectiveLocation.ENUM_VALUE;\n\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n      case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.INPUT_OBJECT;\n\n      case Kind.INPUT_VALUE_DEFINITION:\n        var parentNode = ancestors[ancestors.length - 3];\n        return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? DirectiveLocation.INPUT_FIELD_DEFINITION : DirectiveLocation.ARGUMENT_DEFINITION;\n    }\n  }\n}","map":{"version":3,"names":["GraphQLError","find","Kind","DirectiveLocation","unknownDirectiveMessage","directiveName","misplacedDirectiveMessage","location","KnownDirectives","context","Directive","node","key","parent","path","ancestors","directiveDef","getSchema","getDirectives","def","name","value","reportError","candidateLocation","getDirectiveLocationForASTPath","locations","indexOf","appliedTo","length","Array","isArray","kind","OPERATION_DEFINITION","operation","QUERY","MUTATION","SUBSCRIPTION","FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","SCHEMA_DEFINITION","SCHEMA","SCALAR_TYPE_DEFINITION","SCALAR_TYPE_EXTENSION","SCALAR","OBJECT_TYPE_DEFINITION","OBJECT_TYPE_EXTENSION","OBJECT","FIELD_DEFINITION","INTERFACE_TYPE_DEFINITION","INTERFACE_TYPE_EXTENSION","INTERFACE","UNION_TYPE_DEFINITION","UNION_TYPE_EXTENSION","UNION","ENUM_TYPE_DEFINITION","ENUM_TYPE_EXTENSION","ENUM","ENUM_VALUE_DEFINITION","ENUM_VALUE","INPUT_OBJECT_TYPE_DEFINITION","INPUT_OBJECT_TYPE_EXTENSION","INPUT_OBJECT","INPUT_VALUE_DEFINITION","parentNode","INPUT_FIELD_DEFINITION","ARGUMENT_DEFINITION"],"sources":["/Users/roaldmaravillas/ro/sandbox/aws-mobile-appsync-events-starter-react/node_modules/aws-appsync/node_modules/graphql/module/validation/rules/KnownDirectives.js"],"sourcesContent":["\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             * \n                                             */\n\nimport find from '../../jsutils/find';\nimport { Kind } from '../../language/kinds';\nimport { DirectiveLocation } from '../../language/directiveLocation';\n\n\nexport function unknownDirectiveMessage(directiveName) {\n  return 'Unknown directive \"' + directiveName + '\".';\n}\n\nexport function misplacedDirectiveMessage(directiveName, location) {\n  return 'Directive \"' + directiveName + '\" may not be used on ' + location + '.';\n}\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\nexport function KnownDirectives(context) {\n  return {\n    Directive: function Directive(node, key, parent, path, ancestors) {\n      var directiveDef = find(context.getSchema().getDirectives(), function (def) {\n        return def.name === node.name.value;\n      });\n      if (!directiveDef) {\n        context.reportError(new GraphQLError(unknownDirectiveMessage(node.name.value), [node]));\n        return;\n      }\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n      if (candidateLocation && directiveDef.locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new GraphQLError(misplacedDirectiveMessage(node.name.value, candidateLocation), [node]));\n      }\n    }\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n  if (!Array.isArray(appliedTo)) {\n    switch (appliedTo.kind) {\n      case Kind.OPERATION_DEFINITION:\n        switch (appliedTo.operation) {\n          case 'query':\n            return DirectiveLocation.QUERY;\n          case 'mutation':\n            return DirectiveLocation.MUTATION;\n          case 'subscription':\n            return DirectiveLocation.SUBSCRIPTION;\n        }\n        break;\n      case Kind.FIELD:\n        return DirectiveLocation.FIELD;\n      case Kind.FRAGMENT_SPREAD:\n        return DirectiveLocation.FRAGMENT_SPREAD;\n      case Kind.INLINE_FRAGMENT:\n        return DirectiveLocation.INLINE_FRAGMENT;\n      case Kind.FRAGMENT_DEFINITION:\n        return DirectiveLocation.FRAGMENT_DEFINITION;\n      case Kind.SCHEMA_DEFINITION:\n        return DirectiveLocation.SCHEMA;\n      case Kind.SCALAR_TYPE_DEFINITION:\n      case Kind.SCALAR_TYPE_EXTENSION:\n        return DirectiveLocation.SCALAR;\n      case Kind.OBJECT_TYPE_DEFINITION:\n      case Kind.OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.OBJECT;\n      case Kind.FIELD_DEFINITION:\n        return DirectiveLocation.FIELD_DEFINITION;\n      case Kind.INTERFACE_TYPE_DEFINITION:\n      case Kind.INTERFACE_TYPE_EXTENSION:\n        return DirectiveLocation.INTERFACE;\n      case Kind.UNION_TYPE_DEFINITION:\n      case Kind.UNION_TYPE_EXTENSION:\n        return DirectiveLocation.UNION;\n      case Kind.ENUM_TYPE_DEFINITION:\n      case Kind.ENUM_TYPE_EXTENSION:\n        return DirectiveLocation.ENUM;\n      case Kind.ENUM_VALUE_DEFINITION:\n        return DirectiveLocation.ENUM_VALUE;\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n      case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.INPUT_OBJECT;\n      case Kind.INPUT_VALUE_DEFINITION:\n        var parentNode = ancestors[ancestors.length - 3];\n        return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? DirectiveLocation.INPUT_FIELD_DEFINITION : DirectiveLocation.ARGUMENT_DEFINITION;\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}