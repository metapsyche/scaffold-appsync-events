{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  VARIABLE: 'Variable',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */","map":{"version":3,"names":["Kind","Object","freeze","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","VARIABLE","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","DIRECTIVE_DEFINITION"],"sources":["/Users/roaldmaravillas/ro/sandbox/aws-mobile-appsync-events-starter-react/node_modules/aws-appsync/node_modules/graphql/module/language/kinds.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  VARIABLE: 'Variable',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n\n  // Values\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n\n  // Directives\n  DIRECTIVE: 'Directive',\n\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension',\n\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition'\n});\n\n/**\n * The enum type representing the possible kind values of AST nodes.\n */"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,IAAIA,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc;EAC9B;EACAC,IAAI,EAAE,MAFwB;EAI9B;EACAC,QAAQ,EAAE,UALoB;EAM9BC,oBAAoB,EAAE,qBANQ;EAO9BC,mBAAmB,EAAE,oBAPS;EAQ9BC,QAAQ,EAAE,UARoB;EAS9BC,aAAa,EAAE,cATe;EAU9BC,KAAK,EAAE,OAVuB;EAW9BC,QAAQ,EAAE,UAXoB;EAa9B;EACAC,eAAe,EAAE,gBAda;EAe9BC,eAAe,EAAE,gBAfa;EAgB9BC,mBAAmB,EAAE,oBAhBS;EAkB9B;EACAC,GAAG,EAAE,UAnByB;EAoB9BC,KAAK,EAAE,YApBuB;EAqB9BC,MAAM,EAAE,aArBsB;EAsB9BC,OAAO,EAAE,cAtBqB;EAuB9BC,IAAI,EAAE,WAvBwB;EAwB9BC,IAAI,EAAE,WAxBwB;EAyB9BC,IAAI,EAAE,WAzBwB;EA0B9BC,MAAM,EAAE,aA1BsB;EA2B9BC,YAAY,EAAE,aA3BgB;EA6B9B;EACAC,SAAS,EAAE,WA9BmB;EAgC9B;EACAC,UAAU,EAAE,WAjCkB;EAkC9BC,SAAS,EAAE,UAlCmB;EAmC9BC,aAAa,EAAE,aAnCe;EAqC9B;EACAC,iBAAiB,EAAE,kBAtCW;EAuC9BC,yBAAyB,EAAE,yBAvCG;EAyC9B;EACAC,sBAAsB,EAAE,sBA1CM;EA2C9BC,sBAAsB,EAAE,sBA3CM;EA4C9BC,gBAAgB,EAAE,iBA5CY;EA6C9BC,sBAAsB,EAAE,sBA7CM;EA8C9BC,yBAAyB,EAAE,yBA9CG;EA+C9BC,qBAAqB,EAAE,qBA/CO;EAgD9BC,oBAAoB,EAAE,oBAhDQ;EAiD9BC,qBAAqB,EAAE,qBAjDO;EAkD9BC,4BAA4B,EAAE,2BAlDA;EAoD9B;EACAC,qBAAqB,EAAE,qBArDO;EAsD9BC,qBAAqB,EAAE,qBAtDO;EAuD9BC,wBAAwB,EAAE,wBAvDI;EAwD9BC,oBAAoB,EAAE,oBAxDQ;EAyD9BC,mBAAmB,EAAE,mBAzDS;EA0D9BC,2BAA2B,EAAE,0BA1DC;EA4D9B;EACAC,oBAAoB,EAAE;AA7DQ,CAAd,CAAX;AAgEP;AACA;AACA"},"metadata":{},"sourceType":"module"}