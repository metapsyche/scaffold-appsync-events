{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { GraphQLError } from '../../error';\nexport function duplicateVariableMessage(variableName) {\n  return 'There can be only one variable named \"' + variableName + '\".';\n}\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\n\nexport function UniqueVariableNames(context) {\n  var knownVariableNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      knownVariableNames = Object.create(null);\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      var variableName = node.variable.name.value;\n\n      if (knownVariableNames[variableName]) {\n        context.reportError(new GraphQLError(duplicateVariableMessage(variableName), [knownVariableNames[variableName], node.variable.name]));\n      } else {\n        knownVariableNames[variableName] = node.variable.name;\n      }\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","duplicateVariableMessage","variableName","UniqueVariableNames","context","knownVariableNames","Object","create","OperationDefinition","VariableDefinition","node","variable","name","value","reportError"],"sources":["/Users/roaldmaravillas/ro/github/scaffold-appsync-events/node_modules/aws-appsync/node_modules/graphql/module/validation/rules/UniqueVariableNames.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport { GraphQLError } from '../../error';\n\n\nexport function duplicateVariableMessage(variableName) {\n  return 'There can be only one variable named \"' + variableName + '\".';\n}\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nexport function UniqueVariableNames(context) {\n  var knownVariableNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      knownVariableNames = Object.create(null);\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      var variableName = node.variable.name.value;\n      if (knownVariableNames[variableName]) {\n        context.reportError(new GraphQLError(duplicateVariableMessage(variableName), [knownVariableNames[variableName], node.variable.name]));\n      } else {\n        knownVariableNames[variableName] = node.variable.name;\n      }\n    }\n  };\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,YAAT,QAA6B,aAA7B;AAGA,OAAO,SAASC,wBAAT,CAAkCC,YAAlC,EAAgD;EACrD,OAAO,2CAA2CA,YAA3C,GAA0D,IAAjE;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC;EAC3C,IAAIC,kBAAkB,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAzB;EACA,OAAO;IACLC,mBAAmB,EAAE,SAASA,mBAAT,GAA+B;MAClDH,kBAAkB,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAArB;IACD,CAHI;IAILE,kBAAkB,EAAE,SAASA,kBAAT,CAA4BC,IAA5B,EAAkC;MACpD,IAAIR,YAAY,GAAGQ,IAAI,CAACC,QAAL,CAAcC,IAAd,CAAmBC,KAAtC;;MACA,IAAIR,kBAAkB,CAACH,YAAD,CAAtB,EAAsC;QACpCE,OAAO,CAACU,WAAR,CAAoB,IAAId,YAAJ,CAAiBC,wBAAwB,CAACC,YAAD,CAAzC,EAAyD,CAACG,kBAAkB,CAACH,YAAD,CAAnB,EAAmCQ,IAAI,CAACC,QAAL,CAAcC,IAAjD,CAAzD,CAApB;MACD,CAFD,MAEO;QACLP,kBAAkB,CAACH,YAAD,CAAlB,GAAmCQ,IAAI,CAACC,QAAL,CAAcC,IAAjD;MACD;IACF;EAXI,CAAP;AAaD"},"metadata":{},"sourceType":"module"}