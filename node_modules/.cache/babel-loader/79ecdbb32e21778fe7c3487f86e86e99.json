{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Observable = void 0;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n} // === Symbol Support ===\n\n\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription = /*#__PURE__*/function () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription); // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n\n\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver = /*#__PURE__*/function () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: \"next\",\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: \"error\",\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable = /*#__PURE__*/function () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: \"subscribe\",\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"concat\",\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscription;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: \"flatMap\",\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: \"from\",\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n      if (x == null) throw new TypeError(x + ' is not an object');\n      var method = getMethod(x, SymbolObservable);\n\n      if (method) {\n        var observable = method.call(x);\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n        if (isObservable(observable) && observable.constructor === C) return observable;\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var _item = _step.value;\n                  observer.next(_item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: \"of\",\n    value: function of() {\n      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","Observable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","prototype","hasSymbols","Symbol","hasSymbol","name","Boolean","getSymbol","observable","SymbolIterator","SymbolObservable","SymbolSpecies","getMethod","obj","undefined","getSpecies","ctor","constructor","isObservable","x","hostReportError","e","log","setTimeout","enqueue","fn","Promise","resolve","then","cleanupSubscription","subscription","cleanup","_cleanup","unsubscribe","call","closeSubscription","_observer","_queue","_state","flushSubscription","queue","notifySubscription","type","observer","m","onNotify","push","Subscription","subscriber","subscriptionObserver","SubscriptionObserver","error","get","_subscription","next","complete","_subscriber","subscribe","arguments","forEach","_this","reject","done","map","_this2","C","filter","_this3","reduce","_this4","hasSeed","hasValue","seed","acc","first","concat","_this5","_len","sources","Array","_key","index","startNext","v","from","flatMap","_this6","subscriptions","outer","inner","indexOf","splice","completeIfDone","closed","s","method","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","iterator","_step","_item","err","return","isArray","of","_len2","items","_key2","symbol"],"sources":["/Users/roaldmaravillas/ro/sandbox/aws-mobile-appsync-events-starter-react/node_modules/zen-observable/lib/Observable.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Observable = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// === Symbol Support ===\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver =\n/*#__PURE__*/\nfunction () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: \"next\",\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: \"error\",\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable =\n/*#__PURE__*/\nfunction () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: \"subscribe\",\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"concat\",\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscription;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: \"flatMap\",\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: \"from\",\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n      if (x == null) throw new TypeError(x + ' is not an object');\n      var method = getMethod(x, SymbolObservable);\n\n      if (method) {\n        var observable = method.call(x);\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n        if (isObservable(observable) && observable.constructor === C) return observable;\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var _item = _step.value;\n                  observer.next(_item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: \"of\",\n    value: function of() {\n      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}