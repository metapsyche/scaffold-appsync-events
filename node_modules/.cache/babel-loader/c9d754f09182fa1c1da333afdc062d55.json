{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.duplicateFragmentNameMessage = duplicateFragmentNameMessage;\nexports.UniqueFragmentNames = UniqueFragmentNames;\n\nvar _error = require('../../error');\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nfunction duplicateFragmentNameMessage(fragName) {\n  return 'There can be only one fragment named \"' + fragName + '\".';\n}\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n */\n\n\nfunction UniqueFragmentNames(context) {\n  var knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(new _error.GraphQLError(duplicateFragmentNameMessage(fragmentName), [knownFragmentNames[fragmentName], node.name]));\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","duplicateFragmentNameMessage","UniqueFragmentNames","_error","require","fragName","context","knownFragmentNames","create","OperationDefinition","FragmentDefinition","node","fragmentName","name","reportError","GraphQLError"],"sources":["/Users/roaldmaravillas/ro/github/scaffold-appsync-events/node_modules/graphql/validation/rules/UniqueFragmentNames.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.duplicateFragmentNameMessage = duplicateFragmentNameMessage;\nexports.UniqueFragmentNames = UniqueFragmentNames;\n\nvar _error = require('../../error');\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction duplicateFragmentNameMessage(fragName) {\n  return 'There can be only one fragment named \"' + fragName + '\".';\n}\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n */\nfunction UniqueFragmentNames(context) {\n  var knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var fragmentName = node.name.value;\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(new _error.GraphQLError(duplicateFragmentNameMessage(fragmentName), [knownFragmentNames[fragmentName], node.name]));\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n      return false;\n    }\n  };\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,4BAAR,GAAuCA,4BAAvC;AACAF,OAAO,CAACG,mBAAR,GAA8BA,mBAA9B;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASH,4BAAT,CAAsCI,QAAtC,EAAgD;EAC9C,OAAO,2CAA2CA,QAA3C,GAAsD,IAA7D;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASH,mBAAT,CAA6BI,OAA7B,EAAsC;EACpC,IAAIC,kBAAkB,GAAGV,MAAM,CAACW,MAAP,CAAc,IAAd,CAAzB;EACA,OAAO;IACLC,mBAAmB,EAAE,SAASA,mBAAT,GAA+B;MAClD,OAAO,KAAP;IACD,CAHI;IAILC,kBAAkB,EAAE,SAASA,kBAAT,CAA4BC,IAA5B,EAAkC;MACpD,IAAIC,YAAY,GAAGD,IAAI,CAACE,IAAL,CAAUb,KAA7B;;MACA,IAAIO,kBAAkB,CAACK,YAAD,CAAtB,EAAsC;QACpCN,OAAO,CAACQ,WAAR,CAAoB,IAAIX,MAAM,CAACY,YAAX,CAAwBd,4BAA4B,CAACW,YAAD,CAApD,EAAoE,CAACL,kBAAkB,CAACK,YAAD,CAAnB,EAAmCD,IAAI,CAACE,IAAxC,CAApE,CAApB;MACD,CAFD,MAEO;QACLN,kBAAkB,CAACK,YAAD,CAAlB,GAAmCD,IAAI,CAACE,IAAxC;MACD;;MACD,OAAO,KAAP;IACD;EAZI,CAAP;AAcD"},"metadata":{},"sourceType":"script"}