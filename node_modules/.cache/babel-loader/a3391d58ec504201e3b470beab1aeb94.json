{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport { GraphQLNonNull } from './wrappers';\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport { GraphQLString, GraphQLBoolean } from './scalars';\nimport instanceOf from '../jsutils/instanceOf';\nimport invariant from '../jsutils/invariant';\nimport { DirectiveLocation } from '../language/directiveLocation';\n/**\n * Test if the given value is a GraphQL directive.\n */\n// eslint-disable-next-line no-redeclare\n\nexport function isDirective(directive) {\n  return instanceOf(directive, GraphQLDirective);\n}\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\n\nexport var GraphQLDirective = function GraphQLDirective(config) {\n  _classCallCheck(this, GraphQLDirective);\n\n  this.name = config.name;\n  this.description = config.description;\n  this.locations = config.locations;\n  this.astNode = config.astNode;\n  !config.name ? invariant(0, 'Directive must be named.') : void 0;\n  !Array.isArray(config.locations) ? invariant(0, 'Must provide locations for directive.') : void 0;\n  var args = config.args;\n\n  if (!args) {\n    this.args = [];\n  } else {\n    !!Array.isArray(args) ? invariant(0, '@' + config.name + ' args must be an object with argument names as keys.') : void 0;\n    this.args = Object.keys(args).map(function (argName) {\n      var arg = args[argName];\n      return {\n        name: argName,\n        description: arg.description === undefined ? null : arg.description,\n        type: arg.type,\n        defaultValue: arg.defaultValue,\n        astNode: arg.astNode\n      };\n    });\n  }\n};\n/**\n * Used to conditionally include fields or fragments.\n */\n\nexport var GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when ' + 'the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexport var GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` ' + 'argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexport var DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexport var GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [DirectiveLocation.FIELD_DEFINITION, DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a ' + 'suggestion for how to access supported similar data. Formatted ' + 'in [Markdown](https://daringfireball.net/projects/markdown/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n/**\n * The full list of specified directives.\n */\n\nexport var specifiedDirectives = [GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective];\nexport function isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(function (specifiedDirective) {\n    return specifiedDirective.name === directive.name;\n  });\n}","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","GraphQLNonNull","GraphQLString","GraphQLBoolean","instanceOf","invariant","DirectiveLocation","isDirective","directive","GraphQLDirective","config","name","description","locations","astNode","Array","isArray","args","Object","keys","map","argName","arg","undefined","type","defaultValue","GraphQLIncludeDirective","FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT","if","GraphQLSkipDirective","DEFAULT_DEPRECATION_REASON","GraphQLDeprecatedDirective","FIELD_DEFINITION","ENUM_VALUE","reason","specifiedDirectives","isSpecifiedDirective","some","specifiedDirective"],"sources":["/Users/roaldmaravillas/ro/github/scaffold-appsync-events/node_modules/aws-appsync/node_modules/graphql/module/type/directives.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { GraphQLNonNull } from './wrappers'; /**\n                                              * Copyright (c) 2015-present, Facebook, Inc.\n                                              *\n                                              * This source code is licensed under the MIT license found in the\n                                              * LICENSE file in the root directory of this source tree.\n                                              *\n                                              * \n                                              */\n\nimport { GraphQLString, GraphQLBoolean } from './scalars';\nimport instanceOf from '../jsutils/instanceOf';\nimport invariant from '../jsutils/invariant';\n\nimport { DirectiveLocation } from '../language/directiveLocation';\n\n/**\n * Test if the given value is a GraphQL directive.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isDirective(directive) {\n  return instanceOf(directive, GraphQLDirective);\n}\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\nexport var GraphQLDirective = function GraphQLDirective(config) {\n  _classCallCheck(this, GraphQLDirective);\n\n  this.name = config.name;\n  this.description = config.description;\n  this.locations = config.locations;\n  this.astNode = config.astNode;\n  !config.name ? invariant(0, 'Directive must be named.') : void 0;\n  !Array.isArray(config.locations) ? invariant(0, 'Must provide locations for directive.') : void 0;\n\n  var args = config.args;\n  if (!args) {\n    this.args = [];\n  } else {\n    !!Array.isArray(args) ? invariant(0, '@' + config.name + ' args must be an object with argument names as keys.') : void 0;\n    this.args = Object.keys(args).map(function (argName) {\n      var arg = args[argName];\n      return {\n        name: argName,\n        description: arg.description === undefined ? null : arg.description,\n        type: arg.type,\n        defaultValue: arg.defaultValue,\n        astNode: arg.astNode\n      };\n    });\n  }\n};\n\n/**\n * Used to conditionally include fields or fragments.\n */\nexport var GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when ' + 'the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\nexport var GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` ' + 'argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n\n/**\n * Constant string used for default reason for a deprecation.\n */\nexport var DEFAULT_DEPRECATION_REASON = 'No longer supported';\n\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\nexport var GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [DirectiveLocation.FIELD_DEFINITION, DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a ' + 'suggestion for how to access supported similar data. Formatted ' + 'in [Markdown](https://daringfireball.net/projects/markdown/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n\n/**\n * The full list of specified directives.\n */\nexport var specifiedDirectives = [GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective];\n\nexport function isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(function (specifiedDirective) {\n    return specifiedDirective.name === directive.name;\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}