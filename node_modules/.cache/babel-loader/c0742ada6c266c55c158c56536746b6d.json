{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.specifiedDirectives = exports.GraphQLDeprecatedDirective = exports.DEFAULT_DEPRECATION_REASON = exports.GraphQLSkipDirective = exports.GraphQLIncludeDirective = exports.GraphQLDirective = exports.DirectiveLocation = undefined;\n\nvar _definition = require('./definition');\n\nvar _scalars = require('./scalars');\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _assertValidName = require('../utilities/assertValidName');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nvar DirectiveLocation = exports.DirectiveLocation = {\n  // Operations\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  // Schema Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n}; // eslint-disable-line\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\n\nvar GraphQLDirective = exports.GraphQLDirective = function GraphQLDirective(config) {\n  _classCallCheck(this, GraphQLDirective);\n\n  !config.name ? (0, _invariant2.default)(0, 'Directive must be named.') : void 0;\n  (0, _assertValidName.assertValidName)(config.name);\n  !Array.isArray(config.locations) ? (0, _invariant2.default)(0, 'Must provide locations for directive.') : void 0;\n  this.name = config.name;\n  this.description = config.description;\n  this.locations = config.locations;\n  this.astNode = config.astNode;\n  var args = config.args;\n\n  if (!args) {\n    this.args = [];\n  } else {\n    !!Array.isArray(args) ? (0, _invariant2.default)(0, '@' + config.name + ' args must be an object with argument names as keys.') : void 0;\n    this.args = Object.keys(args).map(function (argName) {\n      (0, _assertValidName.assertValidName)(argName);\n      var arg = args[argName];\n      !(0, _definition.isInputType)(arg.type) ? (0, _invariant2.default)(0, '@' + config.name + '(' + argName + ':) argument type must be ' + ('Input Type but got: ' + String(arg.type) + '.')) : void 0;\n      return {\n        name: argName,\n        description: arg.description === undefined ? null : arg.description,\n        type: arg.type,\n        defaultValue: arg.defaultValue,\n        astNode: arg.astNode\n      };\n    });\n  }\n};\n/**\n * Used to conditionally include fields or fragments.\n */\n\n\nvar GraphQLIncludeDirective = exports.GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when ' + 'the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nvar GraphQLSkipDirective = exports.GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` ' + 'argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nvar DEFAULT_DEPRECATION_REASON = exports.DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nvar GraphQLDeprecatedDirective = exports.GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [DirectiveLocation.FIELD_DEFINITION, DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: _scalars.GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a ' + 'suggestion for how to access supported similar data. Formatted ' + 'in [Markdown](https://daringfireball.net/projects/markdown/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n/**\n * The full list of specified directives.\n */\n\nvar specifiedDirectives = exports.specifiedDirectives = [GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective];","map":{"version":3,"names":["Object","defineProperty","exports","value","specifiedDirectives","GraphQLDeprecatedDirective","DEFAULT_DEPRECATION_REASON","GraphQLSkipDirective","GraphQLIncludeDirective","GraphQLDirective","DirectiveLocation","undefined","_definition","require","_scalars","_invariant","_invariant2","_interopRequireDefault","_assertValidName","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","QUERY","MUTATION","SUBSCRIPTION","FIELD","FRAGMENT_DEFINITION","FRAGMENT_SPREAD","INLINE_FRAGMENT","SCHEMA","SCALAR","OBJECT","FIELD_DEFINITION","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","config","name","assertValidName","Array","isArray","locations","description","astNode","args","keys","map","argName","arg","isInputType","type","String","defaultValue","if","GraphQLNonNull","GraphQLBoolean","reason","GraphQLString"],"sources":["/Users/roaldmaravillas/ro/sandbox/aws-mobile-appsync-events-starter-react/node_modules/graphql/type/directives.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.specifiedDirectives = exports.GraphQLDeprecatedDirective = exports.DEFAULT_DEPRECATION_REASON = exports.GraphQLSkipDirective = exports.GraphQLIncludeDirective = exports.GraphQLDirective = exports.DirectiveLocation = undefined;\n\nvar _definition = require('./definition');\n\nvar _scalars = require('./scalars');\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _assertValidName = require('../utilities/assertValidName');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * Copyright (c) 2015-present, Facebook, Inc.\n                                                                                                                                                           *\n                                                                                                                                                           * This source code is licensed under the MIT license found in the\n                                                                                                                                                           * LICENSE file in the root directory of this source tree.\n                                                                                                                                                           *\n                                                                                                                                                           * \n                                                                                                                                                           */\n\nvar DirectiveLocation = exports.DirectiveLocation = {\n  // Operations\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  // Schema Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n};\n\n// eslint-disable-line\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\nvar GraphQLDirective = exports.GraphQLDirective = function GraphQLDirective(config) {\n  _classCallCheck(this, GraphQLDirective);\n\n  !config.name ? (0, _invariant2.default)(0, 'Directive must be named.') : void 0;\n  (0, _assertValidName.assertValidName)(config.name);\n  !Array.isArray(config.locations) ? (0, _invariant2.default)(0, 'Must provide locations for directive.') : void 0;\n  this.name = config.name;\n  this.description = config.description;\n  this.locations = config.locations;\n  this.astNode = config.astNode;\n\n  var args = config.args;\n  if (!args) {\n    this.args = [];\n  } else {\n    !!Array.isArray(args) ? (0, _invariant2.default)(0, '@' + config.name + ' args must be an object with argument names as keys.') : void 0;\n    this.args = Object.keys(args).map(function (argName) {\n      (0, _assertValidName.assertValidName)(argName);\n      var arg = args[argName];\n      !(0, _definition.isInputType)(arg.type) ? (0, _invariant2.default)(0, '@' + config.name + '(' + argName + ':) argument type must be ' + ('Input Type but got: ' + String(arg.type) + '.')) : void 0;\n      return {\n        name: argName,\n        description: arg.description === undefined ? null : arg.description,\n        type: arg.type,\n        defaultValue: arg.defaultValue,\n        astNode: arg.astNode\n      };\n    });\n  }\n};\n\n/**\n * Used to conditionally include fields or fragments.\n */\nvar GraphQLIncludeDirective = exports.GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when ' + 'the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\nvar GraphQLSkipDirective = exports.GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` ' + 'argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n\n/**\n * Constant string used for default reason for a deprecation.\n */\nvar DEFAULT_DEPRECATION_REASON = exports.DEFAULT_DEPRECATION_REASON = 'No longer supported';\n\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\nvar GraphQLDeprecatedDirective = exports.GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [DirectiveLocation.FIELD_DEFINITION, DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: _scalars.GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a ' + 'suggestion for how to access supported similar data. Formatted ' + 'in [Markdown](https://daringfireball.net/projects/markdown/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n\n/**\n * The full list of specified directives.\n */\nvar specifiedDirectives = exports.specifiedDirectives = [GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective];"],"mappings":"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"},"metadata":{},"sourceType":"script"}